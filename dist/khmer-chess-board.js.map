{"version":3,"sources":["webpack://khmer-chess-board/webpack/universalModuleDefinition","webpack://khmer-chess-board/./index.js","webpack://khmer-chess-board/./node_modules/khmer-chess/index.js","webpack://khmer-chess-board/./node_modules/khmer-chess/src/KPGN.js","webpack://khmer-chess-board/./node_modules/khmer-chess/src/REN.js","webpack://khmer-chess-board/./node_modules/khmer-chess/src/board-helper.js","webpack://khmer-chess-board/./node_modules/khmer-chess/src/gen-mask.js","webpack://khmer-chess-board/./node_modules/khmer-chess/src/jsis.js","webpack://khmer-chess-board/./node_modules/khmer-chess/src/move-helper.js","webpack://khmer-chess-board/./node_modules/khmer-chess/src/ren-helper.js","webpack://khmer-chess-board/./src/index.js","webpack://khmer-chess-board/webpack/bootstrap","webpack://khmer-chess-board/webpack/startup"],"names":["root","factory","exports","module","define","amd","a","i","self","KhmerChess","require","PIECES_SVG","COLORS","TYPES","HORIZONTAL_CODE_LETTERS","TABLE_CLASS","Piece","type","color","PIECE_TYPE_TREY","PIECE_COLOR_WHITE","this","toUpperCase","SquarePiece","x","y","container","piece","isGraveyard","document","createElement","setPiece","h","v","drawPiece","classList","remove","add","Graveyard","squarePiece","squares","push","index","KhmerChessBoard","options","width","khmerChess","load","Error","minWidth","addCss","drawBoard","renderKhmerChess","squareWidth","_squareWidth","pieceFontSize","css","Object","values","forEach","encodeURIComponent","head","getElementsByTagName","style","appendChild","styleSheet","cssText","createTextNode","createTable","parent","table","createTbody","tbody","createTr","tr","createTd","td","j","cursor","squaresIndex","indexCode","keys","key","graveyardContainerHeight","height","trGraveyardContainer","tdGraveyardContainer","addEventListener","e","scrollLeft","wheelDelta","preventDefault","overflowX","overflowY","colSpan","padding","boxShadow","tableGraveyard","graveyardWidth","BORDER_WIDTH","trGraveyard","tdGraveyard","graveyard","_addNote","fSize","addBackground","target","tObjects","bgImg","obj","t","backgroundImage","backgroundRepeat","square","c","get","removePiece","p","board","arr","KPGN","MoveHelper","renHelper","renStr","toRen","renInstance","valid","error_number","error","message","toString","toMultiArray","pieces","kpgnInstance","toJson","kpgnJosn","result","reduce","s","subArr","rs","map","join","bottom","length","gyTStr","gyStr","gyBStr","graveyardStr","turn","move","squareId","moves","listener","REN","Player","id","name","Result","win","draw","lost","Move","from","to","jump","capture","Timer","totalSecond","currentWhite","currentBlack","kpgnJson","white","black","last","whiteWin","blackWin","event","date","location","players","m","ren","timer","PIECE_TYPE_BORK","boardHelper","jsis","DEFAULT_BOARD_STR","NOT_SET","isUndefined","toWhitePiece","isUpperCase","PIECE_COLOR_BLACK","toLowerCase","isWhite","Pos","indexOf","toPString","isNull","EMPTY_PIECE","Board","boardStr","Array","getSubBoardNumber","_","codeP","numToCodeP","newBoardStr","extract","replace","isValidPiecesString","poses","split","pos","str","reg","RegExp","$1","BOARD_SEPARATOR","toStringFull","compress","KqMoved","kqMovedStr","bh","whiteKing","PIECE_TYPE_SDECH","whiteQueen","PIECE_TYPE_NEANG","blackKing","blackQueen","KAttacked","kAttackedStr","CountDown","countdownStr","newCountdownStr","isStringNumber","Number","turnStr","kqMoved","countdown","invalidPiecesString","isInvalidPieceCount","piecesCount","filter","concat","toOrigin","k","sort","kAttacked","genMask","Rectangle","point","allPiecesString","PIECE_TYPE_TOUK","PIECE_TYPE_SES","PIECE_TYPE_KOL","ROW_NUMBER","ROW_FIRST_INDEX","ROW_LAST_INDEX","mask","onlyPiece","ruler","some","isValidPosXY","rect","isContainsPoint","isValidPiece","isBlack","res","nerdPosToXY","isNumber","Math","floor","nerdXyToPos","isPosInBoard","posInBoard","getCharPieceFromString","piecesString","charAt","getPieceProperties","code","pieceHash","PIECE_COLOR_EMPTY","getCharPieceInPos","getPieceInPos","isString","pr","convertMask","sign","getPieceCanMovePoses","_pos","getPieceCanMovePosesValid","distPiece","_poses","n","thisPos","_x","_y","_n","_s","abs","replacePiecesString","substring","injectPiece","pos1","pos2","isCharPiecesInBoard","getPieceCode","val","getKingWillInDanger","kingPos","numToCode","getKingInDanger","number","generatePosesCanMove","isHaveMoved","isHaveCaptured","getPiecesInBoard","filterPieceInBoard","prop","whitePieces","blackPieces","extractPiecesToArray","pieceAll","isStateCount","checkCountable","weaker","stronger","oppositeColor","checkCount","force","countChar","count","toukCount","getHashKey","getPieceKeyByProp","prop1","getPieceKeyByName","isValid","isNotEmpty","isValidString","isNaN","isArray","isFunction","f","isObject","o","isBoolean","b","isTrue","isValidBoolean","isFalse","isPoint","isValidObject","isValidNumber","isSize","size","isOdd","isEven","option","currentTurn","isNeangMoved","isSdechMoved","genCanMove","genCanMoveForAnother","whiteMoves","blackMoves","whiteKingInDanger","whiteKingWillInDanger","blackKingInDanger","blackKingWillInDanger","winColor","stuckColor","genMoves","isSdech","isNeang","canMoveIndexes","cleanMoves","splice","init","generateCanMoves","cleanPieceNoMove","anotherMoves","checkIfKingInDanger","genWinLost","getStuck","blackCountable","whiteCountable","countingBlack","countingWhite","fen","fenArr","WOOD_COLORS","filterId","SVG_FILTER","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__"],"mappings":"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","file":"khmer-chess-board.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n/*\n  ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓\n8 ┃   ┃   ┃   ┃   ┃ k ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n7 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n6 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n5 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n4 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n3 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n2 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n1 ┃   ┃   ┃   ┃ K ┃   ┃   ┃   ┃   ┃\n  ┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛\n    a   b   c   d   e   f   g   h\n  ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓\n  ┃ b ┃ h ┃ g ┃ q ┃ g ┃ h ┃ b ┃ f ┃ f ┃ f ┃ f ┃ f ┃ f ┃ f ┃ f ┃ F ┃ F ┃ F ┃ F ┃ F ┃ F ┃ F ┃ F ┃ B ┃ H ┃ G ┃ Q ┃ G ┃ H ┃ B ┃\n  ┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛\n */\n\"use strict\";\n\nconst { KhmerChess } = require('khmer-chess');\nconst { PIECES_SVG, COLORS, TYPES } = require('./src/index');\n\nconst COLUMN_NUMBER = 8;\nconst BORDER_WIDTH = 1\nconst MIN_SQUARE_WIDTH = 5\nconst TD_GRAVEYARD_NUMBER = 30;\nconst HORIZONTAL_CODE_LETTERS = 'abcdefgh';\nconst TABLE_CLASS = 'khmer-chess-board';\n\nclass Piece {\n    type = TYPES.PIECE_TYPE_TREY;\n    color = COLORS.PIECE_COLOR_WHITE;\n    get pCode() {\n        if (this.color == COLORS.PIECE_COLOR_WHITE) {\n            return this.type.toUpperCase();\n        }\n        return this.type;\n    }\n    constructor(type, color) {\n        this.type = type;\n        this.color = color;\n    }\n}\nclass SquarePiece {\n    x = 0;\n    y = 0;\n    get h() {\n        if (this.isGraveyard) {\n            return `${this.x}x`;\n        }\n        return HORIZONTAL_CODE_LETTERS[this.x];\n    }\n    get v() {\n        return this.y + 1;\n    }\n    get index() {\n        return this.y * COLUMN_NUMBER + this.x;\n    }\n    get indexCode() {\n        return `${this.h}${this.v}`;\n    }\n    isGraveyard = false;\n    container = document.createElement('td');\n    piece = null;\n    constructor(x, y, container, piece, isGraveyard) {\n        this.x = x;\n        this.y = y;\n        this.container = container;\n        this.setPiece(piece);\n        this.isGraveyard = isGraveyard;\n    }\n    removePiece() {\n        this.setPiece(null);\n    }\n    setPiece(piece) {\n        this.piece = piece;\n        this.drawPiece();\n    }\n    drawPiece() {\n        this.container.classList.remove('piece');\n        if (this.piece) {\n            this.container.classList.add('piece');\n            this.container.classList.add(`type-${this.piece.type}`);\n            this.container.classList.add(`color-${this.piece.color}`);\n        }\n    }\n}\nclass Graveyard {\n    squares = [];\n    push(squarePiece) {\n        this.squares.push(squarePiece);\n    }\n    get(index) {\n        return this.squares[index];\n    }\n}\n\nclass KhmerChessBoard {\n    options = {\n        width: 500,\n        container: null\n    };\n    squares = [];\n    squaresIndex = {};\n    graveyard = new Graveyard();\n    khmerChess = new KhmerChess();\n    constructor(options = {}) {\n        this.khmerChess.load('bhgqkghb/8/1ff5/8/8/FFFFFFFF/8/BHGKQGHB w ---- -- -.- ffffff');\n        if (!options.container) {\n            throw new Error('Container is required!');\n        }\n        this.options.container = options.container;\n\n        const minWidth = (COLUMN_NUMBER - 1) * BORDER_WIDTH + COLUMN_NUMBER * MIN_SQUARE_WIDTH;\n        if (options.width < minWidth) {\n            throw new Error(`Board width must more than ${minWidth}`);\n        }\n        if (options.width) {\n            this.options.width = options.width;\n        }\n\n        this.addCss();\n        this.drawBoard();\n        this.renderKhmerChess();\n    }\n    addCss() {\n        const squareWidth = this._squareWidth();\n        const pieceFontSize = this.options.width / 12;\n\n        let css = `\n          table.${TABLE_CLASS}  {\n            table-layout: fixed;\n            border-collapse: collapse;\n            border-spacing: 0px;\n            width: ${this.options.width}px;\n            height: ${this.options.width}px;\n            text-align: center;\n            border: 0px;\n            padding: 0px;\n            margin: auto;\n            background-color: white;\n          }\n          table.${TABLE_CLASS} tr {\n            width: ${this.options.width}px;\n            height: ${squareWidth}px;\n          }\n          table.${TABLE_CLASS} td {\n            user-select: none;\n            background-color: #f4d1a6;\n            border: 1px solid white;\n            padding: 0px;\n            margin: 0px;\n            max-width: ${squareWidth}px;\n            max-height: ${squareWidth}px;\n          }\n          table.${TABLE_CLASS} td, table.${TABLE_CLASS} td::before {\n            font-size: ${pieceFontSize}px;\n          }\n          table.${TABLE_CLASS} td.piece::before {\n            width: ${squareWidth}px;\n            height: ${squareWidth}px;\n            background-size: ${squareWidth}px ${squareWidth}px;\n            display: block;\n            content: ' ';\n          }\n        `;\n        Object.values(COLORS).forEach((color) => {\n            Object.values(TYPES).forEach((type) => {\n                css += `\n                table.${TABLE_CLASS} td.piece.type-${type}.color-${color}::before {\n                    background-image: url('data:image/svg+xml;utf8,${encodeURIComponent(PIECES_SVG[color + type])}');\n                }\n                  `;\n            });\n        });\n\n        const head = document.head || document.getElementsByTagName('head')[0];\n        const style = document.createElement('style');\n        head.appendChild(style);\n\n        style.type = 'text/css';\n        if (style.styleSheet) {\n            // This is required for IE8 and below.\n            style.styleSheet.cssText = css;\n        } else {\n            style.appendChild(document.createTextNode(css));\n        }\n    }\n    drawBoard() {\n        const squareWidth = this._squareWidth();\n\n        const createTable = (parent = this.options.container) => {\n            const table = document.createElement('table');\n            table.classList.add(TABLE_CLASS);\n            parent.appendChild(table);\n            return table;\n        }\n        const createTbody = (parent) => {\n            const tbody = document.createElement('tbody');\n            parent.appendChild(tbody);\n            return tbody;\n        }\n        const createTr = (parent) => {\n            const tr = document.createElement('tr');\n            parent.appendChild(tr);\n            return tr;\n        }\n        const createTd = (parent) => {\n            const td = document.createElement('td');\n            parent.appendChild(td);\n            return td;\n        }\n        const createDiv = (parent) => {\n            const div = document.createElement('div');\n            div.style.width = squareWidth;\n            div.style.height = squareWidth;\n            div.style.fontSize = this.options.width / 12;\n            div.innerText = 't';\n            parent.appendChild(div);\n            return\n        }\n\n        const table = createTable();\n        const tbody = createTbody(table);\n\n        for (let i = 0; i < COLUMN_NUMBER; i++) {\n            const tr = createTr(tbody);\n            for (let j = 0; j < COLUMN_NUMBER; j++) {\n                const td = createTd(tr);\n                td.style.cursor = 'pointer';\n                const piece = new Piece(TYPES.PIECE_TYPE_TREY, COLORS.PIECE_COLOR_WHITE);\n                const squarePiece = new SquarePiece(j, COLUMN_NUMBER - i - 1, td, piece);\n                this.squaresIndex[squarePiece.indexCode] = squarePiece;\n            }\n        }\n        Object.keys(this.squaresIndex).forEach((key) => {\n            this.squares[this.squaresIndex[key].index] = this.squaresIndex[key];\n        });\n\n        const graveyardContainerHeight = squareWidth + 10 * BORDER_WIDTH;\n        table.style.height += graveyardContainerHeight;\n        const trGraveyardContainer = createTr(tbody);\n        trGraveyardContainer.style.height = graveyardContainerHeight;\n        const tdGraveyardContainer = createTd(trGraveyardContainer);\n        tdGraveyardContainer.addEventListener('mousewheel', function (e) {\n            this.scrollLeft -= (e.wheelDelta);\n            e.preventDefault();\n        }, false);\n        tdGraveyardContainer.style.width = this.options.width;\n        tdGraveyardContainer.style.height = graveyardContainerHeight;\n        tdGraveyardContainer.style.overflowX = 'scroll';\n        tdGraveyardContainer.style.overflowY = 'hidden';\n        tdGraveyardContainer.colSpan = 8;\n        tdGraveyardContainer.style.padding = 8 * BORDER_WIDTH * this.options.width / 600;\n        tdGraveyardContainer.style.boxShadow = `inset 0 0 ${this.options.width / 60}px #000000`;\n        const tableGraveyard = createTable(tdGraveyardContainer);\n        const graveyardWidth = BORDER_WIDTH * (TD_GRAVEYARD_NUMBER - 1) + squareWidth * TD_GRAVEYARD_NUMBER;\n        tableGraveyard.style.width = graveyardWidth;\n        tableGraveyard.style.height = squareWidth;\n        const tbodyGraveyard = createTbody(tableGraveyard);\n        const trGraveyard = createTr(tbodyGraveyard);\n        trGraveyard.style.width = graveyardWidth;\n\n        for (let i = 0; i < TD_GRAVEYARD_NUMBER; i++) {\n            const tdGraveyard = createTd(trGraveyard);\n            const squarePiece = new SquarePiece(i, 0, tdGraveyard, null, true);\n            this.graveyard.push(squarePiece);\n        }\n\n        this._addNote();\n    };\n    _addNote() {\n        const squareWidth = this._squareWidth();\n        const fSize = 15 * this.options.width / 600;\n\n        const addBackground = (target, tObjects = []) => {\n            let bgImg = `url(\"data:image/svg+xml;utf8,`;\n            bgImg += `<svg xmlns='http://www.w3.org/2000/svg' version='1.1' height='${squareWidth}px' width='${squareWidth}px'>`;\n\n            tObjects.forEach((obj) => {\n                bgImg += `<text x='${obj.x}' y='${obj.y}' `;\n                bgImg += `fill='white' font-size='${fSize}'>${obj.t}</text>`;\n            })\n\n            bgImg += `</svg>\")`;\n            target.style.backgroundImage = bgImg;\n            target.style.backgroundRepeat = 'no-repeat';\n        }\n\n        const square = this.squaresIndex['a1'];\n        addBackground(square.container, [\n            {\n                x: squareWidth / 2 - squareWidth / 10,\n                y: squareWidth,\n                t: 'a'\n            }, {\n                x: 0,\n                y: squareWidth / 2 + squareWidth / 10,\n                t: '1'\n            }\n        ]);\n        square.container.style.backgroundRepeat = 'no-repeat';\n        for (let i = 1; i < COLUMN_NUMBER; i++) {\n            const c = HORIZONTAL_CODE_LETTERS[i];\n            const square = this.squaresIndex[`${c}1`];\n            addBackground(square.container, [{\n                x: squareWidth / 2 - squareWidth / 10,\n                y: squareWidth,\n                t: c\n            }]);\n        }\n        for (let i = 1; i < COLUMN_NUMBER; i++) {\n            const square = this.squaresIndex[`a${i + 1}`];\n            addBackground(square.container, [{\n                x: 0,\n                y: squareWidth / 2 + squareWidth / 10,\n                t: i + 1\n            }]);\n        }\n\n        for (let i = 0; i < TD_GRAVEYARD_NUMBER; i++) {\n            const square = this.graveyard.get(i);\n            addBackground(square.container, [{\n                x: squareWidth / 2 - squareWidth / 10,\n                y: squareWidth,\n                t: i + 1\n            }]);\n        }\n    }\n    _squareWidth() {\n        const squareWidth = (this.options.width - (COLUMN_NUMBER - 1) * BORDER_WIDTH) / COLUMN_NUMBER;\n        return squareWidth;\n    }\n    renderKhmerChess() {\n        for (let i = 0; i < TD_GRAVEYARD_NUMBER; i++) {\n            const square = this.graveyard.get(i);\n            square.removePiece();\n        }\n        this.khmerChess.graveyard().forEach((p, i) => {\n            const square = this.graveyard.get(i);\n            square.setPiece(new Piece(p.type, p.color));\n        });\n        this.khmerChess.board().forEach((arr, i) => {\n            arr.forEach((p, j) => {\n                const square = this.squares[i * COLUMN_NUMBER + j];\n                square.removePiece();\n                if (p) {\n                    square.setPiece(new Piece(p.type, p.color));\n                }\n            });\n        });\n    }\n}\n\nmodule.exports = { KhmerChessBoard };","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst { KPGN } = require(\"./src/KPGN\");\nconst MoveHelper = require(\"./src/move-helper\");\nconst renHelper = require(\"./src/ren-helper\");\n\nclass KhmerChess {\n  moveHelper = new MoveHelper();\n  renInstance = renHelper.toRen();\n  kpgnInstance = new KPGN();\n  constructor(renStr) {\n    this.renInstance = renHelper.toRen(renStr);\n  }\n  load(renStr) {\n    this.renInstance = renHelper.toRen(renStr);\n  }\n  reset() {\n    this.renInstance = renHelper.toRen();\n  }\n  /**\n   * Generate all available moves of current turn\n   */\n  moves() {\n    // TODO:\n    return [];\n  }\n  /**\n   * Is King is attacked (អុក), return under attack color\n   * \n   * return color|null\n   */\n  in_check() {\n    // TODO:\n    return null;\n  }\n  /**\n   * Is win, return lost color\n   * \n   * return color|null\n   */\n  in_checkmate() {\n    // TODO:\n    return null;\n  }\n  /**\n   * Is stuck (អាប់), return stuck color\n   * \n   * return color|null\n   */\n  in_stalemate() {\n    // TODO:\n    return null;\n  }\n  /**\n   * Is draw (ស្មើ)\n   * \n   * return boolean\n   */\n  in_draw() {\n    // TODO:\n    return false;\n  }\n  /**\n   * Is draw by counting over (ស្មើ​ដោយ​ការ​រាប់), return counter color\n   * \n   * return color|null\n   */\n  in_draw_count() {\n    // TODO:\n    return null;\n  }\n  /**\n   * Is game over, win|stuck|win-timeout|draw-count-over|win-resign\n   */\n  game_over() {\n    // TODO:\n    return false;\n  }\n  validate_ren(renStr) {\n    try {\n      renHelper.toRen(renStr);\n      return { valid: true, error_number: 0, error: 'No errors.' };\n    } catch (error) {\n      return { valid: false, error_number: 1, error: error.message };\n    }\n  }\n  ren() {\n    return this.renInstance.toString();\n  }\n  board() {\n    return this.renInstance.board.toMultiArray();\n  }\n  graveyard() {\n    return this.renInstance.graveyard.pieces;\n  }\n  // Khmer Portable Game Notation <file-name>.kpgn.json\n  kpgn() {\n    return this.kpgnInstance.toJson();\n  }\n  load_kpgn(kpgnJosn, options) {\n    this.kpgnInstance = new KPGN(kpgnJosn);\n  }\n  ascii() {\n    const arr = this.renInstance.board.toMultiArray();\n    let str = `  ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓`;\n    const result = arr.reduce((s, subArr, i) => {\n      const rs = subArr.map((p) => ` ${p ? p.toString() : ' '} `).join('┃');\n      const bottom = i == arr.length - 1 ? '┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛' : '┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫';\n      s += `\n${8 - i} ┃${rs}┃\n  ${bottom}`;\n      return s;\n    }, str);\n    const gyTStr = this.renInstance.graveyard.pieces.map(() => '━━━').join('┳');\n    const gyStr = this.renInstance.graveyard.pieces.map((p) => ` ${p ? p.toString() : ' '} `).join('┃');\n    const gyBStr = this.renInstance.graveyard.pieces.map(() => '━━━').join('┻');\n    const graveyardStr = `  ┏${gyTStr}┓\n  ┃${gyStr}┃\n  ┗${gyBStr}┛`;\n    return `${result}\n    a   b   c   d   e   f   g   h\n${graveyardStr}`\n  }\n  turn() {\n    this.renInstance.turn;\n  }\n  /**\n   * Move piece regarding provided Move object\n   *\n   * @param Move move\n   */\n  move(move) {\n    // TODO:\n  }\n  /**\n   * Undo last move\n   * \n   * return {Piece, Move}|null\n   */\n  undo() {\n    // TODO:\n    return false;\n  }\n  /**\n   * Move all pieces to graveyard except kings\n   * -> 4k3/8/8/8/8/8/8/3K4 w ---- -- -.- bhgqghbffffffffFFFFFFFFBHGQGHB\n   */\n  clear() {\n    this.renInstance = renHelper.toRen('4k3/8/8/8/8/8/8/3K4 w ---- -- -.- bhgqghbffffffffFFFFFFFFBHGQGHB');\n  }\n  /**\n   * Move piece to square id location\n   *\n   * @param Piece piece\n   * @param String squareId\n   *\n   * return Piece|null\n   */\n  put(piece, squareId) {\n    // TODO: move piece to square id location\n    return null;\n  }\n  /**\n   * Get piece at square id location\n   *\n   * @param String squareId 'a1'\n   *\n   * return Piece|null\n   */\n  get(squareId) {\n    // TODO: get piece at square id location\n    return null;\n  }\n  /**\n   * Move piece to graveyard\n   *\n   * @param String squareId 'a1'\n   *\n   * return Piece|null\n   */\n  remove(squareId) {\n    // TODO: move piece to graveyard\n    return null;\n  }\n  history() {\n    return this.kpgnInstance.moves;\n  }\n  addUpdateRenderEventListener(listener) {\n    // TODO:\n  }\n  removeUpdateRenderEventListener(listener) {\n    // TODO:\n  }\n}\n\nmodule.exports = {\n  KhmerChess,\n};","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst { REN } = require(\"./REN\");\n\nclass Player {\n    name = '';\n    id = '';\n    constructor(id = '', name = '') {\n        this.id = id;\n        this.name = name;\n    }\n    toJson() {\n        return {\n            id: this.id,\n            name: this.name\n        };\n    }\n}\nclass Result {\n    win = 0;\n    draw = 0;\n    lost = 0;\n    constructor(win = 0, draw = 0, lost = 0) {\n        this.win = win;\n        this.draw = draw;\n        this.lost = lost;\n    }\n    toJson() {\n        return {\n            win: this.win,\n            draw: this.draw,\n            lost: this.lost\n        };\n    }\n}\nclass Move {\n    from = '';\n    to = '';\n    jump = false;\n    capture = ''\n    constructor(from = '', to = '', jump = false, capture = '') {\n        this.from = from;\n        this.to = to;\n        this.jump = jump;\n        this.capture = capture;\n    }\n    toJson() {\n        return {\n            from: this.from,\n            to: this.to,\n            jump: this.jump,\n            capture: this.capture\n        };\n    }\n}\nclass Timer {\n    totalSecond = 0;\n    currentWhite = 0;\n    currentBlack = 0;\n    constructor(totalSecond = 0, currentWhite = 0, currentBlack = 0) {\n        this.totalSecond = totalSecond;\n        this.currentWhite = currentWhite;\n        this.currentBlack = currentBlack;\n    }\n    toJson() {\n        return {\n            totalSecond: this.totalSecond,\n            currentWhite: this.currentWhite,\n            currentBlack: this.currentBlack\n        };\n    }\n}\n\nclass KPGN {\n    event = '';\n    date = '';\n    location = '';\n    players = {\n        white: new Player(),\n        black: new Player(),\n    }\n    result = {\n        last: {\n            whiteWin: false,\n            blackWin: false\n        },\n        white: new Result()\n    };\n    moves = [new Move()];\n    ren = new REN();\n    timer = new Timer();\n    constructor(kpgnJson) {\n    }\n    toJson() {\n        return {\n            event: this.event,\n            date: this.date,\n            location: this.location,\n            players: {\n                white: this.players.white.toJson(),\n                black: this.players.black.toJson(),\n            },\n            result: {\n                last: {\n                    whiteWin: this.result.last.whiteWin,\n                    blackWin: this.result.last.blackWin\n                },\n                white: this.result.white.toJson()\n            },\n            moves: this.moves.map((m) => m.toJson()),\n            ren: this.ren.toString(),\n            timer: this.timer.toJson()\n        }\n    }\n}\n\nmodule.exports = {\n    KPGN,\n    Player,\n    Result,\n    Move,\n    Timer\n};\n","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\nconst { PIECE_TYPE_BORK } = require(\"./board-helper\");\n/**\n * Raksa-Eng Notation\n * fen: <pieces on board> <turn w|b> <king&queen moved ----|SNsn> <king attack --|Kk> <countdown -.-|-.4> <pieces in graveyard>\n * e.g: bhgqkghb/8/ffffffff/8/8/FFFFFFFF/8/BHGKQGHB\n */\n\nconst boardHelper = require(\"./board-helper\");\nconst jsis = require(\"./jsis\");\n\n// bhgqkghb/8/ffffffff/8/8/FFFFFFFF/8/BHGKQGHB w ---- -- -.-\nconst DEFAULT_BOARD_STR = 'bhgqkghb/8/ffffffff/8/8/FFFFFFFF/8/BHGKQGHB';\nconst NOT_SET = '-';\nconst STRING_COUNT = 'B2F8G2H2K1Q1b2f8g2h2k1q1';\n\nclass Piece {\n    type = boardHelper.PIECE_TYPE_TREY;\n    color = boardHelper.PIECE_COLOR_WHITE;\n    constructor(t, c) {\n        if (jsis.isUndefined(c)) {\n            if (jsis.isUndefined(t)) {\n                t = boardHelper.toWhitePiece(boardHelper.PIECE_TYPE_TREY);\n            }\n            if (jsis.isUpperCase(t)) {\n                c = boardHelper.PIECE_COLOR_WHITE;\n            } else {\n                c = boardHelper.PIECE_COLOR_BLACK;\n            }\n            t = t.toLowerCase();\n        }\n        this.type = t;\n        this.color = c;\n    }\n    toOrigin() {\n        if (this.type == PIECE_TYPE_BORK) {\n            return new Piece(this.color, boardHelper.PIECE_TYPE_TREY);\n        }\n        return this;\n    }\n    toString() {\n        let c = this.type;\n        if (boardHelper.isWhite(this.color)) {\n            c = boardHelper.toWhitePiece(c);\n        }\n        return c;\n    }\n}\nclass Pos {\n    h = 'a';\n    v = 1;\n    x = 0;\n    y = 0;\n    p = new Piece();\n    constructor(p, h, v) {\n        this.p = p\n        if (jsis.isUndefined(v)) {\n            v = h.v;\n            h = h.h;\n        }\n        this.h = h;\n        this.v = v;\n        this.x = boardHelper.HORIZONTAL_CODE_LETTERS.indexOf(this.h);\n        this.y = this.v - 1;\n    }\n    toString() {\n        return `${this.toPString()}${this.h}${this.v}`;\n    }\n    toPString() {\n        return jsis.isNull(this.p) ? boardHelper.EMPTY_PIECE : this.p.toString();\n    }\n}\n/**\n * bhgqkghb/8/ffffffff/8/8/FFFFFFFF/8/BHGKQGHB => bhgqkghb/......../ffffffff/......../......../FFFFFFFF/......../BHGKQGHB\n */\nclass Board {\n    poses = Array.from({\n        length: boardHelper.getSubBoardNumber(),\n    }, (_, i) => {\n        const codeP = boardHelper.numToCodeP(i);\n        return new Pos(null, codeP);\n    });\n    constructor(boardStr) {\n        if (jsis.isUndefined(boardStr)) {\n            boardStr = DEFAULT_BOARD_STR;\n        }\n        const newBoardStr = this.extract(boardStr).replace(/\\//g, '');\n        if (newBoardStr.length < boardHelper.getSubBoardNumber() ||\n            !boardHelper.isValidPiecesString(newBoardStr)) {\n            throw new Error(`Invalid board string ${boardStr}`);\n        }\n        this.poses = newBoardStr.split('').map((c, i) => {\n            const codeP = boardHelper.numToCodeP(i);\n            return new Pos(c == boardHelper.EMPTY_PIECE ? null : new Piece(c), codeP);\n        });\n    }\n    toMultiArray() {\n        const arr = [[], [], [], [], [], [], [], []];\n        this.poses.forEach((pos) => {\n            arr[pos.y][pos.x] = pos.p;\n        });\n        return arr;\n    }\n    compress(str) {\n        const reg = new RegExp(`(\\\\${boardHelper.EMPTY_PIECE}+)`, 'g');\n        return str.replace(reg, ($1) => $1.length);\n    }\n    extract(str) {\n        return str.replace(/(\\d+)/g, ($1) => {\n            // $1 == 3 => '...', bh6 => 'bh......'\n            return Array.from({\n                length: $1\n            }, () => boardHelper.EMPTY_PIECE).join('');\n        });\n    }\n    toStringFull() {\n        const str = this.poses.map((pos, i) => {\n            const p = pos.toPString();\n            if (i && i % 8 == 0 && i != boardHelper.getSubBoardNumber()) {\n                return `${boardHelper.BOARD_SEPARATOR}${p}`;\n            }\n            return p;\n        }).join('');\n        return str;\n    }\n    toString() {\n        let str = this.toStringFull();\n        str = this.compress(str);\n        return str;\n    }\n}\nclass KqMoved {\n    whiteKing = false;\n    whiteQueen = false;\n    blackKing = false;\n    blackQueen = false;\n    constructor(kqMovedStr = '') {\n        const bh = boardHelper;\n        this.whiteKing = !!~kqMovedStr.indexOf(bh.toWhitePiece(bh.PIECE_TYPE_SDECH));\n        this.whiteQueen = !!~kqMovedStr.indexOf(bh.toWhitePiece(bh.PIECE_TYPE_NEANG));\n        this.blackKing = !!~kqMovedStr.indexOf(bh.PIECE_TYPE_SDECH);\n        this.blackQueen = !!~kqMovedStr.indexOf(bh.PIECE_TYPE_NEANG);\n    }\n    toString() {\n        let str = `${this.whiteKing ? boardHelper.toWhitePiece(boardHelper.PIECE_TYPE_SDECH) : NOT_SET}`;\n        str += `${this.whiteQueen ? boardHelper.toWhitePiece(boardHelper.PIECE_TYPE_NEANG) : NOT_SET}`;\n        str += `${this.blackKing ? boardHelper.PIECE_TYPE_SDECH : NOT_SET}`;\n        str += `${this.blackQueen ? boardHelper.PIECE_TYPE_NEANG : NOT_SET}`;\n        return str;\n    }\n}\nclass KAttacked {\n    whiteKing = false;\n    blackKing = false;\n    constructor(kAttackedStr = '') {\n        const bh = boardHelper;\n        this.whiteKing = !!~kAttackedStr.indexOf(bh.toWhitePiece(bh.PIECE_TYPE_SDECH));\n        this.blackKing = !!~kAttackedStr.indexOf(bh.PIECE_TYPE_SDECH);\n    }\n    toString() {\n        let str = `${this.whiteKing ? boardHelper.toWhitePiece(boardHelper.PIECE_TYPE_SDECH) : NOT_SET}`;\n        str += `${this.blackKing ? boardHelper.PIECE_TYPE_SDECH : NOT_SET}`;\n        return str;\n    }\n}\n// 23.-\nclass CountDown {\n    white = null;\n    black = null;\n    constructor(countdownStr = '') {\n        const newCountdownStr = countdownStr.split('.');\n        this.white = jsis.isStringNumber(newCountdownStr[0]) ? Number(newCountdownStr[0]) : null;\n        this.black = jsis.isStringNumber(newCountdownStr[1]) ? Number(newCountdownStr[1]) : null;\n        if (!jsis.isNull(this.white) && !jsis.isNull(this.white)) {\n            throw new Error(`Invalid countdown string ${countdownStr}`);\n        }\n    }\n    toString() {\n        let str = `${jsis.isNull(this.white) ? NOT_SET : this.white}`;\n        str += `.${jsis.isNull(this.black) ? NOT_SET : this.black}`;\n        return str;\n    }\n}\nclass Graveyard {\n    pieces = [];\n    constructor(graveyardStr = '') {\n        if (graveyardStr.length > 30 ||\n            !boardHelper.isValidPiecesString(graveyardStr, true)) {\n            throw new Error(`Invalid graveyard string ${graveyardStr}`);\n        }\n        this.pieces = graveyardStr.split('').map((c, i) => {\n            const p = new Piece(c);\n            if (p.type == boardHelper.PIECE_TYPE_SDECH) {\n                throw new Error(`King cannot die graveyard:${graveyardStr}`);\n            }\n            return p;\n        });\n    }\n    toString() {\n        return this.pieces.map((p) => {\n            return p.toString();\n        }).join('');\n    }\n}\nclass REN {\n    board = new Board();\n    turn = boardHelper.PIECE_COLOR_WHITE;\n    kqMoved = new KqMoved();\n    kAttacked = new KAttacked();\n    countdown = new CountDown();\n    graveyard = new Graveyard();\n    constructor(boardStr, turnStr = boardHelper.PIECE_COLOR_WHITE,\n        kqMovedStr, kAttackedStr, countdownStr, graveyardStr) {\n        this.board = new Board(boardStr);\n        this.turn = turnStr;\n        this.kqMoved = new KqMoved(kqMovedStr);\n        this.kqMoved = new KAttacked(kAttackedStr);\n        this.countdown = new CountDown(countdownStr);\n        this.graveyard = new Graveyard(graveyardStr);\n        const invalidPiecesString = this.isInvalidPieceCount();\n        if (invalidPiecesString) {\n            throw new Error(`Invalid piece string board:${boardStr}, graveyard:${graveyardStr}, count:${invalidPiecesString}`);\n        }\n    }\n    isInvalidPieceCount() {\n        const pieces = this.board.poses.map((pos) => {\n            return pos.p;\n        }).filter((p) => {\n            return !jsis.isNull(p);\n        }).concat(this.graveyard.pieces).map((p) => {\n            return p.toOrigin();\n        });\n        const piecesCount = pieces.reduce((obj, p) => {\n            obj[p.toString()] = obj[p.toString()] || 0;\n            obj[p.toString()]++;\n            return obj;\n        }, {});\n        const str = Object.keys(piecesCount).map((k) => `${k}${piecesCount[k]}`).sort().join('');\n        if (str == STRING_COUNT) {\n            return false;\n        }\n        return str;\n    }\n    toString() {\n        let str = this.board.toString();\n        str += ` ${this.turn.toString()}`;\n        str += ` ${this.kqMoved.toString()}`;\n        str += ` ${this.kAttacked.toString()}`;\n        str += ` ${this.countdown.toString()}`;\n        str += ` ${this.graveyard.toString()}`;\n        return str;\n    }\n}\n\nmodule.exports = {\n    Piece,\n    Pos,\n    Board,\n    KqMoved,\n    CountDown,\n    Graveyard,\n    REN,\n    DEFAULT_BOARD_STR\n};","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst jsis = require(\"./jsis\");\nconst genMask = require(\"./gen-mask\");\n\nclass Rectangle {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    isContainsPoint(point) {\n        const { x, y } = point;\n        const isContainsPoint = this.x <= x &&\n            (this.x + this.width) >= x &&\n            this.y <= y &&\n            (this.y + this.height) >= y;\n        return isContainsPoint;\n    }\n}\nlet allPiecesString = null;\nconst boardHelper = {\n    HORIZONTAL_CODE_LETTERS: \"abcdefgh\",\n\n    PIECE_COLOR_WHITE: \"w\",\n    PIECE_COLOR_BLACK: \"b\",\n\n    PIECE_TYPE_TOUK: \"b\", // Boat\n    PIECE_TYPE_SES: \"h\", // Horse\n    PIECE_TYPE_KOL: \"g\", // General\n    PIECE_TYPE_SDECH: \"k\", // King\n    PIECE_TYPE_NEANG: \"q\", // Queen\n    PIECE_TYPE_TREY: \"f\", // Fish\n    PIECE_TYPE_BORK: \"t\", // Transform fish\n    EMPTY_PIECE: \".\",\n    BOARD_SEPARATOR: \"/\",\n\n    ROW_NUMBER: 8,\n    ROW_FIRST_INDEX: 0,\n    ROW_LAST_INDEX: 7,\n\n    mask: null,\n\n    isValidPiecesString(str, onlyPiece) {\n        if (jsis.isNull(allPiecesString)) {\n            allPiecesString = [\n                this.PIECE_TYPE_TOUK,\n                this.PIECE_TYPE_SES,\n                this.PIECE_TYPE_KOL,\n                this.PIECE_TYPE_SDECH,\n                this.PIECE_TYPE_NEANG,\n                this.PIECE_TYPE_TREY,\n                this.PIECE_TYPE_BORK,\n                this.toWhitePiece(this.PIECE_TYPE_TOUK),\n                this.toWhitePiece(this.PIECE_TYPE_SES),\n                this.toWhitePiece(this.PIECE_TYPE_KOL),\n                this.toWhitePiece(this.PIECE_TYPE_SDECH),\n                this.toWhitePiece(this.PIECE_TYPE_NEANG),\n                this.toWhitePiece(this.PIECE_TYPE_TREY),\n                this.toWhitePiece(this.PIECE_TYPE_BORK),\n                this.EMPTY_PIECE,\n                this.BOARD_SEPARATOR,\n            ]\n        }\n        const ruler = onlyPiece ? allPiecesString.filter((c) => {\n            return !~[this.EMPTY_PIECE, this.BOARD_SEPARATOR].indexOf(c);\n        }) : allPiecesString;\n        return !str.split('').some((c) => {\n            return !~ruler.indexOf(c);\n        });\n    },\n\n    toWhitePiece: (str) => str.toUpperCase(),\n\n    isValidPosXY(point, y) {\n        if (jsis.isUndefined(point)) {\n            return false;\n        }\n        if (!jsis.isUndefined(y)) {\n            point = this.p(point, y);\n        }\n        return !jsis.isUndefined(point.x) && !jsis.isUndefined(point.y) &&\n            this.rect(0, 0, this.ROW_LAST_INDEX, this.ROW_LAST_INDEX).isContainsPoint(point);\n    },\n    isValidPiece: (piece) => piece != boardHelper.EMPTY_PIECE,\n    isWhite: (c) => c === boardHelper.PIECE_COLOR_WHITE,\n    isBlack: (c) => c === boardHelper.PIECE_COLOR_BLACK,\n    codeP: (h, v) => ({ h, v }),\n    p: (x, y) => ({ x, y }),\n    res: (width, height) => ({ width, height }),\n    rect: (x, y, width, height) => new Rectangle(x, y, width, height),\n    getSubBoardNumber: () => boardHelper.ROW_NUMBER * boardHelper.ROW_NUMBER,\n    nerdPosToXY(p) {\n        if (jsis.isNumber(p.x) && jsis.isNumber(p.y)) {\n            return p;\n        }\n        if (jsis.isNumber(p)) {\n            const x = p % this.ROW_NUMBER;\n            const y = Math.floor(p / this.ROW_NUMBER);\n            return this.p(x, y);\n        }\n        return null;\n    },\n    nerdXyToPos(point, y) {\n        if (!jsis.isUndefined(y)) {\n            return point + y * this.ROW_NUMBER;\n        }\n        return point.x + point.y * this.ROW_NUMBER;\n    },\n    isPosInBoard(posInBoard) {\n        return jsis.isNumber(posInBoard) &&\n            posInBoard >= 0 && posInBoard <= this.getSubBoardNumber() - 1;\n    },\n    getCharPieceFromString(piecesString, posInBoard) {\n        if (this.isPosInBoard(posInBoard) && piecesString.length === this.getSubBoardNumber()) {\n            return piecesString.charAt(posInBoard);\n        }\n        return this.EMPTY_PIECE;\n    },\n    getPieceProperties(code) {\n        const h = this.pieceHash[code];\n        return {\n            color: h ? h[0] : this.PIECE_COLOR_EMPTY,\n            type: h ? h[1] : this.EMPTY_PIECE,\n        };\n    },\n    getCharPieceInPos(posInBoard, piecesString) {\n        return this.getCharPieceFromString(piecesString, posInBoard);\n    },\n    getPieceInPos(posInBoard, y, piecesString) {\n        if (jsis.isNumber(y)) {\n            posInBoard = this.nerdXyToPos(posInBoard, y);\n        } else if (jsis.isString(y)) {\n            piecesString = y;\n        }\n        const piece = this.getCharPieceInPos(posInBoard, piecesString);\n        let color = this.PIECE_COLOR_WHITE, type = this.PIECE_TYPE_TREY;\n        if (this.isValidPiece(piece)) {\n            const pr = this.getPieceProperties(piece);\n            color = pr.color;\n            type = pr.type;\n        }\n        return {\n            isValidPiece: this.isValidPiece(piece),\n            color: color,\n            type: type,\n        };\n    },\n    convertMask(p, pos, color) {\n        const sign = this.isWhite(color) ? 1 : -1;\n        pos = this.nerdPosToXY(pos);\n        p.x = p.x * sign + pos.x;\n        p.y = p.y * sign + pos.y;\n        return this.isValidPosXY(p) ? this.nerdXyToPos(p) : null;\n    },\n    getPieceCanMovePoses(type, pos, color) {\n        const poses = [];\n        this.mask = this.mask || genMask(this);\n        this.mask[type].forEach((_pos) => {\n            const p = this.convertMask(this.p(_pos[0], _pos[1]), pos, color);\n            if (!jsis.isNull(p)) {\n                poses.push(p);\n            }\n        });\n        return poses;\n    },\n    getPieceCanMovePosesValid(type, pos, color, piecesString) {\n        const _poses = this.getPieceCanMovePoses(type, pos, color);\n        let p, distPiece;\n        const poses = [];\n        const n = _poses.length, thisPos = this.nerdPosToXY(pos);\n        for (let i = 0; i < n; i++) {\n            p = this.nerdPosToXY(_poses[i]);\n            distPiece = this.getPieceInPos(p.x, p.y, piecesString);\n            if (distPiece.isValidPiece) {\n                if (color === distPiece.color ||\n                    type === this.PIECE_TYPE_TREY && p.x === thisPos.x) {\n                    p = null;\n                }\n            } else {\n                if (type === this.PIECE_TYPE_TREY && p.x != thisPos.x) {\n                    p = null;\n                }\n            }\n            if (!jsis.isNull(p) && type === this.PIECE_TYPE_TOUK) {\n                const _x = thisPos.x,\n                    _y = thisPos.y;\n                let _n, _s;\n                if (p.x === thisPos.x) {\n                    _n = Math.abs(p.y - thisPos.y);\n                    _s = thisPos.y < p.y ? 1 : -1;\n                    while (--_n > 0) {\n                        if (this.getPieceInPos(_x, _y + _s * _n, piecesString).isValidPiece) {\n                            p = null;\n                            break;\n                        }\n                    }\n                } else if (p.y === thisPos.y) {\n                    _n = Math.abs(p.x - thisPos.x);\n                    _s = thisPos.x < p.x ? 1 : -1;\n                    while (--_n > 0) {\n                        if (this.getPieceInPos(_x + _s * _n, _y, piecesString).isValidPiece) {\n                            p = null;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!jsis.isNull(p)) {\n                poses.push(_poses[i]);\n            }\n        }\n        return poses;\n    },\n    replacePiecesString(piecesString, c, p) {\n        return piecesString.substring(0, p) + c + piecesString.substring(p + 1);\n    },\n    injectPiece(piecesString, pos1, pos2) {\n        const c = piecesString.charAt(pos1);\n        if (!this.isCharPiecesInBoard(c, piecesString)) {\n            return null;\n        }\n        piecesString = this.replacePiecesString(piecesString, this.EMPTY_PIECE, pos1);\n        piecesString = this.replacePiecesString(piecesString, c, pos2);\n        return piecesString;\n    },\n    getPieceCode(color, type) {\n        const val = color + type;\n        for (const k in this.pieceHash) {\n            if (val === this.pieceHash[k]) {\n                return k;\n            }\n        }\n        return this.EMPTY_PIECE;\n    },\n    getKingWillInDanger(color, piecesString) {\n        const kingPos = piecesString.indexOf(this.getPieceCode(color, this.PIECE_TYPE_SDECH));\n        const n = piecesString.length;\n        let _poses, p, j;\n        for (let i = 0; i < n; i++) {\n            p = this.getPieceInPos(i, piecesString);\n            if (p.isValidPiece && p.color != color && p.type === this.PIECE_TYPE_TOUK) {\n                _poses = this.getPieceCanMovePoses(p.type, i, p.color, piecesString);\n                for (j = 0; j < _poses.length; j++) {\n                    if (_poses[j] === kingPos) {\n                        return [this.numToCode(i), this.numToCode(kingPos)];\n                    }\n                }\n            }\n        }\n        return null;\n    },\n    getKingInDanger(color, piecesString) {\n        const kingPos = piecesString.indexOf(this.getPieceCode(color, this.PIECE_TYPE_SDECH));\n        const n = piecesString.length;\n        let _poses, p, j;\n        for (let i = 0; i < n; i++) {\n            p = this.getPieceInPos(i, piecesString);\n            if (p.isValidPiece && p.color != color) {\n                _poses = this.getPieceCanMovePosesValid(p.type, i, p.color, piecesString);\n                for (j = 0; j < _poses.length; j++) {\n                    if (_poses[j] === kingPos) {\n                        return [this.numToCode(i), this.numToCode(kingPos)];\n                    }\n                }\n            }\n        }\n        return null;\n    },\n    numToCodeP(number) {\n        return this.codeP(this.HORIZONTAL_CODE_LETTERS[number % 8], ((number / 8 | 0) + 1));\n    },\n    numToCode(number) {\n        const codeP = this.numToCodeP(number);\n        return `${codeP.h}${codeP.v}`;\n    },\n    generatePosesCanMove(type, pos, color, piecesString, isHaveMoved) {\n        let p;\n        const _poses = this.getPieceCanMovePosesValid(type, pos, color, piecesString);\n        const isHaveCaptured = this.isHaveCaptured(piecesString);\n        if (type === this.PIECE_TYPE_SDECH) {\n            if (!isHaveCaptured && !isHaveMoved) {\n                p = this.convertMask(this.p(2, 1), pos, color);\n                if (p && !this.getPieceInPos(p, piecesString).isValidPiece) {\n                    _poses.push(p);\n                }\n                p = this.convertMask(this.p(-2, 1), pos, color);\n                if (p && !this.getPieceInPos(p, piecesString).isValidPiece) {\n                    _poses.push(p);\n                }\n            }\n        } else if (type === this.PIECE_TYPE_NEANG) {\n            if (!isHaveCaptured && !isHaveMoved) {\n                p = this.convertMask(this.p(-0, 2), pos, color);\n                if (p && !this.getPieceInPos(p, piecesString).isValidPiece) {\n                    _poses.push(p);\n                }\n            }\n        }\n        const n = _poses.length;\n        const poses = [];\n        let str;\n        for (let i = 0; i < n; i++) {\n            str = this.injectPiece(piecesString, pos, _poses[i]);\n            if (jsis.isNull(this.getKingInDanger(color, str))) {\n                poses.push(this.numToCode(_poses[i]));\n            }\n        }\n        return poses;\n    },\n    isCharPiecesInBoard(c, piecesString) {\n        return !!~piecesString.indexOf(c);\n    },\n    getPiecesInBoard(piecesString) {\n        return piecesString.split(\"\").filter((c) => {\n            return this.isValidPiece(c);\n        });\n    },\n    isHaveCaptured(piecesString) {\n        return this.getPiecesInBoard(piecesString).length < this.ROW_NUMBER * 4;\n    },\n    filterPieceInBoard(piecesString) {\n        const whitePieces = [];\n        const blackPieces = [];\n        let c, prop, piece;\n        for (let i = 0; i < piecesString.length; i++) {\n            c = piecesString.charAt(i);\n            if (this.isValidPiece(c)) {\n                prop = this.getPieceProperties(c);\n                piece = {\n                    color: prop.color,\n                    type: prop.type,\n                    index: i,\n                    code: this.numToCode(i),\n                };\n                if (this.isWhite(piece.color)) {\n                    whitePieces.push(piece);\n                } else {\n                    blackPieces.push(piece);\n                }\n            }\n        }\n        return {\n            whitePieces: whitePieces,\n            blackPieces: blackPieces,\n        };\n    },\n    extractPiecesToArray(piecesString) {\n        piecesString = piecesString.split(\"\");\n        const pieceAll = {\n            [this.PIECE_COLOR_BLACK]: [],\n            [this.PIECE_COLOR_WHITE]: [],\n        };\n        piecesString.forEach((e) => {\n            if (e === this.EMPTY_PIECE) {\n                return;\n            }\n            const prop = this.getPieceProperties(e);\n            pieceAll[prop.color].push(prop.type);\n        });\n        return pieceAll;\n    },\n    isStateCount(c, piecesString) {\n        const allPieces = this.extractPiecesToArray(piecesString);\n        return allPieces[c].length === 1;\n    },\n    checkCountable(color, piecesString) {\n        const pieceAll = this.extractPiecesToArray(piecesString);\n        const weaker = pieceAll[color];\n        const stronger = pieceAll[this.oppositeColor(color)];\n        return weaker.length <= 2 && stronger.length >= 2;\n    },\n    checkCount(color, piecesString, force) {\n        const countChar = (str, c) => {\n            return str.join(\"\").split(c).length - 1;\n        };\n        const charExist = (str, c) => {\n            return !!~str.indexOf(c);\n        };\n\n        const pieceAll = this.extractPiecesToArray(piecesString);\n        const weaker = pieceAll[color];\n        const stronger = pieceAll[this.oppositeColor(color)];\n        if (weaker.length === 1 && stronger.length > 1) {\n            if (!charExist(stronger, this.PIECE_TYPE_TREY)) {\n                let count = 64;\n                const toukCount = countChar(stronger, this.PIECE_TYPE_TOUK);\n                if (toukCount) {\n                    count = toukCount > 1 ? 8 : 16;\n                } else if (countChar(stronger, this.PIECE_TYPE_KOL) > 1) {\n                    count = 22;\n                } else if (countChar(stronger, this.PIECE_TYPE_SES) > 1) {\n                    count = 32;\n                } else if (countChar(stronger, this.PIECE_TYPE_KOL)) {\n                    count = 44;\n                }\n                return [stronger.length + 1, count];\n            }\n            return [0, 64];\n        } else if (force && this.checkCountable(color, piecesString)) {\n            return [0, 64];\n        }\n        return null;\n    },\n\n    getHashKey(val) {\n        const keys = Object.keys(this.pieceHash).filter((key) => {\n            return this.pieceHash[key] === val;\n        });\n        return keys.length === 1 ? keys[0] : this.EMPTY_PIECE;\n    },\n    getPieceKeyByProp(prop) {\n        let prop1;\n        for (const key in this.pieceHash) {\n            prop1 = this.getPieceProperties(key);\n            if (prop.color === prop1.color && prop.type === prop1.type) {\n                return key;\n            }\n        }\n        return this.EMPTY_PIECE;\n    },\n    getPieceKeyByName(name) {\n        return this.getPieceKeyByProp({\n            color: name[0],\n            type: name[1],\n        });\n    },\n    oppositeColor(color) {\n        return this.isWhite(color) ? this.PIECE_COLOR_BLACK : this.PIECE_COLOR_WHITE;\n    },\n};\nboardHelper.pieceHash = {\n    \"a\": boardHelper.PIECE_COLOR_WHITE + boardHelper.PIECE_TYPE_TOUK,\n    \"b\": boardHelper.PIECE_COLOR_WHITE + boardHelper.PIECE_TYPE_SES,\n    \"c\": boardHelper.PIECE_COLOR_WHITE + boardHelper.PIECE_TYPE_KOL,\n    \"d\": boardHelper.PIECE_COLOR_WHITE + boardHelper.PIECE_TYPE_SDECH,\n    \"e\": boardHelper.PIECE_COLOR_WHITE + boardHelper.PIECE_TYPE_NEANG,\n    \"f\": boardHelper.PIECE_COLOR_WHITE + boardHelper.PIECE_TYPE_TREY,\n    \"g\": boardHelper.PIECE_COLOR_WHITE + boardHelper.PIECE_TYPE_BORK,\n    \"h\": boardHelper.PIECE_COLOR_BLACK + boardHelper.PIECE_TYPE_TOUK,\n    \"i\": boardHelper.PIECE_COLOR_BLACK + boardHelper.PIECE_TYPE_SES,\n    \"j\": boardHelper.PIECE_COLOR_BLACK + boardHelper.PIECE_TYPE_KOL,\n    \"k\": boardHelper.PIECE_COLOR_BLACK + boardHelper.PIECE_TYPE_SDECH,\n    \"l\": boardHelper.PIECE_COLOR_BLACK + boardHelper.PIECE_TYPE_NEANG,\n    \"m\": boardHelper.PIECE_COLOR_BLACK + boardHelper.PIECE_TYPE_TREY,\n    \"n\": boardHelper.PIECE_COLOR_BLACK + boardHelper.PIECE_TYPE_BORK,\n};\n\nmodule.exports = boardHelper;","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst boardHelper = require(\"./board-helper\");\n\nfunction genMask() {\n    const mask = {};\n    mask[boardHelper.PIECE_TYPE_TOUK] = [\n        [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8],\n        [0, -1], [0, -2], [0, -3], [0, -4], [0, -5], [0, -6], [0, -7], [0, -8],\n        [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0],\n        [-1, 0], [-2, 0], [-3, 0], [-4, 0], [-5, 0], [-6, 0], [-7, 0], [-8, 0],\n    ];\n    mask[boardHelper.PIECE_TYPE_SES] = [\n        [-1, -2],\n        [1, -2],\n        [-2, -1],\n        [2, -1],\n        [-1, 2],\n        [1, 2],\n        [-2, 1],\n        [2, 1],\n    ];\n    mask[boardHelper.PIECE_TYPE_NEANG] = [\n        [-1, -1],\n        [1, -1],\n        [-1, 1],\n        [1, 1],\n    ];\n    mask[boardHelper.PIECE_TYPE_KOL] = mask[boardHelper.PIECE_TYPE_NEANG].concat([\n        [0, 1],\n    ]);\n    mask[boardHelper.PIECE_TYPE_SDECH] = mask[boardHelper.PIECE_TYPE_KOL].concat([\n        [0, -1],\n        [1, 0],\n        [-1, 0],\n    ]);\n    mask[boardHelper.PIECE_TYPE_TREY] = [\n        [0, 1],\n        [-1, 1],\n        [1, 1],\n    ];\n    mask[boardHelper.PIECE_TYPE_BORK] = mask[boardHelper.PIECE_TYPE_NEANG];\n    return mask;\n}\n\nmodule.exports = genMask;","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst jsis = {\n    isValid(v) {\n        return !this.isNull(v) && !this.isUndefined(v);\n    },\n    isNull(v) {\n        return v === null;\n    },\n    isUndefined(v) {\n        return typeof v === \"undefined\";\n    },\n    isString(str) {\n        return this.isValid(str) && typeof str === \"string\";\n    },\n    isNotEmpty(str) {\n        return this.isValidString(str) && str != \"\";\n    },\n    isNumber(n) {\n        return this.isValid(n) && typeof n === \"number\";\n    },\n    isStringNumber(n) {\n        return this.isString(n) && n != \"\" && !isNaN(Number(n));\n    },\n    isArray(arr) {\n        return this.isValid(arr) && arr instanceof Array;\n    },\n    isFunction(f) {\n        return this.isValid(f) && typeof f === \"function\";\n    },\n    isObject(o) {\n        return this.isValid(o) && o instanceof Object;\n    },\n    isBoolean(b) {\n        return this.isValid(b) && typeof b === \"boolean\";\n    },\n    isTrue(b) {\n        return this.isValidBoolean(b) && b;\n    },\n    isFalse(b) {\n        return this.isValidBoolean(b) && !b;\n    },\n    isPoint(p) {\n        const isPoint = this.isValid(p) &&\n            this.isValidObject(p) &&\n            this.isValidNumber(p.x) &&\n            this.isValidNumber(p.y);\n        return isPoint;\n    },\n    isSize(size) {\n        const isSize = this.isValid(size) &&\n            this.isValidObject(size) &&\n            this.isValidNumber(size.width) &&\n            this.isValidNumber(size.height);\n        return isSize;\n    },\n    isOdd(n) {\n        return !!(n % 2);\n    },\n    isEven(n) {\n        return !this.isOdd(n);\n    },\n    isUpperCase(str) {\n        return str === str.toUpperCase();\n    }\n};\n\nmodule.exports = jsis;","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst boardHelper = require(\"./board-helper\");\n\nclass MoveHelper {\n    init(option) {\n        this.piecesString = option.piecesString;\n        this.currentTurn = option.currentTurn;\n        this.isNeangMoved = option.isNeangMoved;\n        this.isSdechMoved = option.isSdechMoved;\n\n        this.genCanMove = option.genCanMove;\n        this.genCanMoveForAnother = option.genCanMoveForAnother;\n\n        this.whiteMoves = [];\n        this.blackMoves = [];\n\n        this.whiteKingInDanger = null;\n        this.whiteKingWillInDanger = null;\n        this.blackKingInDanger = null;\n        this.blackKingWillInDanger = null;\n\n        this.winColor = null;\n        this.stuckColor = null;\n    }\n\n    generateCanMoves() {\n        const filter = boardHelper.filterPieceInBoard(this.piecesString);\n        this.whiteMoves = filter.whitePieces;\n        this.blackMoves = filter.blackPieces;\n        const genMoves = (pieces) => {\n            for (let i = 0; i < pieces.length; i++) {\n                const type = pieces[i].type;\n                const isSdech = type === boardHelper.PIECE_TYPE_SDECH;\n                const isNeang = type === boardHelper.PIECE_TYPE_NEANG;\n                let isHaveMoved = this.isSdechMoved;\n                if (!isSdech) {\n                    isHaveMoved = isNeang ? this.isNeangMoved : false;\n                }\n                const canMoveIndexes = boardHelper.generatePosesCanMove(\n                    type,\n                    pieces[i].index,\n                    pieces[i].color,\n                    this.piecesString,\n                    isHaveMoved,\n                );\n                pieces[i].canMoveIndexes = canMoveIndexes;\n            }\n        };\n        genMoves(this.whiteMoves);\n        genMoves(this.blackMoves);\n    }\n\n    cleanPieceNoMove() {\n        const cleanMoves = (pieces) => {\n            let isTrue = true;\n            while (isTrue) {\n                isTrue = false;\n                for (let i = 0; i < pieces.length; i++) {\n                    const piece = pieces[i];\n                    if (!piece.canMoveIndexes || !piece.canMoveIndexes.length) {\n                        pieces.splice(i, 1);\n                        isTrue = true;\n                        break;\n                    }\n                }\n            }\n        };\n        cleanMoves(this.whiteMoves);\n        cleanMoves(this.blackMoves);\n    }\n\n    checkIfKingInDanger() {\n        this.whiteKingInDanger = boardHelper.getKingInDanger(\n            boardHelper.PIECE_COLOR_WHITE,\n            this.piecesString,\n        );\n        this.whiteKingWillInDanger = boardHelper.getKingWillInDanger(\n            boardHelper.PIECE_COLOR_WHITE,\n            this.piecesString,\n        );\n        this.blackKingInDanger = boardHelper.getKingInDanger(\n            boardHelper.PIECE_COLOR_BLACK,\n            this.piecesString,\n        );\n        this.blackKingWillInDanger = boardHelper.getKingWillInDanger(\n            boardHelper.PIECE_COLOR_BLACK,\n            this.piecesString,\n        );\n    }\n\n    genWinLost() {\n        if (this.whiteKingInDanger && !this.whiteMoves.length) {\n            this.winColor = boardHelper.PIECE_COLOR_BLACK;\n        } else if (this.blackKingInDanger && !this.blackMoves.length) {\n            this.winColor = boardHelper.PIECE_COLOR_WHITE;\n        }\n    }\n\n    getStuck() {\n        if (this.winColor) {\n            return;\n        }\n        if (boardHelper.isWhite(this.currentTurn) && !this.whiteMoves.length) {\n            this.stuckColor = boardHelper.PIECE_COLOR_WHITE;\n        } else if (boardHelper.isBlack(this.currentTurn) && !this.blackMoves.length) {\n            this.stuckColor = boardHelper.PIECE_COLOR_BLACK;\n        }\n    }\n\n    calcCanMove(option) {\n        this.init(option);\n        this.generateCanMoves();\n        this.cleanPieceNoMove();\n        let moves = [];\n        if (this.genCanMove) {\n            moves = boardHelper.isWhite(this.currentTurn) ? this.whiteMoves : this.blackMoves;\n        }\n        let anotherMoves = [];\n        if (this.genCanMoveForAnother) {\n            anotherMoves = boardHelper.isBlack(this.currentTurn) ? this.whiteMoves : this.blackMoves;\n        }\n        return {\n            moves,\n            anotherMoves,\n        };\n    }\n    calcState(option) {\n        this.init(option);\n        this.generateCanMoves();\n        this.cleanPieceNoMove();\n\n        this.checkIfKingInDanger();\n        this.genWinLost();\n        this.getStuck();\n        return {\n            blackKingInDanger: this.blackKingInDanger,\n            whiteKingInDanger: this.whiteKingInDanger,\n            blackKingWillInDanger: this.blackKingWillInDanger,\n            whiteKingWillInDanger: this.whiteKingWillInDanger,\n            winColor: this.winColor,\n            stuckColor: this.stuckColor,\n            blackCountable: boardHelper.checkCountable(\n                boardHelper.PIECE_COLOR_BLACK,\n                this.piecesString,\n            ),\n            whiteCountable: boardHelper.checkCountable(\n                boardHelper.PIECE_COLOR_WHITE,\n                this.piecesString,\n            ),\n        };\n    }\n    calCount(option) {\n        return {\n            countingBlack: boardHelper.checkCount(\n                boardHelper.PIECE_COLOR_BLACK,\n                option.piecesString, option.force,\n            ),\n            countingWhite: boardHelper.checkCount(\n                boardHelper.PIECE_COLOR_WHITE,\n                option.piecesString, option.force,\n            ),\n        };\n    }\n}\n\nmodule.exports = MoveHelper;","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst { REN, DEFAULT_BOARD_STR } = require('./REN');\nconst jsis = require('./jsis');\n\nconst renHelper = {\n    toRen(fen) {\n        if (jsis.isUndefined(fen)) {\n            fen = DEFAULT_BOARD_STR;\n        }\n        const fenArr = fen.split(' ');\n        return new REN(fenArr[0], fenArr[1], fenArr[2], fenArr[3], fenArr[4], fenArr[5]);\n    }\n};\n\nmodule.exports = renHelper;","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst COLORS = {\n    PIECE_COLOR_WHITE: \"w\",\n    PIECE_COLOR_BLACK: \"b\",\n};\nconst WOOD_COLORS = {\n    WHITE: '#ffffff',\n    BLACK: '#422007',\n}\n\nconst TYPES = {\n    PIECE_TYPE_TOUK: \"b\", // Boat\n    PIECE_TYPE_SES: \"h\", // Horse\n    PIECE_TYPE_KOL: \"g\", // General\n    PIECE_TYPE_SDECH: \"k\", // King\n    PIECE_TYPE_NEANG: \"q\", // Queen\n    PIECE_TYPE_TREY: \"f\", // Fish\n    PIECE_TYPE_BORK: \"t\", // Transform fish\n};\nconst filterId = 'drop-shadow';\nconst SVG_FILTER = `<defs>\n<filter id=\"${filterId}\" height=\"130%\">\n  <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"5\"/> \n  <feOffset dx=\"5\" dy=\"5\" result=\"offsetblur\"/> \n  <feMerge> \n    <feMergeNode/>\n    <feMergeNode in=\"SourceGraphic\"/> \n  </feMerge>\n</filter>\n</defs>`;\nconst PIECES_SVG = {\n    [`${COLORS.PIECE_COLOR_WHITE}${TYPES.PIECE_TYPE_TOUK}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.WHITE}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_WHITE}${TYPES.PIECE_TYPE_SES}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.WHITE}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_WHITE}${TYPES.PIECE_TYPE_KOL}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.WHITE}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_WHITE}${TYPES.PIECE_TYPE_SDECH}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.WHITE}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_WHITE}${TYPES.PIECE_TYPE_NEANG}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.WHITE}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_WHITE}${TYPES.PIECE_TYPE_TREY}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.WHITE}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_WHITE}${TYPES.PIECE_TYPE_BORK}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.WHITE}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_BLACK}${TYPES.PIECE_TYPE_TOUK}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.BLACK}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_BLACK}${TYPES.PIECE_TYPE_SES}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.BLACK}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_BLACK}${TYPES.PIECE_TYPE_KOL}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.BLACK}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_BLACK}${TYPES.PIECE_TYPE_SDECH}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.BLACK}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_BLACK}${TYPES.PIECE_TYPE_NEANG}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.BLACK}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_BLACK}${TYPES.PIECE_TYPE_TREY}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.BLACK}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_BLACK}${TYPES.PIECE_TYPE_BORK}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.BLACK}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n};\n\nmodule.exports = {\n    PIECES_SVG,\n    COLORS,\n    TYPES\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(497);\n"],"sourceRoot":""}