{"version":3,"sources":["webpack://khmer-chess-board/webpack/universalModuleDefinition","webpack://khmer-chess-board/./index.js","webpack://khmer-chess-board/./node_modules/khmer-chess/index.js","webpack://khmer-chess-board/./node_modules/khmer-chess/src/KPGN.js","webpack://khmer-chess-board/./node_modules/khmer-chess/src/KhmerChess.js","webpack://khmer-chess-board/./node_modules/khmer-chess/src/REN.js","webpack://khmer-chess-board/./node_modules/khmer-chess/src/board-helper.js","webpack://khmer-chess-board/./node_modules/khmer-chess/src/gen-mask.js","webpack://khmer-chess-board/./node_modules/khmer-chess/src/jsis.js","webpack://khmer-chess-board/./node_modules/khmer-chess/src/move-helper.js","webpack://khmer-chess-board/./node_modules/khmer-chess/src/ren-helper.js","webpack://khmer-chess-board/./src/BoardManager.js","webpack://khmer-chess-board/./src/GraveyardManager.js","webpack://khmer-chess-board/./src/SoundManager.js","webpack://khmer-chess-board/./src/SquarePiece.js","webpack://khmer-chess-board/./src/addCss.js","webpack://khmer-chess-board/./src/addCssNote.js","webpack://khmer-chess-board/./src/appendCss.js","webpack://khmer-chess-board/./src/audio.js","webpack://khmer-chess-board/./src/constance.js","webpack://khmer-chess-board/./src/drawBoardAndGraveyard.js","webpack://khmer-chess-board/./src/svg.js","webpack://khmer-chess-board/./src/uniqueIdHelper.js","webpack://khmer-chess-board/./public/assets/Capture.mp3","webpack://khmer-chess-board/./public/assets/Check.mp3","webpack://khmer-chess-board/./public/assets/Move.mp3","webpack://khmer-chess-board/webpack/bootstrap","webpack://khmer-chess-board/webpack/startup","webpack://khmer-chess-board/webpack/runtime/define property getters","webpack://khmer-chess-board/webpack/runtime/global","webpack://khmer-chess-board/webpack/runtime/hasOwnProperty shorthand","webpack://khmer-chess-board/webpack/runtime/publicPath"],"names":["root","factory","exports","module","define","amd","a","i","self","GraveyardManager","require","config","khmerChess","SoundManager","BoardManager","constance","addCss","addCssNote","drawBoardAndGraveyard","uniqueIdHelper","BORDER_WIDTH","MIN_SQUARE_WIDTH","KhmerChess","boardHelper","KhmerChessBoard","options","width","uniqueClassName","genId","container","Error","this","minWidth","ROW_NUMBER","graveyardManager","boardManager","setNote","applyPieces","renStr","load","receivePieces","graveyard","board","elements","document","querySelectorAll","console","log","forEach","element","parentElement","removeChild","soundManager","name","version","REN","renHelper","KPGN","Player","id","Result","win","draw","lost","Move","from","to","jump","capture","Timer","totalSecond","currentWhite","currentBlack","kpgnJson","white","black","last","whiteWin","blackWin","event","date","location","players","toJson","result","moves","map","m","ren","toString","timer","MoveHelper","toRen","renInstance","valid","error_number","error","message","toMultiArray","pieces","kpgnInstance","kpgnJosn","arr","reduce","s","subArr","rs","p","join","bottom","length","gyTStr","gyStr","gyBStr","graveyardStr","turn","move","piece","squareId","listener","PIECE_TYPE_BORK","jsis","DEFAULT_BOARD_STR","NOT_SET","Piece","type","color","PIECE_TYPE_TREY","PIECE_COLOR_WHITE","isUndefined","toWhitePiece","isUpperCase","PIECE_COLOR_BLACK","toBlackPiece","c","isWhite","Pos","h","v","x","HORIZONTAL_CODE_LETTERS","indexOf","y","toPString","isNull","EMPTY_PIECE","Board","boardStr","Array","getSubBoardNumber","_","codeP","numToCodeP","newBoardStr","extract","replace","isValidPiecesString","poses","split","pos","str","reg","RegExp","$1","BOARD_SEPARATOR","toStringFull","compress","KqMoved","kqMovedStr","bh","whiteKing","PIECE_TYPE_SDECH","whiteQueen","PIECE_TYPE_NEANG","blackKing","blackQueen","KAttacked","kAttackedStr","CountDown","countdownStr","newCountdownStr","isStringNumber","Number","Graveyard","turnStr","kqMoved","countdown","invalidPiecesString","isInvalidPieceCount","piecesCount","filter","concat","toOrigin","obj","Object","keys","k","sort","kAttacked","genMask","Rectangle","height","point","allPiecesString","HORIZONTAL_NOTE_LETTERS","VERTICAL_NOTE_LETTERS","HORIZONTAL_NOTE_LETTERS_ASCII","VERTICAL_NOTE_LETTERS_ASCII","PIECE_TYPE_TOUK","PIECE_TYPE_SES","PIECE_TYPE_KOL","ROW_FIRST_INDEX","ROW_LAST_INDEX","mask","getPieceCharArray","getColorArray","onlyPiece","ruler","some","toUpperCase","toLowerCase","isValidPosXY","rect","isContainsPoint","isValidPiece","isBlack","res","nerdPosToXY","isNumber","Math","floor","nerdXyToPos","indexCodeToPos","code","pointToIndexCode","xyToIndexCode","posToIndexCode","isPosInBoard","posInBoard","getCharPieceFromString","piecesString","charAt","getPieceProperties","pieceHash","PIECE_COLOR_EMPTY","getCharPieceInPos","getPieceInPos","isString","pr","convertMask","sign","getPieceCanMovePoses","_pos","push","getPieceCanMovePosesValid","distPiece","_poses","n","thisPos","_x","_y","_n","_s","abs","replacePiecesString","substring","injectPiece","pos1","pos2","isCharPiecesInBoard","getPieceCode","val","getKingWillInDanger","j","kingPos","numToCode","getKingInDanger","number","generatePosesCanMove","isHaveMoved","isHaveCaptured","getPiecesInBoard","filterPieceInBoard","prop","whitePieces","blackPieces","index","extractPiecesToArray","pieceAll","e","isStateCount","checkCountable","weaker","stronger","oppositeColor","checkCount","force","countChar","count","toukCount","getHashKey","key","getPieceKeyByProp","prop1","getPieceKeyByName","isValid","isNotEmpty","isValidString","isNaN","isArray","isFunction","f","isObject","o","isBoolean","b","isTrue","isValidBoolean","isFalse","isPoint","isValidObject","isValidNumber","isSize","size","isOdd","isEven","option","currentTurn","isNeangMoved","isSdechMoved","genCanMove","genCanMoveForAnother","whiteMoves","blackMoves","whiteKingInDanger","whiteKingWillInDanger","blackKingInDanger","blackKingWillInDanger","winColor","stuckColor","genMoves","isSdech","isNeang","canMoveIndexes","cleanMoves","splice","init","generateCanMoves","cleanPieceNoMove","anotherMoves","checkIfKingInDanger","genWinLost","getStuck","blackCountable","whiteCountable","countingBlack","countingWhite","fen","fenArr","BOARD_NOTE_V_PREFIX_CLASS","BOARD_NOTE_H_PREFIX_CLASS","khmerChessBoard","squarePiece","_squares","find","square","get","isUpsideDown","backupPiecesList","clone","backupSelectedList","getSelectedSquares","clearSelectedSquares","removePiecesFromSquares","applyFlippingFlag","clonedSquare","getByXY","setPiece","select","isSelected","unselect","removePiece","setFlipped","setOnClick","addClassName","TD_GRAVEYARD_NUMBER","GRAVEYARD_NOTE_PREFIX_CLASS","squares","_piecesFromKhmerChess","applyPiecesFromKhmerChess","AUDIO","isEnable","check","_addSound","src","sound","createElement","setAttribute","style","display","body","appendChild","flag","MOVE_FLAG","play","CAPTURE_FLAG","CHECK_FLAG","SELECTED_CLASS_NAME","PIECE_CLASS_NAME","ATTACKED_ID_NAME","FLIPPED_CLASS","genBackgroundNote","SquarePiece","isGraveyard","removeClassName","className","classList","add","remove","contains","hasClassName","onclick","tObjects","squareWidth","fSize","backgroundImage","div","PIECES_SVG","svgCSS","WOOD_COLORS","CSS_TABLE_SELECTOR","CSS_PSEUDO_HIGHLIGHT","CSS_PSEUDO_PIECE","appendCss","sqWidth","pieceFontSize","selector","css","woodColor","BLACK","WHITE","attackedSVG","attacked","notAttackedSVG","notAttacked","encodeURIComponent","CSS_PSEUDO_NOTE","bgImg","t","hx","vy","head","getElementsByTagName","styleSheet","cssText","createTextNode","TABLE_CLASS","createTable","parent","table","createTbody","tbody","createTr","tr","createTd","td","put","graveyardContainerHeight","trGraveyardContainer","tdGraveyardContainer","addEventListener","scrollLeft","wheelDelta","preventDefault","overflowX","overflowY","colSpan","padding","boxShadow","tableGraveyard","graveyardWidth","trGraveyard","tdGraveyard","filterId","SVG_FILTER","text","svg","randomString","characters","charactersLength","random","_idList","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","defineProperty","enumerable","g","globalThis","Function","window","prototype","hasOwnProperty","call","scriptUrl","importScripts","currentScript","scripts"],"mappings":"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","file":"khmer-chess-board.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */\n\n/*\n  ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓\n8 ┃   ┃   ┃   ┃   ┃ k ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n7 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n6 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n5 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n4 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n3 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n2 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n1 ┃   ┃   ┃   ┃ K ┃   ┃   ┃   ┃   ┃\n  ┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛\n    a   b   c   d   e   f   g   h\n  ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓\n  ┃ b ┃ h ┃ g ┃ q ┃ g ┃ h ┃ b ┃ f ┃ f ┃ f ┃ f ┃ f ┃ f ┃ f ┃ f ┃ F ┃ F ┃ F ┃ F ┃ F ┃ F ┃ F ┃ F ┃ B ┃ H ┃ G ┃ Q ┃ G ┃ H ┃ B ┃\n  ┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛\n */\n'use strict';\n\nconst { GraveyardManager } = require('./src/GraveyardManager');\nconst config = require('./package.json');\nconst khmerChess = require('khmer-chess');\nconst { SoundManager } = require('./src/SoundManager');\nconst { BoardManager } = require('./src/BoardManager');\nconst constance = require('./src/constance');\nconst addCss = require('./src/addCss');\nconst addCssNote = require('./src/addCssNote');\nconst drawBoardAndGraveyard = require('./src/drawBoardAndGraveyard');\nconst uniqueIdHelper = require('./src/uniqueIdHelper');\n\nconst {\n    BORDER_WIDTH,\n    MIN_SQUARE_WIDTH\n} = constance;\n\nconst { KhmerChess, boardHelper } = khmerChess;\n\nclass KhmerChessBoard {\n    static name = config.name;\n    static version = config.version;\n    options = {\n        width: 500,\n        uniqueClassName: `kcb-${uniqueIdHelper.genId()}`\n    };\n\n    container = null;\n    graveyardManager = null;\n    boardManager = null;\n    soundManager = new SoundManager();\n    khmerChess = new KhmerChess();\n    constructor(options = {}) {\n        if (!options.container) {\n            throw new Error('Container is required!');\n        }\n        this.container = options.container;\n\n        const minWidth = (boardHelper.ROW_NUMBER - 1) * BORDER_WIDTH + boardHelper.ROW_NUMBER * MIN_SQUARE_WIDTH;\n        if (options.width < minWidth) {\n            throw new Error(`Board width must more than ${minWidth}`);\n        }\n        if (options.width) {\n            this.options.width = options.width;\n        }\n        if (options.width) {\n            this.options.width = options.width;\n        }\n\n        this.graveyardManager = new GraveyardManager(this, this.options);\n        this.boardManager = new BoardManager(this, this.options);\n\n        addCss({\n            uniqueClassName: this.options.uniqueClassName,\n            width: this.options.width\n        });\n        addCssNote({\n            uniqueClassName: this.options.uniqueClassName,\n            width: this.options.width\n        });\n        drawBoardAndGraveyard({\n            uniqueClassName: this.options.uniqueClassName,\n            width: this.options.width,\n            container: this.container,\n            boardManager: this.boardManager,\n            graveyardManager: this.graveyardManager\n        });\n        this.boardManager.setNote();\n        this.graveyardManager.setNote();\n        this.applyPieces();\n    }\n\n    loadRen(renStr) {\n        this.khmerChess.load(renStr);\n        this.applyPieces();\n    }\n\n    applyPieces() {\n        this.graveyardManager.receivePieces(this.khmerChess.graveyard());\n        this.boardManager.receivePieces(this.khmerChess.board());\n    }\n\n    destroy() {\n        const elements = document.querySelectorAll(`.${this.options.uniqueClassName}`);\n        console.log(elements);\n        elements.forEach((element) => {\n            element.parentElement.removeChild(element);\n        });\n        this.container = null;\n        this.graveyardManager = null;\n        this.boardManager = null;\n        this.soundManager = null;\n        this.khmerChess = null;\n    }\n}\n\nconsole.log(KhmerChess.name, KhmerChess.version);\nconsole.log(KhmerChessBoard.name, KhmerChessBoard.version);\n\nmodule.exports = { KhmerChessBoard, GraveyardManager, ...khmerChess, ...constance };\n","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst { KhmerChess } = require('./src/KhmerChess');\nconst boardHelper = require('./src/board-helper');\nconst REN = require('./src/REN');\nconst renHelper = require('./src/ren-helper');\nconst KPGN = require('./src/KPGN');\n\nmodule.exports = {\n  KhmerChess,\n  boardHelper,\n  ...REN,\n  renHelper,\n  KPGN,\n};","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst { REN } = require(\"./REN\");\n\nclass Player {\n    name = '';\n    id = '';\n    constructor(id = '', name = '') {\n        this.id = id;\n        this.name = name;\n    }\n    toJson() {\n        return {\n            id: this.id,\n            name: this.name\n        };\n    }\n}\nclass Result {\n    win = 0;\n    draw = 0;\n    lost = 0;\n    constructor(win = 0, draw = 0, lost = 0) {\n        this.win = win;\n        this.draw = draw;\n        this.lost = lost;\n    }\n    toJson() {\n        return {\n            win: this.win,\n            draw: this.draw,\n            lost: this.lost\n        };\n    }\n}\nclass Move {\n    from = '';\n    to = '';\n    jump = false;\n    capture = ''\n    constructor(from = '', to = '', jump = false, capture = '') {\n        this.from = from;\n        this.to = to;\n        this.jump = jump;\n        this.capture = capture;\n    }\n    toJson() {\n        return {\n            from: this.from,\n            to: this.to,\n            jump: this.jump,\n            capture: this.capture\n        };\n    }\n}\nclass Timer {\n    totalSecond = 0;\n    currentWhite = 0;\n    currentBlack = 0;\n    constructor(totalSecond = 0, currentWhite = 0, currentBlack = 0) {\n        this.totalSecond = totalSecond;\n        this.currentWhite = currentWhite;\n        this.currentBlack = currentBlack;\n    }\n    toJson() {\n        return {\n            totalSecond: this.totalSecond,\n            currentWhite: this.currentWhite,\n            currentBlack: this.currentBlack\n        };\n    }\n}\n\nclass KPGN {\n    event = '';\n    date = '';\n    location = '';\n    players = {\n        white: new Player(),\n        black: new Player(),\n    }\n    result = {\n        last: {\n            whiteWin: false,\n            blackWin: false\n        },\n        white: new Result()\n    };\n    moves = [new Move()];\n    ren = new REN();\n    timer = new Timer();\n    constructor(kpgnJson) {\n    }\n    toJson() {\n        return {\n            event: this.event,\n            date: this.date,\n            location: this.location,\n            players: {\n                white: this.players.white.toJson(),\n                black: this.players.black.toJson(),\n            },\n            result: {\n                last: {\n                    whiteWin: this.result.last.whiteWin,\n                    blackWin: this.result.last.blackWin\n                },\n                white: this.result.white.toJson()\n            },\n            moves: this.moves.map((m) => m.toJson()),\n            ren: this.ren.toString(),\n            timer: this.timer.toJson()\n        }\n    }\n}\n\nmodule.exports = {\n    KPGN,\n    Player,\n    Result,\n    Move,\n    Timer\n};\n","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst { KPGN } = require(\"./KPGN\");\nconst MoveHelper = require(\"./move-helper\");\nconst renHelper = require(\"./ren-helper\");\nconst config = require('../package.json');\n\nclass KhmerChess {\n  static name = config.name;\n  static version = config.version;\n  moveHelper = new MoveHelper();\n  renInstance = renHelper.toRen();\n  kpgnInstance = new KPGN();\n  constructor(renStr) {\n    this.renInstance = renHelper.toRen(renStr);\n  }\n  load(renStr) {\n    this.renInstance = renHelper.toRen(renStr);\n  }\n  reset() {\n    this.renInstance = renHelper.toRen();\n  }\n  /**\n   * Generate all available moves of current turn\n   */\n  moves() {\n    // TODO:\n    return [];\n  }\n  /**\n   * Is King is attacked (អុក), return under attack color\n   * \n   * return color|null\n   */\n  in_check() {\n    // TODO:\n    return null;\n  }\n  /**\n   * Is win, return lost color\n   * \n   * return color|null\n   */\n  in_checkmate() {\n    // TODO:\n    return null;\n  }\n  /**\n   * Is stuck (អាប់), return stuck color\n   * \n   * return color|null\n   */\n  in_stalemate() {\n    // TODO:\n    return null;\n  }\n  /**\n   * Is draw (ស្មើ)\n   * \n   * return boolean\n   */\n  in_draw() {\n    // TODO:\n    return false;\n  }\n  /**\n   * Is draw by counting over (ស្មើ​ដោយ​ការ​រាប់), return counter color\n   * \n   * return color|null\n   */\n  in_draw_count() {\n    // TODO:\n    return null;\n  }\n  /**\n   * Is game over, win|stuck|win-timeout|draw-count-over|win-resign\n   */\n  game_over() {\n    // TODO:\n    return false;\n  }\n  validate_ren(renStr) {\n    try {\n      renHelper.toRen(renStr);\n      return { valid: true, error_number: 0, error: 'No errors.' };\n    } catch (error) {\n      return { valid: false, error_number: 1, error: error.message };\n    }\n  }\n  ren() {\n    return this.renInstance.toString();\n  }\n  board() {\n    return this.renInstance.board.toMultiArray();\n  }\n  graveyard() {\n    return this.renInstance.graveyard.pieces;\n  }\n  // Khmer Portable Game Notation <file-name>.kpgn.json\n  kpgn() {\n    return this.kpgnInstance.toJson();\n  }\n  load_kpgn(kpgnJosn, options) {\n    this.kpgnInstance = new KPGN(kpgnJosn);\n  }\n  ascii() {\n    const arr = this.renInstance.board.toMultiArray();\n    let str = `  ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓`;\n    const result = arr.reduce((s, subArr, i) => {\n      const rs = subArr.map((p) => ` ${p ? p.toString() : ' '} `).join('┃');\n      const bottom = i == arr.length - 1 ? '┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛' : '┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫';\n      s += `\n${8 - i} ┃${rs}┃\n  ${bottom}`;\n      return s;\n    }, str);\n    const gyTStr = this.renInstance.graveyard.pieces.map(() => '━━━').join('┳');\n    const gyStr = this.renInstance.graveyard.pieces.map((p) => ` ${p ? p.toString() : ' '} `).join('┃');\n    const gyBStr = this.renInstance.graveyard.pieces.map(() => '━━━').join('┻');\n    const graveyardStr = `  ┏${gyTStr}┓\n  ┃${gyStr}┃\n  ┗${gyBStr}┛`;\n    return `${result}\n    a   b   c   d   e   f   g   h\n${graveyardStr}`\n  }\n  turn() {\n    this.renInstance.turn;\n  }\n  /**\n   * Move piece regarding provided Move object\n   *\n   * @param Move move\n   */\n  move(move) {\n    // TODO:\n  }\n  /**\n   * Undo last move\n   * \n   * return {Piece, Move}|null\n   */\n  undo() {\n    // TODO:\n    return false;\n  }\n  /**\n   * Move all pieces to graveyard except kings\n   * -> 4k3/8/8/8/8/8/8/3K4 w ---- -- -.- bhgqghbffffffffFFFFFFFFBHGQGHB\n   */\n  clear() {\n    this.renInstance = renHelper.toRen('4k3/8/8/8/8/8/8/3K4 w ---- -- -.- bhgqghbffffffffFFFFFFFFBHGQGHB');\n  }\n  /**\n   * Move piece to square id location\n   *\n   * @param Piece piece\n   * @param String squareId\n   *\n   * return Piece|null\n   */\n  put(piece, squareId) {\n    // TODO: move piece to square id location\n    return null;\n  }\n  /**\n   * Get piece at square id location\n   *\n   * @param String squareId 'a1'\n   *\n   * return Piece|null\n   */\n  get(squareId) {\n    // TODO: get piece at square id location\n    return null;\n  }\n  /**\n   * Move piece to graveyard\n   *\n   * @param String squareId 'a1'\n   *\n   * return Piece|null\n   */\n  remove(squareId) {\n    // TODO: move piece to graveyard\n    return null;\n  }\n  history() {\n    return this.kpgnInstance.moves;\n  }\n  addUpdateRenderEventListener(listener) {\n    // TODO:\n  }\n  removeUpdateRenderEventListener(listener) {\n    // TODO:\n  }\n}\n\nmodule.exports = {\n  KhmerChess,\n};","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\nconst { PIECE_TYPE_BORK } = require(\"./board-helper\");\n/**\n * Raksa-Eng Notation\n * fen: <pieces on board> <turn w|b> <king&queen moved ----|SNsn> <king attack --|Kk> <countdown -.-|-.4> <pieces in graveyard>\n * e.g: bhgqkghb/8/ffffffff/8/8/FFFFFFFF/8/BHGKQGHB\n */\n\nconst boardHelper = require(\"./board-helper\");\nconst jsis = require(\"./jsis\");\n\n// bhgqkghb/8/ffffffff/8/8/FFFFFFFF/8/BHGKQGHB w ---- -- -.-\nconst DEFAULT_BOARD_STR = 'bhgqkghb/8/ffffffff/8/8/FFFFFFFF/8/BHGKQGHB';\nconst NOT_SET = '-';\nconst STRING_COUNT = 'B2F8G2H2K1Q1b2f8g2h2k1q1';\n\nclass Piece {\n    type = boardHelper.PIECE_TYPE_TREY;\n    color = boardHelper.PIECE_COLOR_WHITE;\n    get pCode() {\n        if (this.color == boardHelper.PIECE_COLOR_WHITE) {\n            return boardHelper.toWhitePiece(this.type);\n        }\n        return this.type;\n    }\n    constructor(type, color) {\n        if (jsis.isUndefined(color)) {\n            if (jsis.isUndefined(type)) {\n                type = boardHelper.toWhitePiece(boardHelper.PIECE_TYPE_TREY);\n            }\n            if (jsis.isUpperCase(type)) {\n                color = boardHelper.PIECE_COLOR_WHITE;\n            } else {\n                color = boardHelper.PIECE_COLOR_BLACK;\n            }\n        }\n        type = boardHelper.toBlackPiece(type);\n        this.type = type;\n        this.color = color;\n    }\n    toOrigin() {\n        if (this.type == PIECE_TYPE_BORK) {\n            return new Piece(boardHelper.PIECE_TYPE_TREY, this.color);\n        }\n        return this;\n    }\n    toString() {\n        let c = this.type;\n        if (boardHelper.isWhite(this.color)) {\n            c = boardHelper.toWhitePiece(c);\n        }\n        return c;\n    }\n}\nclass Pos {\n    h = 'a';\n    v = 1;\n    x = 0;\n    y = 0;\n    p = new Piece();\n    constructor(p, h, v) {\n        this.p = p\n        if (jsis.isUndefined(v)) {\n            v = h.v;\n            h = h.h;\n        }\n        this.h = h;\n        this.v = v;\n        this.x = boardHelper.HORIZONTAL_CODE_LETTERS.indexOf(this.h);\n        this.y = this.v - 1;\n    }\n    toString() {\n        return `${this.toPString()}${this.h}${this.v}`;\n    }\n    toPString() {\n        return jsis.isNull(this.p) ? boardHelper.EMPTY_PIECE : this.p.toString();\n    }\n}\n/**\n * bhgqkghb/8/ffffffff/8/8/FFFFFFFF/8/BHGKQGHB => bhgqkghb/......../ffffffff/......../......../FFFFFFFF/......../BHGKQGHB\n */\nclass Board {\n    poses = Array.from({\n        length: boardHelper.getSubBoardNumber(),\n    }, (_, i) => {\n        const codeP = boardHelper.numToCodeP(i);\n        return new Pos(null, codeP);\n    });\n    constructor(boardStr) {\n        if (jsis.isUndefined(boardStr)) {\n            boardStr = DEFAULT_BOARD_STR;\n        }\n        const newBoardStr = this.extract(boardStr).replace(/\\//g, '');\n        if (newBoardStr.length < boardHelper.getSubBoardNumber() ||\n            !boardHelper.isValidPiecesString(newBoardStr)) {\n            throw new Error(`Invalid board string ${boardStr}`);\n        }\n        this.poses = newBoardStr.split('').map((type, i) => {\n            const codeP = boardHelper.numToCodeP(i);\n            return new Pos(type == boardHelper.EMPTY_PIECE ? null : new Piece(type), codeP);\n        });\n    }\n    toMultiArray() {\n        const arr = [[], [], [], [], [], [], [], []];\n        this.poses.forEach((pos) => {\n            arr[pos.y][pos.x] = pos.p;\n        });\n        return arr;\n    }\n    compress(str) {\n        const reg = new RegExp(`(\\\\${boardHelper.EMPTY_PIECE}+)`, 'g');\n        return str.replace(reg, ($1) => $1.length);\n    }\n    extract(str) {\n        return str.replace(/(\\d+)/g, ($1) => {\n            // $1 == 3 => '...', bh6 => 'bh......'\n            return Array.from({\n                length: $1\n            }, () => boardHelper.EMPTY_PIECE).join('');\n        });\n    }\n    toStringFull() {\n        const str = this.poses.map((pos, i) => {\n            const p = pos.toPString();\n            if (i && i % 8 == 0 && i != boardHelper.getSubBoardNumber()) {\n                return `${boardHelper.BOARD_SEPARATOR}${p}`;\n            }\n            return p;\n        }).join('');\n        return str;\n    }\n    toString() {\n        let str = this.toStringFull();\n        str = this.compress(str);\n        return str;\n    }\n}\nclass KqMoved {\n    whiteKing = false;\n    whiteQueen = false;\n    blackKing = false;\n    blackQueen = false;\n    constructor(kqMovedStr = '') {\n        const bh = boardHelper;\n        this.whiteKing = !!~kqMovedStr.indexOf(bh.toWhitePiece(bh.PIECE_TYPE_SDECH));\n        this.whiteQueen = !!~kqMovedStr.indexOf(bh.toWhitePiece(bh.PIECE_TYPE_NEANG));\n        this.blackKing = !!~kqMovedStr.indexOf(bh.PIECE_TYPE_SDECH);\n        this.blackQueen = !!~kqMovedStr.indexOf(bh.PIECE_TYPE_NEANG);\n    }\n    toString() {\n        let str = `${this.whiteKing ? boardHelper.toWhitePiece(boardHelper.PIECE_TYPE_SDECH) : NOT_SET}`;\n        str += `${this.whiteQueen ? boardHelper.toWhitePiece(boardHelper.PIECE_TYPE_NEANG) : NOT_SET}`;\n        str += `${this.blackKing ? boardHelper.PIECE_TYPE_SDECH : NOT_SET}`;\n        str += `${this.blackQueen ? boardHelper.PIECE_TYPE_NEANG : NOT_SET}`;\n        return str;\n    }\n}\nclass KAttacked {\n    whiteKing = false;\n    blackKing = false;\n    constructor(kAttackedStr = '') {\n        const bh = boardHelper;\n        this.whiteKing = !!~kAttackedStr.indexOf(bh.toWhitePiece(bh.PIECE_TYPE_SDECH));\n        this.blackKing = !!~kAttackedStr.indexOf(bh.PIECE_TYPE_SDECH);\n    }\n    toString() {\n        let str = `${this.whiteKing ? boardHelper.toWhitePiece(boardHelper.PIECE_TYPE_SDECH) : NOT_SET}`;\n        str += `${this.blackKing ? boardHelper.PIECE_TYPE_SDECH : NOT_SET}`;\n        return str;\n    }\n}\n// 23.-\nclass CountDown {\n    white = null;\n    black = null;\n    constructor(countdownStr = '') {\n        const newCountdownStr = countdownStr.split('.');\n        this.white = jsis.isStringNumber(newCountdownStr[0]) ? Number(newCountdownStr[0]) : null;\n        this.black = jsis.isStringNumber(newCountdownStr[1]) ? Number(newCountdownStr[1]) : null;\n        if (!jsis.isNull(this.white) && !jsis.isNull(this.white)) {\n            throw new Error(`Invalid countdown string ${countdownStr}`);\n        }\n    }\n    toString() {\n        let str = `${jsis.isNull(this.white) ? NOT_SET : this.white}`;\n        str += `.${jsis.isNull(this.black) ? NOT_SET : this.black}`;\n        return str;\n    }\n}\nclass Graveyard {\n    pieces = [];\n    constructor(graveyardStr = '') {\n        if (graveyardStr.length > 30 ||\n            !boardHelper.isValidPiecesString(graveyardStr, true)) {\n            throw new Error(`Invalid graveyard string ${graveyardStr}`);\n        }\n        this.pieces = graveyardStr.split('').map((type, i) => {\n            const p = new Piece(type);\n            if (p.type == boardHelper.PIECE_TYPE_SDECH) {\n                throw new Error(`King cannot die graveyard:${graveyardStr}`);\n            }\n            return p;\n        });\n    }\n    toString() {\n        return this.pieces.map((p) => {\n            return p.toString();\n        }).join('');\n    }\n}\nclass REN {\n    board = new Board();\n    turn = boardHelper.PIECE_COLOR_WHITE;\n    kqMoved = new KqMoved();\n    kAttacked = new KAttacked();\n    countdown = new CountDown();\n    graveyard = new Graveyard();\n    constructor(boardStr, turnStr = boardHelper.PIECE_COLOR_WHITE,\n        kqMovedStr, kAttackedStr, countdownStr, graveyardStr) {\n        this.board = new Board(boardStr);\n        this.turn = turnStr;\n        this.kqMoved = new KqMoved(kqMovedStr);\n        this.kqMoved = new KAttacked(kAttackedStr);\n        this.countdown = new CountDown(countdownStr);\n        this.graveyard = new Graveyard(graveyardStr);\n        const invalidPiecesString = this.isInvalidPieceCount();\n        if (invalidPiecesString) {\n            throw new Error(`Invalid piece string board:${boardStr}, graveyard:${graveyardStr}, count:${invalidPiecesString}`);\n        }\n    }\n    isInvalidPieceCount() {\n        const pieces = this.board.poses.map((pos) => {\n            return pos.p;\n        }).filter((p) => {\n            return !jsis.isNull(p);\n        }).concat(this.graveyard.pieces).map((p) => {\n            return p.toOrigin();\n        });\n        const piecesCount = pieces.reduce((obj, p) => {\n            obj[p.toString()] = obj[p.toString()] || 0;\n            obj[p.toString()]++;\n            return obj;\n        }, {});\n        const str = Object.keys(piecesCount).map((k) => `${k}${piecesCount[k]}`).sort().join('');\n        if (str == STRING_COUNT) {\n            return false;\n        }\n        return str;\n    }\n    toString() {\n        let str = this.board.toString();\n        str += ` ${this.turn.toString()}`;\n        str += ` ${this.kqMoved.toString()}`;\n        str += ` ${this.kAttacked.toString()}`;\n        str += ` ${this.countdown.toString()}`;\n        str += ` ${this.graveyard.toString()}`;\n        return str;\n    }\n}\n\nmodule.exports = {\n    Piece,\n    Pos,\n    Board,\n    KqMoved,\n    CountDown,\n    Graveyard,\n    REN,\n    DEFAULT_BOARD_STR\n};","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst jsis = require(\"./jsis\");\nconst genMask = require(\"./gen-mask\");\n\nclass Rectangle {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    isContainsPoint(point) {\n        const { x, y } = point;\n        const isContainsPoint = this.x <= x &&\n            (this.x + this.width) >= x &&\n            this.y <= y &&\n            (this.y + this.height) >= y;\n        return isContainsPoint;\n    }\n}\nlet allPiecesString = null;\nconst boardHelper = {\n    HORIZONTAL_CODE_LETTERS: \"abcdefgh\",\n    HORIZONTAL_NOTE_LETTERS: ['ក', 'ខ', 'គ', 'ឃ', 'ង', 'ច', 'ឆ', 'ជ'],\n    VERTICAL_NOTE_LETTERS: ['១', '២', '៣', '៤', '៥', '៦', '៧', '៨', '៩', '១០',\n        '១១', '១២', '១៣', '១៤', '១៥', '១៦', '១៧', '១៨', '១៩', '២០',\n        '២១', '២២', '២៣', '២៤', '២៥', '២៦', '២៧', '២៨', '២៩', '៣០'],\n    HORIZONTAL_NOTE_LETTERS_ASCII: 'abcdefgh',\n    VERTICAL_NOTE_LETTERS_ASCII: Array.from({ length: 30 }, (_, i) => `${i + 1}`),\n\n    PIECE_COLOR_WHITE: \"w\",\n    PIECE_COLOR_BLACK: \"b\",\n\n    PIECE_TYPE_TOUK: \"b\", // Boat\n    PIECE_TYPE_SES: \"h\", // Horse\n    PIECE_TYPE_KOL: \"g\", // General\n    PIECE_TYPE_SDECH: \"k\", // King\n    PIECE_TYPE_NEANG: \"q\", // Queen\n    PIECE_TYPE_TREY: \"f\", // Fish\n    PIECE_TYPE_BORK: \"t\", // Transform fish\n    EMPTY_PIECE: \".\",\n    BOARD_SEPARATOR: \"/\",\n\n    ROW_NUMBER: 8,\n    ROW_FIRST_INDEX: 0,\n    ROW_LAST_INDEX: 7,\n\n    mask: null,\n\n    getPieceCharArray() {\n        return [\n            this.PIECE_TYPE_TOUK,\n            this.PIECE_TYPE_SES,\n            this.PIECE_TYPE_KOL,\n            this.PIECE_TYPE_SDECH,\n            this.PIECE_TYPE_NEANG,\n            this.PIECE_TYPE_TREY,\n            this.PIECE_TYPE_BORK,\n        ];\n    },\n    getColorArray() {\n        return [\n            this.PIECE_COLOR_WHITE,\n            this.PIECE_COLOR_BLACK,\n        ];\n    },\n    isValidPiecesString(str, onlyPiece) {\n        if (jsis.isNull(allPiecesString)) {\n            allPiecesString = [\n                ...this.getPieceCharArray(),\n                ...this.getPieceCharArray().map((c) => this.toWhitePiece(c)),\n                this.EMPTY_PIECE,\n                this.BOARD_SEPARATOR,\n            ]\n        }\n        const ruler = onlyPiece ? allPiecesString.filter((c) => {\n            return !~[this.EMPTY_PIECE, this.BOARD_SEPARATOR].indexOf(c);\n        }) : allPiecesString;\n        return !str.split('').some((c) => {\n            return !~ruler.indexOf(c);\n        });\n    },\n\n    toWhitePiece: (str) => str.toUpperCase(),\n    toBlackPiece: (str) => str.toLowerCase(),\n\n    isValidPosXY(point, y) {\n        if (jsis.isUndefined(point)) {\n            return false;\n        }\n        if (!jsis.isUndefined(y)) {\n            point = this.p(point, y);\n        }\n        return !jsis.isUndefined(point.x) && !jsis.isUndefined(point.y) &&\n            this.rect(0, 0, this.ROW_LAST_INDEX, this.ROW_LAST_INDEX).isContainsPoint(point);\n    },\n    isValidPiece: (piece) => piece != boardHelper.EMPTY_PIECE,\n    isWhite: (c) => c === boardHelper.PIECE_COLOR_WHITE,\n    isBlack: (c) => c === boardHelper.PIECE_COLOR_BLACK,\n    codeP: (h, v) => ({ h, v }),\n    p: (x, y) => ({ x, y }),\n    res: (width, height) => ({ width, height }),\n    rect: (x, y, width, height) => new Rectangle(x, y, width, height),\n    getSubBoardNumber: () => boardHelper.ROW_NUMBER * boardHelper.ROW_NUMBER,\n    nerdPosToXY(p) {\n        if (jsis.isNumber(p.x) && jsis.isNumber(p.y)) {\n            return p;\n        }\n        if (jsis.isNumber(p)) {\n            const x = p % this.ROW_NUMBER;\n            const y = Math.floor(p / this.ROW_NUMBER);\n            return this.p(x, y);\n        }\n        return null;\n    },\n    nerdXyToPos(x, y) {\n        if (!jsis.isUndefined(y)) {\n            return x + y * this.ROW_NUMBER;\n        }\n        return x.x + x.y * this.ROW_NUMBER;\n    },\n    indexCodeToPos(code) {\n        const x = this.HORIZONTAL_CODE_LETTERS.indexOf(code[0]);\n        const y = Number(code[1]) - 1;\n        return this.nerdXyToPos(x, y);\n    },\n    pointToIndexCode(p) {\n        return `${this.HORIZONTAL_CODE_LETTERS[p.x]}${this.ROW_NUMBER + p.y}`\n    },\n    xyToIndexCode(x, y) {\n        return this.pointToIndexCode(this.p(x, y));\n    },\n    posToIndexCode(p) {\n        if (jsis.isNumber(p.x) && jsis.isNumber(p.y)) {\n            return this.pointToIndexCode(p);\n        }\n        if (jsis.isNumber(p)) {\n            const x = p % this.ROW_NUMBER;\n            const y = Math.floor(p / this.ROW_NUMBER);\n            return this.xyToIndexCode(x, y);\n        }\n        return null;\n    },\n    isPosInBoard(posInBoard) {\n        return jsis.isNumber(posInBoard) &&\n            posInBoard >= 0 && posInBoard <= this.getSubBoardNumber() - 1;\n    },\n    getCharPieceFromString(piecesString, posInBoard) {\n        if (this.isPosInBoard(posInBoard) && piecesString.length === this.getSubBoardNumber()) {\n            return piecesString.charAt(posInBoard);\n        }\n        return this.EMPTY_PIECE;\n    },\n    getPieceProperties(code) {\n        const h = this.pieceHash[code];\n        return {\n            color: h ? h[0] : this.PIECE_COLOR_EMPTY,\n            type: h ? h[1] : this.EMPTY_PIECE,\n        };\n    },\n    getCharPieceInPos(posInBoard, piecesString) {\n        return this.getCharPieceFromString(piecesString, posInBoard);\n    },\n    getPieceInPos(posInBoard, y, piecesString) {\n        if (jsis.isNumber(y)) {\n            posInBoard = this.nerdXyToPos(posInBoard, y);\n        } else if (jsis.isString(y)) {\n            piecesString = y;\n        }\n        const piece = this.getCharPieceInPos(posInBoard, piecesString);\n        let color = this.PIECE_COLOR_WHITE, type = this.PIECE_TYPE_TREY;\n        if (this.isValidPiece(piece)) {\n            const pr = this.getPieceProperties(piece);\n            color = pr.color;\n            type = pr.type;\n        }\n        return {\n            isValidPiece: this.isValidPiece(piece),\n            color: color,\n            type: type,\n        };\n    },\n    convertMask(p, pos, color) {\n        const sign = this.isWhite(color) ? 1 : -1;\n        pos = this.nerdPosToXY(pos);\n        p.x = p.x * sign + pos.x;\n        p.y = p.y * sign + pos.y;\n        return this.isValidPosXY(p) ? this.nerdXyToPos(p) : null;\n    },\n    getPieceCanMovePoses(type, pos, color) {\n        const poses = [];\n        this.mask = this.mask || genMask(this);\n        this.mask[type].forEach((_pos) => {\n            const p = this.convertMask(this.p(_pos[0], _pos[1]), pos, color);\n            if (!jsis.isNull(p)) {\n                poses.push(p);\n            }\n        });\n        return poses;\n    },\n    getPieceCanMovePosesValid(type, pos, color, piecesString) {\n        const _poses = this.getPieceCanMovePoses(type, pos, color);\n        let p, distPiece;\n        const poses = [];\n        const n = _poses.length, thisPos = this.nerdPosToXY(pos);\n        for (let i = 0; i < n; i++) {\n            p = this.nerdPosToXY(_poses[i]);\n            distPiece = this.getPieceInPos(p.x, p.y, piecesString);\n            if (distPiece.isValidPiece) {\n                if (color === distPiece.color ||\n                    type === this.PIECE_TYPE_TREY && p.x === thisPos.x) {\n                    p = null;\n                }\n            } else {\n                if (type === this.PIECE_TYPE_TREY && p.x != thisPos.x) {\n                    p = null;\n                }\n            }\n            if (!jsis.isNull(p) && type === this.PIECE_TYPE_TOUK) {\n                const _x = thisPos.x,\n                    _y = thisPos.y;\n                let _n, _s;\n                if (p.x === thisPos.x) {\n                    _n = Math.abs(p.y - thisPos.y);\n                    _s = thisPos.y < p.y ? 1 : -1;\n                    while (--_n > 0) {\n                        if (this.getPieceInPos(_x, _y + _s * _n, piecesString).isValidPiece) {\n                            p = null;\n                            break;\n                        }\n                    }\n                } else if (p.y === thisPos.y) {\n                    _n = Math.abs(p.x - thisPos.x);\n                    _s = thisPos.x < p.x ? 1 : -1;\n                    while (--_n > 0) {\n                        if (this.getPieceInPos(_x + _s * _n, _y, piecesString).isValidPiece) {\n                            p = null;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!jsis.isNull(p)) {\n                poses.push(_poses[i]);\n            }\n        }\n        return poses;\n    },\n    replacePiecesString(piecesString, c, p) {\n        return piecesString.substring(0, p) + c + piecesString.substring(p + 1);\n    },\n    injectPiece(piecesString, pos1, pos2) {\n        const c = piecesString.charAt(pos1);\n        if (!this.isCharPiecesInBoard(c, piecesString)) {\n            return null;\n        }\n        piecesString = this.replacePiecesString(piecesString, this.EMPTY_PIECE, pos1);\n        piecesString = this.replacePiecesString(piecesString, c, pos2);\n        return piecesString;\n    },\n    getPieceCode(color, type) {\n        const val = color + type;\n        for (const k in this.pieceHash) {\n            if (val === this.pieceHash[k]) {\n                return k;\n            }\n        }\n        return this.EMPTY_PIECE;\n    },\n    getKingWillInDanger(color, piecesString) {\n        const kingPos = piecesString.indexOf(this.getPieceCode(color, this.PIECE_TYPE_SDECH));\n        const n = piecesString.length;\n        let _poses, p, j;\n        for (let i = 0; i < n; i++) {\n            p = this.getPieceInPos(i, piecesString);\n            if (p.isValidPiece && p.color != color && p.type === this.PIECE_TYPE_TOUK) {\n                _poses = this.getPieceCanMovePoses(p.type, i, p.color, piecesString);\n                for (j = 0; j < _poses.length; j++) {\n                    if (_poses[j] === kingPos) {\n                        return [this.numToCode(i), this.numToCode(kingPos)];\n                    }\n                }\n            }\n        }\n        return null;\n    },\n    getKingInDanger(color, piecesString) {\n        const kingPos = piecesString.indexOf(this.getPieceCode(color, this.PIECE_TYPE_SDECH));\n        const n = piecesString.length;\n        let _poses, p, j;\n        for (let i = 0; i < n; i++) {\n            p = this.getPieceInPos(i, piecesString);\n            if (p.isValidPiece && p.color != color) {\n                _poses = this.getPieceCanMovePosesValid(p.type, i, p.color, piecesString);\n                for (j = 0; j < _poses.length; j++) {\n                    if (_poses[j] === kingPos) {\n                        return [this.numToCode(i), this.numToCode(kingPos)];\n                    }\n                }\n            }\n        }\n        return null;\n    },\n    numToCodeP(number) {\n        return this.codeP(this.HORIZONTAL_CODE_LETTERS[number % 8], ((number / 8 | 0) + 1));\n    },\n    numToCode(number) {\n        const codeP = this.numToCodeP(number);\n        return `${codeP.h}${codeP.v}`;\n    },\n    generatePosesCanMove(type, pos, color, piecesString, isHaveMoved) {\n        let p;\n        const _poses = this.getPieceCanMovePosesValid(type, pos, color, piecesString);\n        const isHaveCaptured = this.isHaveCaptured(piecesString);\n        if (type === this.PIECE_TYPE_SDECH) {\n            if (!isHaveCaptured && !isHaveMoved) {\n                p = this.convertMask(this.p(2, 1), pos, color);\n                if (p && !this.getPieceInPos(p, piecesString).isValidPiece) {\n                    _poses.push(p);\n                }\n                p = this.convertMask(this.p(-2, 1), pos, color);\n                if (p && !this.getPieceInPos(p, piecesString).isValidPiece) {\n                    _poses.push(p);\n                }\n            }\n        } else if (type === this.PIECE_TYPE_NEANG) {\n            if (!isHaveCaptured && !isHaveMoved) {\n                p = this.convertMask(this.p(-0, 2), pos, color);\n                if (p && !this.getPieceInPos(p, piecesString).isValidPiece) {\n                    _poses.push(p);\n                }\n            }\n        }\n        const n = _poses.length;\n        const poses = [];\n        let str;\n        for (let i = 0; i < n; i++) {\n            str = this.injectPiece(piecesString, pos, _poses[i]);\n            if (jsis.isNull(this.getKingInDanger(color, str))) {\n                poses.push(this.numToCode(_poses[i]));\n            }\n        }\n        return poses;\n    },\n    isCharPiecesInBoard(c, piecesString) {\n        return !!~piecesString.indexOf(c);\n    },\n    getPiecesInBoard(piecesString) {\n        return piecesString.split(\"\").filter((c) => {\n            return this.isValidPiece(c);\n        });\n    },\n    isHaveCaptured(piecesString) {\n        return this.getPiecesInBoard(piecesString).length < this.ROW_NUMBER * 4;\n    },\n    filterPieceInBoard(piecesString) {\n        const whitePieces = [];\n        const blackPieces = [];\n        let c, prop, piece;\n        for (let i = 0; i < piecesString.length; i++) {\n            c = piecesString.charAt(i);\n            if (this.isValidPiece(c)) {\n                prop = this.getPieceProperties(c);\n                piece = {\n                    color: prop.color,\n                    type: prop.type,\n                    index: i,\n                    code: this.numToCode(i),\n                };\n                if (this.isWhite(piece.color)) {\n                    whitePieces.push(piece);\n                } else {\n                    blackPieces.push(piece);\n                }\n            }\n        }\n        return {\n            whitePieces: whitePieces,\n            blackPieces: blackPieces,\n        };\n    },\n    extractPiecesToArray(piecesString) {\n        piecesString = piecesString.split(\"\");\n        const pieceAll = {\n            [this.PIECE_COLOR_BLACK]: [],\n            [this.PIECE_COLOR_WHITE]: [],\n        };\n        piecesString.forEach((e) => {\n            if (e === this.EMPTY_PIECE) {\n                return;\n            }\n            const prop = this.getPieceProperties(e);\n            pieceAll[prop.color].push(prop.type);\n        });\n        return pieceAll;\n    },\n    isStateCount(c, piecesString) {\n        const allPieces = this.extractPiecesToArray(piecesString);\n        return allPieces[c].length === 1;\n    },\n    checkCountable(color, piecesString) {\n        const pieceAll = this.extractPiecesToArray(piecesString);\n        const weaker = pieceAll[color];\n        const stronger = pieceAll[this.oppositeColor(color)];\n        return weaker.length <= 2 && stronger.length >= 2;\n    },\n    checkCount(color, piecesString, force) {\n        const countChar = (str, c) => {\n            return str.join(\"\").split(c).length - 1;\n        };\n        const charExist = (str, c) => {\n            return !!~str.indexOf(c);\n        };\n\n        const pieceAll = this.extractPiecesToArray(piecesString);\n        const weaker = pieceAll[color];\n        const stronger = pieceAll[this.oppositeColor(color)];\n        if (weaker.length === 1 && stronger.length > 1) {\n            if (!charExist(stronger, this.PIECE_TYPE_TREY)) {\n                let count = 64;\n                const toukCount = countChar(stronger, this.PIECE_TYPE_TOUK);\n                if (toukCount) {\n                    count = toukCount > 1 ? 8 : 16;\n                } else if (countChar(stronger, this.PIECE_TYPE_KOL) > 1) {\n                    count = 22;\n                } else if (countChar(stronger, this.PIECE_TYPE_SES) > 1) {\n                    count = 32;\n                } else if (countChar(stronger, this.PIECE_TYPE_KOL)) {\n                    count = 44;\n                }\n                return [stronger.length + 1, count];\n            }\n            return [0, 64];\n        } else if (force && this.checkCountable(color, piecesString)) {\n            return [0, 64];\n        }\n        return null;\n    },\n\n    getHashKey(val) {\n        const keys = Object.keys(this.pieceHash).filter((key) => {\n            return this.pieceHash[key] === val;\n        });\n        return keys.length === 1 ? keys[0] : this.EMPTY_PIECE;\n    },\n    getPieceKeyByProp(prop) {\n        let prop1;\n        for (const key in this.pieceHash) {\n            prop1 = this.getPieceProperties(key);\n            if (prop.color === prop1.color && prop.type === prop1.type) {\n                return key;\n            }\n        }\n        return this.EMPTY_PIECE;\n    },\n    getPieceKeyByName(name) {\n        return this.getPieceKeyByProp({\n            color: name[0],\n            type: name[1],\n        });\n    },\n    oppositeColor(color) {\n        return this.isWhite(color) ? this.PIECE_COLOR_BLACK : this.PIECE_COLOR_WHITE;\n    },\n};\nboardHelper.pieceHash = {\n    \"a\": boardHelper.PIECE_COLOR_WHITE + boardHelper.PIECE_TYPE_TOUK,\n    \"b\": boardHelper.PIECE_COLOR_WHITE + boardHelper.PIECE_TYPE_SES,\n    \"c\": boardHelper.PIECE_COLOR_WHITE + boardHelper.PIECE_TYPE_KOL,\n    \"d\": boardHelper.PIECE_COLOR_WHITE + boardHelper.PIECE_TYPE_SDECH,\n    \"e\": boardHelper.PIECE_COLOR_WHITE + boardHelper.PIECE_TYPE_NEANG,\n    \"f\": boardHelper.PIECE_COLOR_WHITE + boardHelper.PIECE_TYPE_TREY,\n    \"g\": boardHelper.PIECE_COLOR_WHITE + boardHelper.PIECE_TYPE_BORK,\n    \"h\": boardHelper.PIECE_COLOR_BLACK + boardHelper.PIECE_TYPE_TOUK,\n    \"i\": boardHelper.PIECE_COLOR_BLACK + boardHelper.PIECE_TYPE_SES,\n    \"j\": boardHelper.PIECE_COLOR_BLACK + boardHelper.PIECE_TYPE_KOL,\n    \"k\": boardHelper.PIECE_COLOR_BLACK + boardHelper.PIECE_TYPE_SDECH,\n    \"l\": boardHelper.PIECE_COLOR_BLACK + boardHelper.PIECE_TYPE_NEANG,\n    \"m\": boardHelper.PIECE_COLOR_BLACK + boardHelper.PIECE_TYPE_TREY,\n    \"n\": boardHelper.PIECE_COLOR_BLACK + boardHelper.PIECE_TYPE_BORK,\n};\n\nmodule.exports = boardHelper;","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst boardHelper = require(\"./board-helper\");\n\nfunction genMask() {\n    const mask = {};\n    mask[boardHelper.PIECE_TYPE_TOUK] = [\n        [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8],\n        [0, -1], [0, -2], [0, -3], [0, -4], [0, -5], [0, -6], [0, -7], [0, -8],\n        [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0],\n        [-1, 0], [-2, 0], [-3, 0], [-4, 0], [-5, 0], [-6, 0], [-7, 0], [-8, 0],\n    ];\n    mask[boardHelper.PIECE_TYPE_SES] = [\n        [-1, -2],\n        [1, -2],\n        [-2, -1],\n        [2, -1],\n        [-1, 2],\n        [1, 2],\n        [-2, 1],\n        [2, 1],\n    ];\n    mask[boardHelper.PIECE_TYPE_NEANG] = [\n        [-1, -1],\n        [1, -1],\n        [-1, 1],\n        [1, 1],\n    ];\n    mask[boardHelper.PIECE_TYPE_KOL] = mask[boardHelper.PIECE_TYPE_NEANG].concat([\n        [0, 1],\n    ]);\n    mask[boardHelper.PIECE_TYPE_SDECH] = mask[boardHelper.PIECE_TYPE_KOL].concat([\n        [0, -1],\n        [1, 0],\n        [-1, 0],\n    ]);\n    mask[boardHelper.PIECE_TYPE_TREY] = [\n        [0, 1],\n        [-1, 1],\n        [1, 1],\n    ];\n    mask[boardHelper.PIECE_TYPE_BORK] = mask[boardHelper.PIECE_TYPE_NEANG];\n    return mask;\n}\n\nmodule.exports = genMask;","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst jsis = {\n    isValid(v) {\n        return !this.isNull(v) && !this.isUndefined(v);\n    },\n    isNull(v) {\n        return v === null;\n    },\n    isUndefined(v) {\n        return typeof v === \"undefined\";\n    },\n    isString(str) {\n        return this.isValid(str) && typeof str === \"string\";\n    },\n    isNotEmpty(str) {\n        return this.isValidString(str) && str != \"\";\n    },\n    isNumber(n) {\n        return this.isValid(n) && typeof n === \"number\";\n    },\n    isStringNumber(n) {\n        return this.isString(n) && n != \"\" && !isNaN(Number(n));\n    },\n    isArray(arr) {\n        return this.isValid(arr) && arr instanceof Array;\n    },\n    isFunction(f) {\n        return this.isValid(f) && typeof f === \"function\";\n    },\n    isObject(o) {\n        return this.isValid(o) && o instanceof Object;\n    },\n    isBoolean(b) {\n        return this.isValid(b) && typeof b === \"boolean\";\n    },\n    isTrue(b) {\n        return this.isValidBoolean(b) && b;\n    },\n    isFalse(b) {\n        return this.isValidBoolean(b) && !b;\n    },\n    isPoint(p) {\n        const isPoint = this.isValid(p) &&\n            this.isValidObject(p) &&\n            this.isValidNumber(p.x) &&\n            this.isValidNumber(p.y);\n        return isPoint;\n    },\n    isSize(size) {\n        const isSize = this.isValid(size) &&\n            this.isValidObject(size) &&\n            this.isValidNumber(size.width) &&\n            this.isValidNumber(size.height);\n        return isSize;\n    },\n    isOdd(n) {\n        return !!(n % 2);\n    },\n    isEven(n) {\n        return !this.isOdd(n);\n    },\n    isUpperCase(str) {\n        return str === str.toUpperCase();\n    }\n};\n\nmodule.exports = jsis;","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst boardHelper = require(\"./board-helper\");\n\nclass MoveHelper {\n    init(option) {\n        this.piecesString = option.piecesString;\n        this.currentTurn = option.currentTurn;\n        this.isNeangMoved = option.isNeangMoved;\n        this.isSdechMoved = option.isSdechMoved;\n\n        this.genCanMove = option.genCanMove;\n        this.genCanMoveForAnother = option.genCanMoveForAnother;\n\n        this.whiteMoves = [];\n        this.blackMoves = [];\n\n        this.whiteKingInDanger = null;\n        this.whiteKingWillInDanger = null;\n        this.blackKingInDanger = null;\n        this.blackKingWillInDanger = null;\n\n        this.winColor = null;\n        this.stuckColor = null;\n    }\n\n    generateCanMoves() {\n        const filter = boardHelper.filterPieceInBoard(this.piecesString);\n        this.whiteMoves = filter.whitePieces;\n        this.blackMoves = filter.blackPieces;\n        const genMoves = (pieces) => {\n            for (let i = 0; i < pieces.length; i++) {\n                const type = pieces[i].type;\n                const isSdech = type === boardHelper.PIECE_TYPE_SDECH;\n                const isNeang = type === boardHelper.PIECE_TYPE_NEANG;\n                let isHaveMoved = this.isSdechMoved;\n                if (!isSdech) {\n                    isHaveMoved = isNeang ? this.isNeangMoved : false;\n                }\n                const canMoveIndexes = boardHelper.generatePosesCanMove(\n                    type,\n                    pieces[i].index,\n                    pieces[i].color,\n                    this.piecesString,\n                    isHaveMoved,\n                );\n                pieces[i].canMoveIndexes = canMoveIndexes;\n            }\n        };\n        genMoves(this.whiteMoves);\n        genMoves(this.blackMoves);\n    }\n\n    cleanPieceNoMove() {\n        const cleanMoves = (pieces) => {\n            let isTrue = true;\n            while (isTrue) {\n                isTrue = false;\n                for (let i = 0; i < pieces.length; i++) {\n                    const piece = pieces[i];\n                    if (!piece.canMoveIndexes || !piece.canMoveIndexes.length) {\n                        pieces.splice(i, 1);\n                        isTrue = true;\n                        break;\n                    }\n                }\n            }\n        };\n        cleanMoves(this.whiteMoves);\n        cleanMoves(this.blackMoves);\n    }\n\n    checkIfKingInDanger() {\n        this.whiteKingInDanger = boardHelper.getKingInDanger(\n            boardHelper.PIECE_COLOR_WHITE,\n            this.piecesString,\n        );\n        this.whiteKingWillInDanger = boardHelper.getKingWillInDanger(\n            boardHelper.PIECE_COLOR_WHITE,\n            this.piecesString,\n        );\n        this.blackKingInDanger = boardHelper.getKingInDanger(\n            boardHelper.PIECE_COLOR_BLACK,\n            this.piecesString,\n        );\n        this.blackKingWillInDanger = boardHelper.getKingWillInDanger(\n            boardHelper.PIECE_COLOR_BLACK,\n            this.piecesString,\n        );\n    }\n\n    genWinLost() {\n        if (this.whiteKingInDanger && !this.whiteMoves.length) {\n            this.winColor = boardHelper.PIECE_COLOR_BLACK;\n        } else if (this.blackKingInDanger && !this.blackMoves.length) {\n            this.winColor = boardHelper.PIECE_COLOR_WHITE;\n        }\n    }\n\n    getStuck() {\n        if (this.winColor) {\n            return;\n        }\n        if (boardHelper.isWhite(this.currentTurn) && !this.whiteMoves.length) {\n            this.stuckColor = boardHelper.PIECE_COLOR_WHITE;\n        } else if (boardHelper.isBlack(this.currentTurn) && !this.blackMoves.length) {\n            this.stuckColor = boardHelper.PIECE_COLOR_BLACK;\n        }\n    }\n\n    calcCanMove(option) {\n        this.init(option);\n        this.generateCanMoves();\n        this.cleanPieceNoMove();\n        let moves = [];\n        if (this.genCanMove) {\n            moves = boardHelper.isWhite(this.currentTurn) ? this.whiteMoves : this.blackMoves;\n        }\n        let anotherMoves = [];\n        if (this.genCanMoveForAnother) {\n            anotherMoves = boardHelper.isBlack(this.currentTurn) ? this.whiteMoves : this.blackMoves;\n        }\n        return {\n            moves,\n            anotherMoves,\n        };\n    }\n    calcState(option) {\n        this.init(option);\n        this.generateCanMoves();\n        this.cleanPieceNoMove();\n\n        this.checkIfKingInDanger();\n        this.genWinLost();\n        this.getStuck();\n        return {\n            blackKingInDanger: this.blackKingInDanger,\n            whiteKingInDanger: this.whiteKingInDanger,\n            blackKingWillInDanger: this.blackKingWillInDanger,\n            whiteKingWillInDanger: this.whiteKingWillInDanger,\n            winColor: this.winColor,\n            stuckColor: this.stuckColor,\n            blackCountable: boardHelper.checkCountable(\n                boardHelper.PIECE_COLOR_BLACK,\n                this.piecesString,\n            ),\n            whiteCountable: boardHelper.checkCountable(\n                boardHelper.PIECE_COLOR_WHITE,\n                this.piecesString,\n            ),\n        };\n    }\n    calCount(option) {\n        return {\n            countingBlack: boardHelper.checkCount(\n                boardHelper.PIECE_COLOR_BLACK,\n                option.piecesString, option.force,\n            ),\n            countingWhite: boardHelper.checkCount(\n                boardHelper.PIECE_COLOR_WHITE,\n                option.piecesString, option.force,\n            ),\n        };\n    }\n}\n\nmodule.exports = MoveHelper;","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst { REN, DEFAULT_BOARD_STR } = require('./REN');\nconst jsis = require('./jsis');\n\nconst renHelper = {\n    toRen(fen) {\n        if (jsis.isUndefined(fen)) {\n            fen = DEFAULT_BOARD_STR;\n        }\n        const fenArr = fen.split(' ');\n        return new REN(fenArr[0], fenArr[1], fenArr[2], fenArr[3], fenArr[4], fenArr[5]);\n    }\n};\n\nmodule.exports = renHelper;","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */\n\n'use strict';\n\nconst boardHelper = require('khmer-chess/src/board-helper');\nconst {\n    BOARD_NOTE_V_PREFIX_CLASS,\n    BOARD_NOTE_H_PREFIX_CLASS\n} = require('./constance');\n\nclass BoardManager {\n    _squares = [];\n    options = {};\n    khmerChessBoard = null;\n    isUpsideDown = false;\n    _piecesFromKhmerChess = null;\n\n    constructor(khmerChessBoard, options) {\n        this.khmerChessBoard = khmerChessBoard;\n        this.options = options;\n    }\n\n    put(i, squarePiece) {\n        this._squares[i] = squarePiece;\n    }\n\n    get(index) {\n        return this._squares.find((square) => {\n            return square.index === index;\n        });\n    }\n\n    getByIndexCode(code) {\n        const index = boardHelper.indexCodeToPos(code);\n        return this.get(index);\n    }\n\n    getByXY(x, y) {\n        const index = boardHelper.nerdXyToPos(x, y);\n        return this.get(index);\n    }\n\n    flip() {\n        this.isUpsideDown = !this.isUpsideDown;\n        // backup\n        const backupPiecesList = this._squares.map((square) => {\n            return square.clone();\n        });\n        const backupSelectedList = this.getSelectedSquares().map((square) => {\n            return square.clone();\n        });\n        // clear\n        this.clearSelectedSquares();\n        this.removePiecesFromSquares();\n        // flip\n        this.applyFlippingFlag();\n        // restore\n        backupPiecesList.forEach((clonedSquare) => {\n            const square = this.getByXY(clonedSquare.x, clonedSquare.y);\n            square.setPiece(clonedSquare.piece);\n        });\n        backupSelectedList.forEach((clonedSquare) => {\n            const square = this.getByXY(clonedSquare.x, clonedSquare.y);\n            square.select();\n        });\n    }\n\n    getSelectedSquares() {\n        return this._squares.filter((square) => {\n            return square.isSelected();\n        });\n    }\n\n    clearSelectedSquares() {\n        this._squares.forEach((s) => {\n            return s.unselect();\n        });\n    }\n\n    removePiecesFromSquares() {\n        this._squares.forEach((s) => {\n            return s.removePiece();\n        });\n    }\n\n    applyFlippingFlag() {\n        this._squares.forEach((square) => {\n            square.setFlipped(this.isUpsideDown);\n        });\n    }\n\n    enableSelect() {\n        this._squares.forEach((s) => {\n            return s.setOnClick(() => {\n                s.isSelected() ? s.unselect() : s.select();\n            });\n        });\n    }\n\n    setNote() {\n        for (let i = 0; i < boardHelper.ROW_NUMBER; i++) {\n            const square = this.getByXY(i, 0);\n            square.addClassName(`${BOARD_NOTE_H_PREFIX_CLASS}-${i + 1}`);\n        }\n        for (let j = 0; j < boardHelper.ROW_NUMBER; j++) {\n            const square = this.getByXY(0, j);\n            square.addClassName(`${BOARD_NOTE_V_PREFIX_CLASS}-${j + 1}`);\n        }\n    }\n\n    receivePieces(pieces) {\n        this.removePiecesFromSquares();\n        pieces.forEach((arr, i) => {\n            arr.forEach((piece, j) => {\n                const square = this.getByXY(j, i);\n                if (piece) {\n                    square.setPiece(piece);\n                }\n            });\n        });\n    }\n}\n\nmodule.exports = { BoardManager };\n","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */\n\n'use strict';\n\nconst { TD_GRAVEYARD_NUMBER, GRAVEYARD_NOTE_PREFIX_CLASS } = require('./constance');\n\nclass GraveyardManager {\n    squares = [];\n    options = {};\n    khmerChessBoard = null;\n    _piecesFromKhmerChess = null;\n    constructor(khmerChessBoard, options) {\n        this.khmerChessBoard = khmerChessBoard;\n        this.options = options;\n    }\n\n    push(squarePiece) {\n        this.squares.push(squarePiece);\n    }\n\n    get(index) {\n        return this.squares[index];\n    }\n\n    setNote() {\n        for (let i = 0; i < TD_GRAVEYARD_NUMBER; i++) {\n            const square = this.get(i);\n            square.addClassName(`${GRAVEYARD_NOTE_PREFIX_CLASS}-${i + 1}`);\n        }\n    }\n\n    removePiecesFromSquares() {\n        for (let i = 0; i < TD_GRAVEYARD_NUMBER; i++) {\n            const square = this.get(i);\n            square.removePiece();\n        }\n    }\n\n    applyPiecesFromKhmerChess(pieces) {\n        pieces.forEach((piece, i) => {\n            const square = this.get(i);\n            square.setPiece(piece);\n        });\n    }\n\n    receivePieces(pieces) {\n        this._piecesFromKhmerChess = pieces;\n        this.removePiecesFromSquares();\n        this.applyPiecesFromKhmerChess(this._piecesFromKhmerChess);\n    }\n}\n\nmodule.exports = { GraveyardManager };\n","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */\n\n'use strict';\n\nconst { AUDIO } = require('./audio');\n\nclass SoundManager {\n    static MOVE_FLAG = 'm';\n    static CAPTURE_FLAG = 'ct';\n    static CHECK_FLAG = 'c';\n    move = null;\n    capture = null;\n    check = null;\n    isEnable = false;\n    disable() {\n        this.isEnable = false;\n        if (this.move) {\n            this.move.parentElement.removeChild(this.move);\n            this.move = null;\n        }\n        if (this.capture) {\n            this.capture.parentElement.removeChild(this.capture);\n            this.capture = null;\n        }\n        if (this.check) {\n            this.check.parentElement.removeChild(this.check);\n            this.check = null;\n        }\n        console.log('Sound is disabled');\n    }\n\n    enable() {\n        this.isEnable = true;\n        this.move = this._addSound(AUDIO.move);\n        this.capture = this._addSound(AUDIO.capture);\n        this.check = this._addSound(AUDIO.check);\n        console.log('Sound is enabled');\n    }\n\n    _addSound(src) {\n        const sound = document.createElement('audio');\n        sound.src = src;\n        sound.setAttribute('preload', 'auto');\n        sound.setAttribute('controls', 'none');\n        sound.style.display = 'none';\n        document.body.appendChild(sound);\n        return sound;\n    }\n\n    play(flag) {\n        if (!this.isEnable) {\n            console.log('Sound is disable');\n            return;\n        }\n        switch (flag) {\n        case SoundManager.MOVE_FLAG:\n            this.move && this.move.play();\n            break;\n        case SoundManager.CAPTURE_FLAG:\n            this.capture && this.capture.play();\n            break;\n        case SoundManager.CHECK_FLAG:\n            this.check && this.check.play();\n            break;\n        default:\n            console.log('Invalid sound flag');\n        }\n    }\n\n    playMove() {\n        this.play(SoundManager.MOVE_FLAG);\n    }\n\n    playCapture() {\n        this.play(SoundManager.CAPTURE_FLAG);\n    }\n\n    playCheck() {\n        this.play(SoundManager.CHECK_FLAG);\n    }\n}\n\nmodule.exports = { SoundManager };\n","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */\n\n'use strict';\n\nconst { boardHelper } = require('khmer-chess');\nconst {\n    SELECTED_CLASS_NAME,\n    PIECE_CLASS_NAME,\n    ATTACKED_ID_NAME,\n    FLIPPED_CLASS\n} = require('./constance');\nconst { genBackgroundNote } = require('./svg');\n\nclass SquarePiece {\n    _x = 0;\n    _y = 0;\n    get x() {\n        return this.isUpsideDown ? boardHelper.ROW_NUMBER - this._x - 1 : this._x;\n    }\n\n    get y() {\n        return this.isUpsideDown ? boardHelper.ROW_NUMBER - this._y - 1 : this._y;\n    }\n\n    get index() {\n        return boardHelper.nerdXyToPos(this.x, this.y);\n    }\n\n    get indexCode() {\n        return boardHelper.xyToIndexCode(this.x, this.y);\n    }\n\n    isGraveyard = false;\n    container = document.createElement('td');\n    piece = null;\n    isUpsideDown = false;\n    constructor(x, y, container, piece, isGraveyard) {\n        this._x = x;\n        this._y = y;\n        this.container = container;\n        this.setPiece(piece);\n        this.isGraveyard = isGraveyard;\n    }\n\n    removePiece() {\n        const piece = this.piece;\n        if (piece) {\n            this.removeClassName(PIECE_CLASS_NAME);\n            this.removeClassName(`type-${piece.type}`);\n            this.removeClassName(`color-${piece.color}`);\n            this.piece = null;\n        }\n        return piece;\n    }\n\n    setPiece(piece) {\n        this.removePiece();\n        this.piece = piece;\n        if (this.piece) {\n            this.addClassName(`type-${this.piece.type}`);\n            this.addClassName(`color-${this.piece.color}`);\n            this.addClassName(PIECE_CLASS_NAME);\n        }\n    }\n\n    addClassName(className) {\n        this.container.classList.add(className);\n    }\n\n    removeClassName(className) {\n        this.container.classList.remove(className);\n    }\n\n    hasClassName(className) {\n        return this.container.classList.contains(className);\n    }\n\n    select() {\n        this.addClassName(SELECTED_CLASS_NAME);\n    }\n\n    unselect() {\n        this.removeClassName(SELECTED_CLASS_NAME);\n    }\n\n    isSelected() {\n        return this.hasClassName(SELECTED_CLASS_NAME);\n    }\n\n    attacked() {\n        this.addClassName(ATTACKED_ID_NAME);\n    }\n\n    notAttacked() {\n        this.removeClassName(ATTACKED_ID_NAME);\n    }\n\n    isAttacked() {\n        return this.hasClassName(ATTACKED_ID_NAME);\n    }\n\n    getProperties() {\n        return {\n            className: this.container.className\n        };\n    }\n\n    clear() {\n        this.container.className = '';\n    }\n\n    setProperties(prop) {\n        this.container.className = prop.className;\n    }\n\n    setOnClick(listener) {\n        this.container.onclick = listener;\n    }\n\n    removeOnClick() {\n        this.container.onclick = null;\n    }\n\n    addNote(tObjects, squareWidth, fSize) {\n        const backgroundImage = genBackgroundNote(tObjects, squareWidth, fSize);\n        this.container.style.backgroundImage = backgroundImage;\n    }\n\n    setFlipped(isUpsideDown) {\n        this.removeClassName(FLIPPED_CLASS);\n        this.isUpsideDown = isUpsideDown;\n        if (isUpsideDown) {\n            this.addClassName(FLIPPED_CLASS);\n        }\n    }\n\n    clone() {\n        const div = document.createElement('div');\n        return new SquarePiece(this.x, this.y, div, this.piece);\n    }\n}\n\nmodule.exports = { SquarePiece };\n","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */\n\n'use strict';\n\nconst { boardHelper } = require('khmer-chess');\nconst {\n    PIECES_SVG,\n    squareWidth,\n    svgCSS,\n    WOOD_COLORS\n} = require('./svg');\nconst {\n    CSS_TABLE_SELECTOR,\n    SELECTED_CLASS_NAME,\n    PIECE_CLASS_NAME,\n    ATTACKED_ID_NAME,\n    CSS_PSEUDO_HIGHLIGHT,\n    CSS_PSEUDO_PIECE\n} = require('./constance');\nconst appendCss = require('./appendCss');\n\nfunction addCss({ uniqueClassName, width }) {\n    const sqWidth = squareWidth(width);\n    const pieceFontSize = width / 12;\n    const selector = `${CSS_TABLE_SELECTOR}.${uniqueClassName}`;\n\n    let css = `\n        ${selector} {\n            table-layout: fixed;\n            border-collapse: collapse;\n            border-spacing: 0px;\n            width: ${width}px;\n            text-align: center;\n            border: 0px;\n            padding: 0px;\n            margin: auto;\n            background-color: white;\n        }\n        ${selector} td table {\n            table-layout: fixed;\n            border-collapse: collapse;\n            border-spacing: 0px;\n            text-align: center;\n            border: 0px;\n            padding: 0px;\n            margin: auto;\n            background-color: white;\n        }\n        ${selector} tr {\n            width: ${width}px;\n            height: ${sqWidth}px;\n        }\n        ${selector} td {\n            user-select: none;\n            background-color: #f4d1a6;\n            border: 1px solid white;\n            padding: 0px;\n            margin: 0px;\n            max-width: ${sqWidth}px;\n            max-height: ${sqWidth}px;\n            background-repeat: no-repeat;\n            cursor: pointer;\n        }\n        ${selector} td,\n        ${selector} td::before,\n        ${selector} td::after {\n            font-size: ${pieceFontSize}px;\n        }\n        ${selector} td::after {\n            opacity: 0.4;\n        }\n        ${selector} td::before {\n            float: left;\n        }\n        ${selector} td:not(.graveyard)::before,\n        ${selector} td:not(.graveyard)::after {\n            width: ${sqWidth}px;\n            height: ${sqWidth}px;\n            background-size: ${sqWidth}px ${sqWidth}px;\n            display: block;\n            content: ' ';\n        }\n    `;\n\n    css += `\n    ${selector} td.${SELECTED_CLASS_NAME}${CSS_PSEUDO_HIGHLIGHT} {\n        background: radial-gradient(#f4d1a6, #e66465) !important;\n    }`;\n\n    boardHelper.getColorArray().forEach((color) => {\n        boardHelper.getPieceCharArray().forEach((type) => {\n            const woodColor = color === boardHelper.PIECE_COLOR_BLACK ? WOOD_COLORS.BLACK : WOOD_COLORS.WHITE;\n            const attackedSVG = `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n                <style>${svgCSS.attacked(woodColor)}</style>\n                ${PIECES_SVG[color + type]}\n            </svg>`;\n            const notAttackedSVG = `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n                <style>${svgCSS.notAttacked(woodColor)}</style>\n                ${PIECES_SVG[color + type]}\n            </svg>`;\n            css += `\n                ${selector} td.${PIECE_CLASS_NAME}.${ATTACKED_ID_NAME}.type-${type}.color-${color}${CSS_PSEUDO_PIECE} {\n                    background-image: url('data:image/svg+xml;utf8,${encodeURIComponent(attackedSVG)}');\n                }\n                ${selector} td.${PIECE_CLASS_NAME}.type-${type}.color-${color}${CSS_PSEUDO_PIECE} {\n                    background-image: url('data:image/svg+xml;utf8,${encodeURIComponent(notAttackedSVG)}');\n                }\n                `;\n        });\n    });\n\n    appendCss(uniqueClassName, css);\n}\n\nmodule.exports = addCss;\n","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */\n\n'use strict';\n\nconst { boardHelper } = require('khmer-chess');\nconst appendCss = require('./appendCss');\nconst { squareWidth, genBackgroundNote } = require('./svg');\nconst {\n    TD_GRAVEYARD_NUMBER,\n    CSS_TABLE_SELECTOR,\n    GRAVEYARD_NOTE_PREFIX_CLASS,\n    BOARD_NOTE_V_PREFIX_CLASS,\n    BOARD_NOTE_H_PREFIX_CLASS,\n    FLIPPED_CLASS,\n    CSS_PSEUDO_NOTE\n} = require('./constance');\n\nfunction addCssNote({ uniqueClassName, width }) {\n    const sqWidth = squareWidth(width);\n    const selector = `${CSS_TABLE_SELECTOR}.${uniqueClassName}`;\n    let css = '';\n    const fSize = 15 * width / 600;\n    for (let i = 0; i < TD_GRAVEYARD_NUMBER; i++) {\n        const bgImg = genBackgroundNote([{\n            x: sqWidth / 2 - sqWidth / 10,\n            y: sqWidth,\n            t: boardHelper.VERTICAL_NOTE_LETTERS[i]\n        }], sqWidth, fSize);\n        css += `\n        ${selector} td.${GRAVEYARD_NOTE_PREFIX_CLASS}-${i + 1}${CSS_PSEUDO_NOTE} {\n            background-image: ${bgImg};\n        }\n        `;\n    }\n\n    const hx = sqWidth / 2 - sqWidth / 10;\n    const vy = sqWidth / 2 + sqWidth / 10;\n    let bgImg = (i) => genBackgroundNote([{\n        x: hx,\n        y: sqWidth,\n        t: boardHelper.HORIZONTAL_NOTE_LETTERS[i]\n    }]);\n    for (let i = 0; i < boardHelper.ROW_NUMBER; i++) {\n        css += `\n        ${selector} td.${BOARD_NOTE_H_PREFIX_CLASS}-${i + 1}${CSS_PSEUDO_NOTE} {\n            background-image: ${bgImg(i)};\n        }\n        ${selector} td.${FLIPPED_CLASS}.${BOARD_NOTE_H_PREFIX_CLASS}-${i + 1}${CSS_PSEUDO_NOTE} {\n            background-image: ${bgImg(boardHelper.ROW_NUMBER - i - 1)};\n        }\n        `;\n    }\n    bgImg = (i) => genBackgroundNote([{\n        x: 0,\n        y: vy,\n        t: boardHelper.VERTICAL_NOTE_LETTERS[i]\n    }]);\n    for (let j = 0; j < boardHelper.ROW_NUMBER; j++) {\n        css += `\n            ${selector} td.${BOARD_NOTE_V_PREFIX_CLASS}-${j + 1}${CSS_PSEUDO_NOTE} {\n                background-image: ${bgImg(j)};\n            }\n            ${selector} td.flipped.${BOARD_NOTE_V_PREFIX_CLASS}-${j + 1}${CSS_PSEUDO_NOTE} {\n                background-image: ${bgImg(boardHelper.ROW_NUMBER - j - 1)};\n            }\n            `;\n    }\n\n    bgImg = (i) => genBackgroundNote([\n        {\n            x: hx,\n            y: sqWidth,\n            t: boardHelper.HORIZONTAL_NOTE_LETTERS[i]\n        }, {\n            x: 0,\n            y: vy,\n            t: boardHelper.VERTICAL_NOTE_LETTERS[i]\n        }\n    ]);\n    css += `\n    ${selector} td.${BOARD_NOTE_V_PREFIX_CLASS}-1.${BOARD_NOTE_H_PREFIX_CLASS}-1${CSS_PSEUDO_NOTE} {\n        background-image: ${bgImg(0)};\n    }\n    ${selector} td.${FLIPPED_CLASS}.${BOARD_NOTE_V_PREFIX_CLASS}-1.${BOARD_NOTE_H_PREFIX_CLASS}-1${CSS_PSEUDO_NOTE} {\n        background-image: ${bgImg(7)};\n    }\n    `;\n\n    appendCss(uniqueClassName, css);\n}\n\nmodule.exports = addCssNote;\n","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */\n\n'use strict';\n\nfunction appendCss(uniqueClassName, css) {\n    const head = document.head || document.getElementsByTagName('head')[0];\n    const style = document.createElement('style');\n    style.classList.add(uniqueClassName);\n    head.appendChild(style);\n\n    style.type = 'text/css';\n    if (style.styleSheet) {\n        // This is required for IE8 and below.\n        style.styleSheet.cssText = css;\n    } else {\n        style.appendChild(document.createTextNode(css));\n    }\n}\n\nmodule.exports = appendCss;\n","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */\n\n'use strict';\n\nconst move = require('../public/assets/Move.mp3').default;\nconst capture = require('../public/assets/Capture.mp3').default;\nconst check = require('../public/assets/Check.mp3').default;\n\nconst AUDIO = {\n    move,\n    capture,\n    check\n};\n\nmodule.exports = { AUDIO };\n","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */\n\n'use strict';\n\nconst BORDER_WIDTH = 1;\nconst MIN_SQUARE_WIDTH = 5;\nconst TD_GRAVEYARD_NUMBER = 30;\nconst TABLE_CLASS = 'khmer-chess-board';\nconst CSS_TABLE_SELECTOR = `table.${TABLE_CLASS}`;\nconst SELECTED_CLASS_NAME = 'selected';\nconst ATTACKED_ID_NAME = 'attacked';\nconst PIECE_CLASS_NAME = 'piece';\nconst GRAVEYARD_NOTE_PREFIX_CLASS = 'note-gy';\nconst BOARD_NOTE_V_PREFIX_CLASS = 'note-board-v';\nconst BOARD_NOTE_H_PREFIX_CLASS = 'note-board-h';\nconst FLIPPED_CLASS = 'flipped';\nconst CSS_PSEUDO_HIGHLIGHT = '::after';\nconst CSS_PSEUDO_PIECE = '';\nconst CSS_PSEUDO_NOTE = '::before';\n\nmodule.exports = {\n    BORDER_WIDTH,\n    MIN_SQUARE_WIDTH,\n    TD_GRAVEYARD_NUMBER,\n    TABLE_CLASS,\n    CSS_TABLE_SELECTOR,\n    SELECTED_CLASS_NAME,\n    PIECE_CLASS_NAME,\n    ATTACKED_ID_NAME,\n    GRAVEYARD_NOTE_PREFIX_CLASS,\n    BOARD_NOTE_V_PREFIX_CLASS,\n    BOARD_NOTE_H_PREFIX_CLASS,\n    FLIPPED_CLASS,\n    CSS_PSEUDO_HIGHLIGHT,\n    CSS_PSEUDO_PIECE,\n    CSS_PSEUDO_NOTE\n};\n","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */\n\n'use strict';\n\nconst { boardHelper } = require('khmer-chess');\nconst { SquarePiece } = require('./SquarePiece');\nconst { squareWidth } = require('./svg');\nconst {\n    BORDER_WIDTH,\n    TD_GRAVEYARD_NUMBER,\n    TABLE_CLASS\n} = require('./constance');\n\nfunction drawBoardAndGraveyard({ uniqueClassName, width, container, boardManager, graveyardManager }) {\n    const sqWidth = squareWidth(width);\n\n    const createTable = (parent = container) => {\n        const table = document.createElement('table');\n        parent.appendChild(table);\n        return table;\n    };\n    const createTbody = (parent) => {\n        const tbody = document.createElement('tbody');\n        parent.appendChild(tbody);\n        return tbody;\n    };\n    const createTr = (parent) => {\n        const tr = document.createElement('tr');\n        parent.appendChild(tr);\n        return tr;\n    };\n    const createTd = (parent) => {\n        const td = document.createElement('td');\n        parent.appendChild(td);\n        return td;\n    };\n\n    const table = createTable();\n    table.classList.add(TABLE_CLASS);\n    table.classList.add(uniqueClassName);\n    const tbody = createTbody(table);\n\n    for (let i = 0; i < boardHelper.ROW_NUMBER; i++) {\n        const tr = createTr(tbody);\n        for (let j = 0; j < boardHelper.ROW_NUMBER; j++) {\n            const td = createTd(tr);\n            const squarePiece = new SquarePiece(j, boardHelper.ROW_NUMBER - i - 1, td, null);\n            const index = boardHelper.nerdXyToPos(j, boardHelper.ROW_NUMBER - i - 1);\n            boardManager.put(index, squarePiece);\n        }\n    }\n\n    const graveyardContainerHeight = sqWidth + 10 * BORDER_WIDTH;\n    table.style.height = width + graveyardContainerHeight;\n    const trGraveyardContainer = createTr(tbody);\n    trGraveyardContainer.style.height = graveyardContainerHeight;\n    const tdGraveyardContainer = createTd(trGraveyardContainer);\n    tdGraveyardContainer.classList.add('graveyard');\n    tdGraveyardContainer.addEventListener('mousewheel', function (e) {\n        this.scrollLeft -= (e.wheelDelta);\n        e.preventDefault();\n    }, false);\n    tdGraveyardContainer.style.width = width;\n    tdGraveyardContainer.style.height = graveyardContainerHeight;\n    tdGraveyardContainer.style.overflowX = 'scroll';\n    tdGraveyardContainer.style.overflowY = 'hidden';\n    tdGraveyardContainer.colSpan = 8;\n    tdGraveyardContainer.style.padding = 8 * BORDER_WIDTH * width / 600;\n    tdGraveyardContainer.style.boxShadow = `inset 0 0 ${width / 60}px #000000`;\n    const tableGraveyard = createTable(tdGraveyardContainer);\n    const graveyardWidth = BORDER_WIDTH * (TD_GRAVEYARD_NUMBER - 1) + sqWidth * TD_GRAVEYARD_NUMBER;\n    tableGraveyard.style.width = graveyardWidth;\n    tableGraveyard.style.height = sqWidth;\n    const tbodyGraveyard = createTbody(tableGraveyard);\n    const trGraveyard = createTr(tbodyGraveyard);\n    trGraveyard.style.width = graveyardWidth;\n\n    for (let i = 0; i < TD_GRAVEYARD_NUMBER; i++) {\n        const tdGraveyard = createTd(trGraveyard);\n        const squarePiece = new SquarePiece(i, 0, tdGraveyard, null, true);\n        graveyardManager.push(squarePiece);\n    }\n}\n\nmodule.exports = drawBoardAndGraveyard;\n","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */\n\n'use strict';\n\nconst { boardHelper } = require('khmer-chess');\nconst { BORDER_WIDTH } = require('./constance');\n\nconst WOOD_COLORS = {\n    WHITE: '#ffffff',\n    BLACK: '#422007'\n};\n\nconst filterId = 'drop-shadow';\nconst SVG_FILTER = `<defs>\n<filter id=\"${filterId}\" height=\"130%\">\n  <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"5\"/> \n  <feOffset dx=\"5\" dy=\"5\" result=\"offsetblur\"/> \n  <feMerge> \n    <feMergeNode/>\n    <feMergeNode in=\"SourceGraphic\"/> \n  </feMerge>\n</filter>\n</defs>`;\nconst PIECES_SVG = {\n    [`${boardHelper.PIECE_COLOR_WHITE}${boardHelper.PIECE_TYPE_TOUK}`]: `\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.WHITE}\" filter=\"url(#${filterId})\" \n    d=\"M508.259 454.128h0.302734c0.723633 0.328125 57.5889 26.0469 95.0117 39.4414c15.5312 5.55664 60.1143 14.5146 100.886 37.5742c40.7734 23.0596 80.3154 64.8369 83.1123 130.47c2.31543 54.373 -10.3096 109.333 -25.2803 154.087\nc6.84863 10.3203 11.2207 22.1895 11.2207 35.21c0 21.4883 -11.8955 39.8535 -27.207 53.2637c-15.3145 13.4111 -34.8975 23.6748 -57.9736 32.2236c-46.1543 17.0977 -106.736 26.8711 -173.619 26.8711c-2.0752 0 -4.14355 -0.0117188 -6.20801 -0.03125\nc-0.0615234 -0.000976562 -0.124023 0.00195312 -0.1875 0c-2.06543 0.0195312 -4.13281 0.03125 -6.20996 0.03125c-66.8838 0 -127.464 -9.77344 -173.617 -26.8711c-23.0781 -8.54883 -42.6602 -18.8125 -57.9736 -32.2236\nc-15.3125 -13.4102 -27.2061 -31.7754 -27.2061 -53.2637c0 -13.0205 4.36914 -24.8896 11.2197 -35.21c-14.9707 -44.7539 -27.5957 -99.7139 -25.2793 -154.087c2.79492 -65.6328 42.3359 -107.41 83.1084 -130.47c40.7734 -23.0596 85.3584 -32.0176 100.886 -37.5742\nc37.4268 -13.3945 94.291 -39.1133 95.0146 -39.4414zM508.409 504.763c-20.376 8.9502 -53.2832 23.0273 -79.7217 32.4873c-23.9287 8.56348 -61.2559 15.9336 -93.749 34.3086c-14.8428 8.39648 -28.126 18.1328 -38.3906 30.8848\nc0.896484 3.19238 3.48145 7.44922 9.91992 13.0869c8.62891 7.55859 23.416 15.9863 42.6934 23.126c38.5488 14.2812 94.6504 23.8262 156.645 23.8262c0.84082 0 1.6748 -0.0078125 2.51074 -0.0117188h0.1875c0.835938 0.00390625 1.66992 0.0117188 2.50879 0.0117188\nc61.9961 0 118.094 -9.54492 156.646 -23.8262c19.2773 -7.13965 34.0645 -15.5674 42.6934 -23.126c6.43945 -5.6377 9.02246 -9.89453 9.91895 -13.0869c-10.2627 -12.752 -23.5479 -22.4883 -38.3906 -30.8848c-32.4932 -18.375 -69.8193 -25.7451 -93.7471 -34.3086\nc-26.4395 -9.45996 -59.3467 -23.5371 -79.7246 -32.4873zM276.397 651.025c-0.543945 4.00684 -0.922852 8.18848 -1.11035 12.5723c-1.66699 39.165 6.68555 81.0391 17.7539 118.115l0.115234 0.542969c9.16602 6.33594 20.1504 12.4805 32.7764 18.0752\nc44.8291 19.8672 109.379 32.9443 180.788 32.9443c0.53125 0 1.0625 -0.00488281 1.5957 -0.00683594v-0.00195312h0.0927734h0.0947266v0.00195312c0.53125 0.00195312 1.06445 0.00683594 1.59668 0.00683594c71.4082 0 135.957 -13.0771 180.788 -32.9443\nc12.6221 -5.59473 23.6094 -11.7393 32.7764 -18.0752l0.113281 -0.542969c11.0703 -37.0762 19.4219 -78.9502 17.7549 -118.115c-0.1875 -4.38379 -0.567383 -8.56543 -1.1123 -12.5723c-14.8867 12.9287 -34.0654 23 -56.7441 31.3984\nc-45.7266 16.9404 -106.057 26.7051 -172.664 26.7051c-0.838867 0 -1.67285 -0.00976562 -2.50879 -0.0146484h-0.1875c-0.835938 0.00585938 -1.66992 0.0146484 -2.51074 0.0146484c-66.6064 0 -126.937 -9.76465 -172.663 -26.7051\nc-22.6777 -8.39844 -41.8574 -18.4697 -56.7451 -31.3984zM304.557 836.92l0.0224609 0.100586c-8.25391 7.22949 -9.38965 11.5586 -9.38965 13.8896c0 2.33301 1.13574 6.66406 9.38965 13.8916c8.25293 7.22656 22.7715 15.5518 41.835 22.6123\nc38.123 14.123 93.9688 23.6562 155.692 23.6562c2.07812 0 4.14453 -0.0126953 6.20996 -0.0341797v-0.00292969h0.0927734h0.0947266v0.00292969c2.06445 0.0214844 4.13184 0.0341797 6.20801 0.0341797c61.7227 0 117.569 -9.5332 155.694 -23.6562\nc19.0615 -7.06055 33.5811 -15.3857 41.835 -22.6123c8.25293 -7.22754 9.38965 -11.5586 9.38965 -13.8916c0 -2.33105 -1.13672 -6.66016 -9.38965 -13.8896l0.0195312 -0.100586c-1.47266 0.680664 -2.96289 1.3584 -4.4668 2.02441\nc-52.0322 23.0605 -121.295 36.5273 -197.693 36.5273c-0.56543 0 -1.12793 -0.0078125 -1.69141 -0.00878906c-0.563477 0.00195312 -1.12402 0.00878906 -1.68848 0.00878906c-76.3984 0 -145.662 -13.4668 -197.694 -36.5273\nc-1.50488 -0.666016 -2.99316 -1.34375 -4.46973 -2.02441zM508.259 454.128h0.302734c0.723633 0.328125 57.5889 26.0469 95.0117 39.4414c15.5312 5.55664 60.1143 14.5146 100.886 37.5742c40.7734 23.0596 80.3154 64.8369 83.1123 130.47\nc2.31543 54.373 -10.3096 109.333 -25.2803 154.087c6.84863 10.3203 11.2207 22.1895 11.2207 35.21c0 21.4883 -11.8955 39.8535 -27.207 53.2637c-15.3145 13.4111 -34.8975 23.6748 -57.9736 32.2236c-46.1543 17.0977 -106.736 26.8711 -173.619 26.8711\nc-2.0752 0 -4.14355 -0.0117188 -6.20801 -0.03125c-0.0615234 -0.000976562 -0.124023 0.00195312 -0.1875 0c-2.06543 0.0195312 -4.13281 0.03125 -6.20996 0.03125c-66.8838 0 -127.464 -9.77344 -173.617 -26.8711\nc-23.0781 -8.54883 -42.6602 -18.8125 -57.9736 -32.2236c-15.3125 -13.4102 -27.2061 -31.7754 -27.2061 -53.2637c0 -13.0205 4.36914 -24.8896 11.2197 -35.21c-14.9707 -44.7539 -27.5957 -99.7139 -25.2793 -154.087c2.79492 -65.6328 42.3359 -107.41 83.1084 -130.47\nc40.7734 -23.0596 85.3584 -32.0176 100.886 -37.5742c37.4268 -13.3945 94.291 -39.1133 95.0146 -39.4414zM508.409 504.763c-20.376 8.9502 -53.2832 23.0273 -79.7217 32.4873c-23.9287 8.56348 -61.2559 15.9336 -93.749 34.3086\nc-14.8428 8.39648 -28.126 18.1328 -38.3906 30.8848c0.896484 3.19238 3.48145 7.44922 9.91992 13.0869c8.62891 7.55859 23.416 15.9863 42.6934 23.126c38.5488 14.2812 94.6504 23.8262 156.645 23.8262c0.84082 0 1.6748 -0.0078125 2.51074 -0.0117188h0.1875\nc0.835938 0.00390625 1.66992 0.0117188 2.50879 0.0117188c61.9961 0 118.094 -9.54492 156.646 -23.8262c19.2773 -7.13965 34.0645 -15.5674 42.6934 -23.126c6.43945 -5.6377 9.02246 -9.89453 9.91895 -13.0869c-10.2627 -12.752 -23.5479 -22.4883 -38.3906 -30.8848\nc-32.4932 -18.375 -69.8193 -25.7451 -93.7471 -34.3086c-26.4395 -9.45996 -59.3467 -23.5371 -79.7246 -32.4873zM276.397 651.025c-0.543945 4.00684 -0.922852 8.18848 -1.11035 12.5723c-1.66699 39.165 6.68555 81.0391 17.7539 118.115l0.115234 0.542969\nc9.16602 6.33594 20.1504 12.4805 32.7764 18.0752c44.8291 19.8672 109.379 32.9443 180.788 32.9443c0.53125 0 1.0625 -0.00488281 1.5957 -0.00683594v-0.00195312h0.0927734h0.0947266v0.00195312c0.53125 0.00195312 1.06445 0.00683594 1.59668 0.00683594\nc71.4082 0 135.957 -13.0771 180.788 -32.9443c12.6221 -5.59473 23.6094 -11.7393 32.7764 -18.0752l0.113281 -0.542969c11.0703 -37.0762 19.4219 -78.9502 17.7549 -118.115c-0.1875 -4.38379 -0.567383 -8.56543 -1.1123 -12.5723\nc-14.8867 12.9287 -34.0654 23 -56.7441 31.3984c-45.7266 16.9404 -106.057 26.7051 -172.664 26.7051c-0.838867 0 -1.67285 -0.00976562 -2.50879 -0.0146484h-0.1875c-0.835938 0.00585938 -1.66992 0.0146484 -2.51074 0.0146484\nc-66.6064 0 -126.937 -9.76465 -172.663 -26.7051c-22.6777 -8.39844 -41.8574 -18.4697 -56.7451 -31.3984zM304.557 836.92l0.0224609 0.100586c-8.25391 7.22949 -9.38965 11.5586 -9.38965 13.8896c0 2.33301 1.13574 6.66406 9.38965 13.8916\nc8.25293 7.22656 22.7715 15.5518 41.835 22.6123c38.123 14.123 93.9688 23.6562 155.692 23.6562c2.07812 0 4.14453 -0.0126953 6.20996 -0.0341797v-0.00292969h0.0927734h0.0947266v0.00292969c2.06445 0.0214844 4.13184 0.0341797 6.20801 0.0341797\nc61.7227 0 117.569 -9.5332 155.694 -23.6562c19.0615 -7.06055 33.5811 -15.3857 41.835 -22.6123c8.25293 -7.22754 9.38965 -11.5586 9.38965 -13.8916c0 -2.33105 -1.13672 -6.66016 -9.38965 -13.8896l0.0195312 -0.100586\nc-1.47266 0.680664 -2.96289 1.3584 -4.4668 2.02441c-52.0322 23.0605 -121.295 36.5273 -197.693 36.5273c-0.56543 0 -1.12793 -0.0078125 -1.69141 -0.00878906c-0.563477 0.00195312 -1.12402 0.00878906 -1.68848 0.00878906\nc-76.3984 0 -145.662 -13.4668 -197.694 -36.5273c-1.50488 -0.666016 -2.99316 -1.34375 -4.46973 -2.02441z\" />\n `,\n    [`${boardHelper.PIECE_COLOR_WHITE}${boardHelper.PIECE_TYPE_SES}`]: `\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.WHITE}\" filter=\"url(#${filterId})\" \n    d=\"M507.133 128.938c2.10352 0 6.27539 3.76953 6.33398 3.82324l0.0253906 0.0244141c-0.0253906 -0.0244141 61.4521 53.6514 85.3789 81.9648l6.52539 -18.3604s7.18066 16.7627 15.5078 39.5127l114.568 109.985c3.75 3.60156 5.85742 8.48535 5.85742 13.5771v243.649\n    c0.410156 -0.0283203 0.819336 -0.0546875 1.22852 -0.0839844c-0.0605469 4.50195 -0.490234 8.92383 -1.22852 13.2656v75.2002c0 3.69629 -1.11035 7.31348 -3.19922 10.418l-16.5273 24.5645l14.8242 20.0537c2.40039 3.24707 3.68945 7.12988 3.68945 11.1113v15.4561\n    l0.0839844 0.0185547v10.043c0 0.785156 -0.0332031 1.57031 -0.0839844 2.35449v17.6836c0 0.416992 -0.0146484 0.833008 -0.0429688 1.24902v7.24707c0.0390625 0.00976562 0.126953 0.0322266 0.126953 0.0322266v5.99414\n    c-0.000976562 -1.00488 -0.0429688 -2.00879 -0.126953 -3.01367v6.06445c0.0800781 -0.958008 0.126953 -1.91602 0.126953 -2.875v55.5049c0.000976562 50.2676 -101.563 91.0166 -226.85 91.0166c-2.11914 0 -4.23535 -0.0273438 -6.35156 -0.0517578\n    c-2.11621 0.0244141 -4.23242 0.0517578 -6.35156 0.0517578c-125.286 0 -226.851 -40.749 -226.85 -91.0166v-55.5049c0.00488281 0.958984 0.046875 1.91699 0.126953 2.875v-6.06445c-0.0839844 1.00488 -0.126953 2.00879 -0.126953 3.01367v-5.99414\n    s0.0878906 -0.0224609 0.126953 -0.0322266v-7.24707c-0.0283203 -0.416016 -0.0429688 -0.832031 -0.0429688 -1.24902v-17.6836c-0.0507812 -0.78418 -0.0839844 -1.56934 -0.0839844 -2.35449v-10.043l0.0839844 -0.0185547v-15.4561\n    c0 -3.98145 1.28906 -7.86426 3.68945 -11.1113l14.8242 -20.0537l-16.5273 -24.5645c-2.08887 -3.10449 -3.19922 -6.72168 -3.19922 -10.418v-75.2002c-0.738281 -4.3418 -1.16797 -8.76367 -1.22852 -13.2656c0.40918 0.0292969 0.818359 0.0556641 1.22852 0.0839844\n    v-243.649c0 -5.0918 2.10742 -9.97559 5.85742 -13.5771l114.568 -109.985c8.32715 -22.75 15.5078 -39.5127 15.5078 -39.5127l6.52539 18.3604l85.3867 -81.9727s4.41113 -3.83984 6.61719 -3.83984zM507 180.858l-77.4805 74.3818l19.1309 53.834\n    c2.2627 -2.43066 4.80371 -5.06543 7.5625 -7.71387c4.59277 -4.4082 9.64746 -8.84863 15.4141 -12.4688c4.3252 -2.71484 9.39941 -5.90625 16.2363 -6.0791c2.2793 -0.0566406 4.75488 0.22168 7.46289 0.963867c9.21777 2.52832 9.81445 7.37012 10.8105 9.6416\n    c0.356445 0.813477 0.625 1.55176 0.863281 2.26855c0.238281 -0.716797 0.506836 -1.45508 0.863281 -2.26855c0.996094 -2.27148 1.59375 -7.11328 10.8105 -9.6416c2.70801 -0.742188 5.18359 -1.02051 7.46289 -0.963867\n    c6.83691 0.172852 11.9111 3.36426 16.2363 6.0791c5.7666 3.62012 10.8213 8.06055 15.4141 12.4688c2.75879 2.64844 5.2998 5.2832 7.5625 7.71387l19.1309 -53.834zM370.654 311.752l-57.9863 55.666v246.659c4.93457 19.583 21.7236 38.7188 49.959 54.5967\n    c20.6514 11.6133 46.8711 20.8506 76.4863 26.3301c7.5 2.91895 16.1855 7.33789 18.5352 12.8154c2.18945 5.10547 6.88965 14.5527 11.1152 22.8809c0.928711 4.10254 -2.65039 5.66992 -7.59766 6c-45.2871 -4.55176 -86.123 -16.8662 -118.607 -35.1338\n    c-10.9092 -6.13477 -20.9678 -13.0654 -29.8906 -20.6836v4.95215l20.6777 30.7334c4.4375 6.59766 4.24414 15.124 -0.490234 21.5293l-18.9746 25.6689v0.0634766l0.0429688 -0.00976562v15.3457c42.3457 24.626 112.153 39.3301 186.723 39.3301\n    c2.11914 0 4.23535 -0.0263672 6.35156 -0.0507812c2.11621 0.0244141 4.23242 0.0507812 6.35156 0.0507812c74.5693 0 144.377 -14.7041 186.723 -39.3301v-15.3457l0.0429688 0.00976562v-0.0634766l-18.9746 -25.6689\n    c-4.73438 -6.40527 -4.92773 -14.9316 -0.490234 -21.5293l20.6777 -30.7334v-4.95215c-8.92285 7.61816 -18.9814 14.5488 -29.8906 20.6836c-32.4844 18.2676 -73.3203 30.582 -118.607 35.1338c-4.94727 -0.330078 -8.52734 -1.89746 -7.59766 -6\n    c4.22559 -8.32812 8.92578 -17.7754 11.1152 -22.8809c2.34961 -5.47754 11.0352 -9.89648 18.5352 -12.8154c29.6152 -5.47949 55.835 -14.7168 76.4863 -26.3301c28.2354 -15.8779 45.0244 -35.0137 49.959 -54.5967v-246.659l-57.9844 -55.666\n    c2.44141 12.7822 3.56934 24.3428 2.47266 33.1133c-1.93262 15.4629 -6.95605 51.6455 -12.5195 91.1641c-0.124023 0.510742 -0.209961 1.13867 -0.263672 1.875c-0.672852 4.77832 -1.35352 9.59277 -2.03711 14.4326c-3.52832 13.5225 -11.5557 17.0801 -27.9609 21.666\n    l-10.2148 2.78418v10.1855l0.28125 0.436523s-0.260742 1.61133 -0.28125 1.74023v8.88379s24.8867 1.22949 27.1387 -2.4248c15.1641 13.3623 15.5518 37.4561 -7.53516 87.1514l-53.5605 103.776l-9.08008 17.5898\n    c-0.0175781 0.0332031 -7.96289 15.3545 -43.6387 15.3545c-31.1611 0 -39.8623 -11.6885 -41.5762 -14.6709l-0.357422 -0.689453l-62.6367 -121.36c-23.0879 -49.6953 -22.6992 -73.7891 -7.53516 -87.1514c2.25195 3.6543 27.1387 2.4248 27.1387 2.4248v-21.2461\n    l-10.2148 -2.78418c-16.4053 -4.58594 -24.4326 -8.14355 -27.9609 -21.666c-0.683594 -4.83984 -1.36426 -9.6543 -2.03711 -14.4326c-0.0537109 -0.736328 -0.139648 -1.36426 -0.263672 -1.875c-5.56348 -39.5186 -10.5869 -75.7012 -12.5195 -91.1641\n    c-1.0957 -8.77051 0.03125 -20.3311 2.47266 -33.1133zM480.398 319.068h-0.00195312c-1.00098 0.889648 -1.99219 1.70996 -2.97852 2.65723c-7.51074 7.20996 -13.9082 15.0879 -13.9082 15.0879c-2.62012 3.24512 -6.55762 5.2627 -10.8242 5.54492l-15.2715 13.1084\n    l29.1777 271.16l18.6055 16.8115c0.211914 -34.9834 0.441406 -93.8525 0.00976562 -155.487c-0.329102 -46.9561 -1.04492 -94.0137 -2.43359 -129.308c-0.640625 -16.2861 -1.45215 -29.6777 -2.375 -39.5752zM533.594 319.068h-0.00195312\n    c-0.923828 9.89746 -1.73438 23.2891 -2.375 39.5752c-1.38867 35.2939 -2.10449 82.3516 -2.43359 129.308c-0.431641 61.6348 -0.202148 120.504 0.00976562 155.487l18.6055 -16.8115l1.3418 -5.8125l28.1035 -265.248l-15.5391 -13.208\n    c-4.2666 -0.282227 -8.2041 -2.2998 -10.8242 -5.54492c0 0 -6.39746 -7.87793 -13.9082 -15.0879c-0.986328 -0.947266 -1.97754 -1.76758 -2.97852 -2.65723zM313.926 823.327v34.5605c42.3457 24.627 112.153 39.3301 186.723 39.3311\n    c2.11914 0 4.23535 -0.0273438 6.35156 -0.0517578c2.11621 0.0244141 4.23242 0.0517578 6.35156 0.0517578c74.5693 -0.000976562 144.377 -14.7041 186.723 -39.3311v-34.5605c-42.3457 24.627 -112.153 39.3301 -186.723 39.3311\n    c-2.11914 0 -4.23535 -0.0273438 -6.35156 -0.0517578c-2.11621 0.0244141 -4.23242 0.0517578 -6.35156 0.0517578c-74.5693 -0.000976562 -144.377 -14.7041 -186.723 -39.3311z\" />\n `,\n    [`${boardHelper.PIECE_COLOR_WHITE}${boardHelper.PIECE_TYPE_KOL}`]: `\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.WHITE}\" filter=\"url(#${filterId})\" \n    d=\"M507 235.393c1.83789 0.286133 3.61914 0.865234 5.27539 1.71289l64.8867 33.2344c10.7539 5.50977 12.8213 20.001 4.03711 28.2988c0 0 -7.0332 6.64258 -15.0273 14.4414c-3.23633 3.15723 -4.9248 5.08301 -8.07422 8.27344\n    c5.47754 2.72754 11.8604 5.69922 19.3691 8.82812c22.6201 9.42383 50.4775 19.25 65.6953 24.7285c22.7773 8.19922 65.4688 29.5645 93.7773 69.9082c28.3086 40.3428 37.751 101.351 -7.36719 172.721c-24.5537 38.8389 -44.7812 68.5156 -61.2578 91.1914\n    c8.08496 5.00098 15.2607 10.543 21.3789 16.7344c11.5938 11.7324 19.5781 26.6494 19.5781 43.0977c0 1.43848 -0.0820312 2.8623 -0.201172 4.27734v41.1211c0 2.58789 -0.265625 5.1748 -0.794922 7.75391h0.404297v31.6875\n    c0.242188 -1.68164 0.373047 -3.36523 0.390625 -5.04883v49.6074c0 48.3389 -90.3945 87.5459 -202.07 87.7402c-111.677 -0.194336 -202.07 -39.4014 -202.07 -87.7402v-49.6074c0.0185547 1.68359 0.148438 3.36719 0.390625 5.04883v-31.6875h0.404297\n    c-0.529297 -2.5791 -0.794922 -5.16602 -0.794922 -7.75391v-41.1211c-0.119141 -1.41504 -0.201172 -2.83887 -0.201172 -4.27734c0 -16.4482 7.98438 -31.3652 19.5781 -43.0977c6.11816 -6.19141 13.2939 -11.7334 21.3789 -16.7344\n    c-16.4766 -22.6758 -36.7041 -52.3525 -61.2578 -91.1914c-45.1182 -71.3701 -35.6758 -132.378 -7.36719 -172.721c28.3086 -40.3438 71 -61.709 93.7773 -69.9082c15.2178 -5.47852 43.0752 -15.3047 65.6953 -24.7285\n    c7.50879 -3.12891 13.8916 -6.10059 19.3691 -8.82812c-3.14941 -3.19043 -4.83789 -5.11621 -8.07422 -8.27344c-7.99414 -7.79883 -15.0273 -14.4414 -15.0273 -14.4414c-8.78418 -8.29785 -6.7168 -22.7891 4.03711 -28.2988l64.8867 -33.2344\n    c1.65625 -0.847656 3.4375 -1.42676 5.27539 -1.71289zM507 273.729l-32.4082 16.5996c7.51367 7.3457 15.2119 14.9551 20.0684 20.7832c1.03223 1.23926 1.90234 2.77734 2.5957 4.45703c2.51172 0.912109 5.62793 1.56055 9.04492 1.56055\n    c4.22754 0 8.00586 -0.983398 10.7305 -2.24414c0.641602 -1.41406 1.41699 -2.70312 2.30859 -3.77344c4.85645 -5.82812 12.5547 -13.4375 20.0684 -20.7832zM526.406 343.529c-6.18066 2.38379 -12.9805 3.59961 -20.1055 3.59961\n    c-6.77148 0 -13.2471 -1.10449 -19.1797 -3.25977c-1.82715 1.30762 -3.70215 2.44336 -5.71094 3.63672c-8.53906 5.07129 -19.3936 9.97461 -31.416 14.9844c-24.0459 10.0176 -52.3682 19.9736 -67.3008 25.3496c-0.44043 0.158203 -0.954102 0.367188 -1.42383 0.544922\n    c0.853516 1.18359 1.87793 2.42578 3.12891 3.75c5.24902 5.55371 14.1396 11.6768 25.9199 16.9492c23.5469 10.5361 58.251 17.7207 96.6816 17.7305c38.4307 -0.00976562 73.1348 -7.19434 96.6816 -17.7305c11.7803 -5.27246 20.6709 -11.3955 25.9199 -16.9492\n    c1.25098 -1.32422 2.27539 -2.56641 3.12891 -3.75c-0.469727 -0.177734 -0.983398 -0.386719 -1.42383 -0.544922c-14.9326 -5.37598 -43.2549 -15.332 -67.3008 -25.3496c-12.0225 -5.00977 -22.877 -9.91309 -31.416 -14.9844\n    c-2.18262 -1.29688 -4.20801 -2.52051 -6.18359 -3.97656zM350.074 404.42c-15.6006 9.89844 -32.4736 23.5576 -44.3633 40.502c-4.9248 7.01855 -9.21387 14.5186 -12.459 22.6406c0.287109 8.88672 4.41113 17.9248 13.7441 27.5879\n    c9.68359 10.0254 24.8506 20.0293 44.2734 28.5352c38.8301 17.0039 94.3398 28.084 155.73 28.0938c61.3906 -0.00976562 116.9 -11.0898 155.73 -28.0938c19.4229 -8.50586 34.5898 -18.5098 44.2734 -28.5352c9.33301 -9.66309 13.457 -18.7012 13.7441 -27.5879\n    c-3.24512 -8.12207 -7.53418 -15.6221 -12.459 -22.6406c-11.8896 -16.9443 -28.7627 -30.6035 -44.3633 -40.502c-2.49512 4.22949 -5.50391 8.17578 -8.88867 11.7578c-9.62207 10.1787 -22.251 18.2256 -37.0605 24.8535\n    c-29.6025 13.2461 -68.3135 20.7734 -110.977 20.7832c-42.6631 -0.00878906 -81.374 -7.53711 -110.977 -20.7832c-14.8096 -6.62793 -27.4385 -14.6748 -37.0605 -24.8535c-3.38477 -3.58203 -6.39355 -7.52832 -8.88867 -11.7578zM288.635 519.176\n    c3.22852 17.3896 11.0918 37.0635 25.377 59.6602c43.2188 68.3643 72.5029 107.337 90.5898 128.852c9.04395 10.7568 15.2842 17.1475 19.0098 20.6602c2.57812 2.43066 3.38086 3.09766 3.6582 3.30273c0.938477 0.351562 2.00391 0.701172 3.24414 1.04688\n    c1.71582 0.871094 3.54688 1.7334 5.51367 2.5625c16.9707 7.15527 42.5957 12.209 70.9727 12.2188c28.377 -0.00976562 54.002 -5.06348 70.9727 -12.2188c1.9668 -0.829102 3.79785 -1.69141 5.51367 -2.5625c1.24023 -0.345703 2.30566 -0.695312 3.24414 -1.04688\n    c0.277344 -0.205078 1.08008 -0.87207 3.6582 -3.30273c3.72559 -3.5127 9.96582 -9.90332 19.0098 -20.6602c18.0869 -21.5146 47.3711 -60.4873 90.5898 -128.852c14.2852 -22.5967 22.1484 -42.2705 25.377 -59.6602c-13.124 12.542 -30.3066 23.1035 -50.5996 31.9902\n    c-43.9648 19.2529 -102.825 30.6045 -167.766 30.6133c-64.9404 -0.00878906 -123.801 -11.3604 -167.766 -30.6133c-20.293 -8.88672 -37.4756 -19.4482 -50.5996 -31.9902zM366.945 716.852c-7.43848 4.33594 -13.4365 8.85547 -17.7441 13.2148\n    c-7.11328 7.19824 -9.47266 13.0957 -9.47266 18.4961s2.35938 11.2988 9.47266 18.498c7.11328 7.19824 18.8076 14.8359 34.0527 21.3613c30.4746 13.0439 74.7559 21.751 123.746 21.7617c48.9902 -0.00976562 93.2715 -8.71777 123.746 -21.7617\n    c15.2451 -6.52539 26.9395 -14.1631 34.0527 -21.3613c7.11328 -7.19922 9.47266 -13.0977 9.47266 -18.498s-2.35938 -11.2979 -9.47266 -18.4961c-4.30762 -4.35938 -10.3057 -8.87891 -17.7441 -13.2148c-3.92676 4.96387 -7.56055 9.42676 -10.8652 13.3574\n    c-2.74316 3.2627 -5.25391 6.15723 -7.58984 8.7832c-2.21094 3.69824 -4.91016 7.06934 -7.88086 10.0312c-3.34375 3.33301 -7.06738 6.30859 -11.123 9.00391c-2.35254 1.93457 -3.9707 3.0918 -3.9707 3.0918c-1.62109 1.05273 -3.40625 1.83008 -5.28125 2.30078\n    c-2.81152 1.44629 -5.73438 2.80762 -8.77344 4.08984c-22.8408 9.62988 -52.2061 14.958 -84.5703 14.9688c-32.3652 -0.00878906 -61.7295 -5.33887 -84.5703 -14.9688c-3.03906 -1.28223 -5.96191 -2.64355 -8.77344 -4.08984\n    c-1.875 -0.470703 -3.66016 -1.24805 -5.28125 -2.30078c0 0 -1.61816 -1.15723 -3.9707 -3.0918c-4.05566 -2.69531 -7.7793 -5.6709 -11.123 -9.00391c-2.9707 -2.96191 -5.66992 -6.33301 -7.88086 -10.0312c-2.33594 -2.62598 -4.84668 -5.52051 -7.58984 -8.7832\n    c-3.30469 -3.93066 -6.93848 -8.39355 -10.8652 -13.3574zM304.93 740.557v-0.000976562s0.152344 0.00976562 0.152344 0.0107422c-0.101562 1.13086 -0.152344 2.2627 -0.152344 3.39453v-3.4043zM709.07 740.557v3.4043\n    c0 -1.13184 -0.0507812 -2.26367 -0.152344 -3.39453zM304.93 824.557v-0.000976562s0.152344 0.00976562 0.152344 0.0107422c-0.101562 1.13086 -0.152344 2.2627 -0.152344 3.39453v-3.4043zM709.07 824.557v3.4043c0 -1.13184 -0.0507812 -2.26367 -0.152344 -3.39453z\n    M345.32 816.498v54c38.1396 22.0625 98.0137 35.0879 161.68 35.2012c63.666 -0.113281 123.54 -13.1387 161.68 -35.2012v-54c-38.1396 22.0625 -98.0137 35.0879 -161.68 35.2012c-63.666 -0.113281 -123.54 -13.1387 -161.68 -35.2012z\" />\n `,\n    [`${boardHelper.PIECE_COLOR_WHITE}${boardHelper.PIECE_TYPE_SDECH}`]: `\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.WHITE}\" filter=\"url(#${filterId})\" \n    d=\"M501.97 35.9561h-0.0117188c0.0195312 0 0.0410156 0.0166016 0.0625 0v0.0185547c2.86426 0.797852 5.79102 1.8877 8.6875 3.39844c16.4189 8.56445 30.4453 27.9834 36.8926 59.4512c3.78125 18.4531 28.1963 63.8389 44.2666 109.03\n    c8.03613 22.5957 14.2207 46.0439 13.1699 69.9424c-0.443359 10.0645 -2.6377 20.3184 -6.53711 30.1025c40.3701 4.08594 100.55 19.5195 143.93 72.1787c36.2295 43.9805 40.8281 96.8467 33.4873 139.771c-7.34277 42.9229 -23.6377 75.9043 -40.7158 94.4287\n    c-11.0488 11.9844 -37.0273 40.3457 -60.9385 70.001c-4.57617 5.67578 -9.07031 11.3975 -13.3604 17.04c12.6797 5.91797 23.7607 12.748 32.9785 20.9131c9.63574 8.53613 17.5811 19.3271 21.0732 31.709c0.176758 -0.698242 0.339844 -1.39648 0.46875 -2.09961\n    c-0.046875 1.4043 -0.0673828 2.44141 -0.0927734 3.5332c0.00878906 0.03125 0.0117188 0.0625 0.0214844 0.09375l0.015625 -0.0722656v0.139648c0.960938 3.87305 1.50391 7.88867 1.50391 12.0439c0 3.30176 -0.337891 6.51855 -0.955078 9.64453\n    c0.00878906 0.789062 0.0273438 1.33691 0.0302734 2.25781c0 2.00879 -0.202148 4.00098 -0.579102 5.97461v104.399l-0.552734 0.277344c-10.9004 40.8945 -101.521 72.9688 -212.79 74.123c-0.0195312 0 -0.0390625 -0.000976562 -0.0585938 0\n    c-111.27 -1.1543 -201.889 -33.2285 -212.79 -74.123l-0.552734 -0.277344v-104.399c-0.376953 -1.97363 -0.579102 -3.96582 -0.579102 -5.97461c0.00292969 -0.920898 0.0214844 -1.46875 0.0302734 -2.25781c-0.617188 -3.12598 -0.955078 -6.34277 -0.955078 -9.64453\n    c0 -4.1543 0.542969 -8.1709 1.50391 -12.0439v-0.139648l0.0166016 0.0722656c0.00683594 -0.03125 0.0117188 -0.0625 0.0205078 -0.0927734c-0.0253906 -1.09277 -0.0458984 -2.12891 -0.0927734 -3.53418c0.129883 0.703125 0.291992 1.40137 0.469727 2.09961\n    c3.49023 -12.3828 11.4365 -23.1729 21.0723 -31.709c9.21777 -8.16504 20.2998 -14.9951 32.9785 -20.9131c-4.29004 -5.64355 -8.78418 -11.3643 -13.3604 -17.04c-23.9102 -29.6553 -49.8896 -58.0156 -60.9385 -70.001\n    c-17.0791 -18.5244 -33.374 -51.5059 -40.7158 -94.4287c-7.34082 -42.9238 -2.74219 -95.79 33.4873 -139.771c43.3799 -52.6592 103.564 -68.0928 143.93 -72.1787c-3.89941 -9.7832 -6.09375 -20.0381 -6.53613 -30.1025\n    c-1.05176 -23.8984 5.13281 -47.3467 13.1689 -69.9424c16.0703 -45.1895 40.4854 -90.5752 44.2666 -109.03c6.44727 -31.4678 20.4736 -50.8857 36.8926 -59.4512c2.89648 -1.51074 5.82324 -2.60059 8.6875 -3.39844v-0.0185547zM502 112.924h0.000976562\n    c-8.38379 34.6719 -31.624 73.2188 -45.0205 110.891c-6.99219 19.6621 -11.0645 38.1816 -10.4609 51.8984c0.509766 11.5957 2.94141 19.1816 10.1328 26.1689c1.12695 0.52832 2.33398 1.05859 3.72949 1.58105c9.94043 3.72461 24.8584 6.57617 41.6191 7.15039\n    c16.7598 -0.574219 31.6797 -3.42578 41.6201 -7.15039c1.39551 -0.522461 2.60254 -1.05273 3.72949 -1.58105c7.19141 -6.9873 9.62305 -14.5732 10.1328 -26.1689c0.602539 -13.7168 -3.46875 -32.2373 -10.4609 -51.8984\n    c-13.3965 -37.6768 -36.6387 -76.2236 -45.0225 -110.891zM468.731 356.104v0s-26.6797 -6.19629 -65.1191 0.225586c-2.77832 0.381836 -5.62891 0.814453 -8.57324 1.33984c4.34473 3.31055 11.6611 7.4082 21.2031 10.9834\n    c20.7012 7.75684 51.4727 13.3799 85.7578 13.9883c34.2861 -0.609375 65.0566 -6.23145 85.7598 -13.9883c9.54102 -3.57422 16.8574 -7.67188 21.2031 -10.9834c-2.94531 -0.525391 -5.7959 -0.958008 -8.57324 -1.33984\n    c-38.4404 -6.42188 -65.1191 -0.225586 -65.1191 -0.225586c-31.582 5.73926 -37.127 5.88867 -66.5391 0zM347.052 372.763h-0.00390625c-17.4131 8.33203 -34.5186 20.332 -48.7354 37.5898c-13.7734 16.7197 -21.125 34.959 -24.1055 53.4707\n    c1.95996 4.75391 5.79785 9.96484 12.3252 15.7471c10.4434 9.25098 27.252 18.7939 48.7861 26.8613c41.7598 15.6465 100.989 26.0186 166.65 26.6348c0.0205078 0 0.0410156 -0.000976562 0.0625 0c65.6602 -0.616211 124.891 -10.9883 166.649 -26.6348\n    c21.5342 -8.06738 38.3438 -17.6113 48.7861 -26.8613c6.52734 -5.78223 10.3652 -10.9932 12.3252 -15.7471c-2.97949 -18.5117 -10.332 -36.751 -24.1045 -53.4707c-14.2178 -17.2568 -31.3232 -29.2578 -48.7354 -37.5898\n    c-3.54297 7.4873 -8.8457 13.9551 -14.6689 19.1143c-10.3975 9.20996 -23.127 15.8535 -37.8203 21.3594c-27.916 10.4609 -63.3174 16.4443 -102.43 17.0166v0.00195312h-0.0322266h-0.0302734v-0.00195312c-39.1094 -0.573242 -74.5117 -6.55566 -102.431 -17.0166\n    c-14.6924 -5.50488 -27.4219 -12.1484 -37.8193 -21.3594c-5.82422 -5.15918 -11.126 -11.627 -14.6689 -19.1143zM275.655 515.323h-0.00195312c6.34766 32.3193 23.1602 61.2803 28.1436 66.6855c11.1914 12.1396 37.8301 41.1729 62.999 72.3887\n    c7.35742 9.125 14.5801 18.4287 21.3125 27.6426c1.10938 2.33301 3.33301 7.11133 5.91211 12.9385c4.51465 10.1699 9.92773 23.1348 12.3809 32.1348c0.317383 1.16602 1.39648 2.1875 3.08984 3.08691c3.62305 2.96387 10.2422 6.80566 19.123 10.1328\n    c17.75 6.65039 44.0488 11.4902 73.3877 12.0908c29.3389 -0.600586 55.6396 -5.44043 73.3896 -12.0908c8.88086 -3.32715 15.501 -7.16797 19.123 -10.1328c1.69238 -0.899414 2.77148 -1.9209 3.08984 -3.08691c2.45215 -8.99902 7.86523 -21.9648 12.3809 -32.1348\n    c2.5791 -5.82617 4.80273 -10.6045 5.91211 -12.9385c6.73242 -9.21387 13.9551 -18.5176 21.3125 -27.6426c25.1689 -31.2158 51.8066 -60.249 62.999 -72.3887c4.98438 -5.40527 21.7959 -34.3662 28.1426 -66.6855c-13.2402 9.16797 -29.1924 17.0049 -47.4062 23.8301\n    c-47.1299 17.6602 -109.706 28.2607 -178.91 28.8584h-0.0625c-69.2002 -0.597656 -131.776 -11.1982 -178.91 -28.8584c-18.2139 -6.82422 -34.166 -14.6621 -47.4072 -23.8301zM366.625 738.503h0.000976562c-12.2686 5.2998 -21.7832 11.0918 -27.6592 16.2959\n    c-7.13965 6.3252 -8.33105 10.3145 -8.33105 12.7793s1.19141 6.4541 8.33105 12.7793c7.14062 6.32422 19.585 13.5273 35.9141 19.6455c31.3779 11.7578 76.751 19.8135 127.12 20.4268c50.374 -0.613281 95.748 -8.66895 127.13 -20.4268\n    c16.3291 -6.11816 28.7744 -13.3213 35.9141 -19.6455c7.13965 -6.3252 8.33203 -10.3145 8.33203 -12.7793s-1.19238 -6.45508 -8.33203 -12.7793c-5.875 -5.2041 -15.3896 -10.9961 -27.6592 -16.2959c-2.75586 8.78711 -8.41602 16.2656 -14.8037 21.9238\n    c-8.99902 7.97168 -20.0156 13.7217 -32.7314 18.4863c-23.9648 8.97949 -54.2959 14.1504 -87.8135 14.7178v0.00195312h-0.0322266h-0.0302734v-0.00195312c-33.5195 -0.567383 -63.8496 -5.73926 -87.8135 -14.7178\n    c-12.7158 -4.76367 -23.7334 -10.5156 -32.7314 -18.4863c-6.38867 -5.6582 -12.0488 -13.1367 -14.8047 -21.9238zM323.339 824.279l0.0126953 42.8457c38.29 22.1465 104.046 36.8623 178.63 37.6367c0.0205078 0.000976562 0.0419922 0 0.0625 0\n    c74.5801 -0.774414 140.334 -15.4902 178.63 -37.6367v-42.8457c-7.18652 4.15332 -15.3525 8.04785 -24.3594 11.6416c-3.84082 1.67871 -7.80957 3.28516 -11.916 4.82422c-38.04 14.25 -87.5889 22.6035 -142.36 23.1924v0.00195312h-0.0322266h-0.0302734v-0.00195312\n    c-54.7754 -0.588867 -104.324 -8.94141 -142.36 -23.1924c-4.10645 -1.53906 -8.0752 -3.14551 -11.916 -4.82422c-9.00684 -3.59375 -17.1729 -7.48828 -24.3604 -11.6416z\" />\n `,\n    [`${boardHelper.PIECE_COLOR_WHITE}${boardHelper.PIECE_TYPE_NEANG}`]: `\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.WHITE}\" filter=\"url(#${filterId})\" \n    d=\"M506.765 113.54h0.0078125c0.116211 0 0.162109 -0.0263672 0.462891 0c7.77051 1.16992 21.6113 9.08984 35.9551 16.7266c12.46 6.63477 10.0205 23.6094 7.87109 32.1074l-15.3516 49.4727c11.1777 36.5859 21.3398 70.3037 17.9932 101.78\n    c20.9648 31.0527 39.2188 44.6465 59.252 57.8145c20.9727 13.7842 44.7012 27.2969 69.2891 56.9521c33.8994 40.8906 34.7324 89.7275 15.1211 146.641c-12.8477 37.2891 -37.626 84.1328 -65.7822 136.79c15.8955 6.1875 29.3955 13.6123 39.8809 23.123\n    c8.41406 7.63281 15.1445 17.3027 17.6475 28.3281l0.167969 -8.01562v8.74609c0.578125 2.77051 0.898438 5.62305 0.898438 8.55273c0 2.78418 -0.296875 5.49609 -0.822266 8.13867v106.88h-0.0761719v3.45508s-0.0654297 0.00390625 -0.0664062 0.00390625\n    c0.0390625 0.589844 0.0585938 1.17969 0.0585938 1.76953c0 38.6016 -81.4697 69.8994 -182.04 69.9727v0.00390625h-0.111328c-0.0400391 0 -0.0800781 -0.00195312 -0.121094 -0.00195312c-0.0400391 0 -0.0791016 0.00195312 -0.119141 0.00195312h-0.111328\n    v-0.00390625c-100.571 -0.0742188 -182.041 -31.3711 -182.04 -69.9727c0 -0.589844 0.0195312 -1.17969 0.0585938 -1.76953c-0.000976562 0 -0.0664062 -0.00390625 -0.0664062 -0.00390625v-3.45508h-0.0761719v-106.88\n    c-0.525391 -2.64258 -0.822266 -5.35449 -0.822266 -8.13867c0 -2.92969 0.320312 -5.78223 0.898438 -8.55273v-8.74609l0.167969 8.01562c2.50195 -11.0254 9.2334 -20.6953 17.6484 -28.3281c10.4844 -9.51074 23.9854 -16.9346 39.8809 -23.123\n    c-28.1572 -52.6582 -52.9336 -99.502 -65.7832 -136.79c-19.6104 -56.9141 -18.7773 -105.754 15.1211 -146.641c24.5879 -29.6553 48.3174 -43.168 69.2891 -56.9521c20.0342 -13.168 38.2881 -26.7617 59.252 -57.8145c-3.3457 -31.4775 6.81641 -65.1953 17.9941 -101.78\n    l-15.3525 -49.4727c-2.14941 -8.49805 -4.58887 -25.4727 7.87109 -32.1074c14.3447 -7.6377 28.1855 -15.5566 35.9551 -16.7266zM506.995 221.69v-0.000976562c-9.77734 15.542 -22.541 45.167 -17 88.9004c7.04004 1.70898 20.2178 3.71582 34.041 -0.337891\n    c5.43359 -43.5459 -7.28809 -73.0596 -17.041 -88.5615zM531.327 334.17v0.000976562c-20.4336 6.0957 -39.1836 2.89844 -48.8848 0.318359c-22.5283 32.0381 -44.6406 48.6914 -64.9219 62.0225c-2.15527 1.41699 -4.26367 2.77637 -6.36719 4.13672l0.164062 0.0234375\n    c-0.00195312 0.0361328 -0.0175781 0.109375 -0.0175781 0.134766c0 0.34375 0.0615234 1.7002 3.42188 4.74805c3.35938 3.04785 9.63672 6.82812 18.0547 10.0576c16.8359 6.45801 41.9492 10.9385 69.7188 10.9385c1.43262 0 2.85254 -0.0205078 4.26953 -0.0449219\n    v-0.00390625c0.0771484 0.00195312 0.155273 0.000976562 0.232422 0.00195312c0.0771484 -0.000976562 0.154297 -0.000976562 0.230469 -0.00195312v0.00390625c1.41699 0.0244141 2.83789 0.0449219 4.26953 0.0449219c27.7705 0 52.8848 -4.47949 69.7197 -10.9385\n    c8.41797 -3.23047 14.6953 -7.00977 18.0547 -10.0576c3.35938 -3.04688 3.42188 -4.4043 3.42188 -4.74805c0 -0.0253906 -0.015625 -0.0976562 -0.0175781 -0.134766l0.164062 -0.0234375c-2.10449 -1.36035 -4.21191 -2.71973 -6.36719 -4.13672\n    c-20.3486 -13.375 -42.54 -30.0957 -65.1455 -62.3418zM386.147 417.617h-0.00585938c-10.2871 7.73438 -20.4941 16.8945 -31.2969 29.9238c-14.708 17.7393 -21.6484 35.4854 -22.0576 56.3535c1.71387 2.6543 4.0752 5.40918 7.25195 8.29102\n    c7.85059 7.12012 20.248 14.292 36.0537 20.3555c31.6123 12.127 76.6406 19.9844 126.399 19.9844c1.43262 0 2.84766 -0.0263672 4.26953 -0.0429688v-0.00488281c0.078125 0.00195312 0.155273 0.00195312 0.232422 0.00292969\n    c0.0771484 -0.00195312 0.154297 -0.00195312 0.230469 -0.00292969v0.00488281c1.42188 0.0166016 2.83789 0.0429688 4.26953 0.0429688c49.7627 0 94.791 -7.85742 126.4 -19.9844c15.8047 -6.06348 28.2021 -13.2344 36.0527 -20.3555\n    c3.17773 -2.88184 5.53809 -5.63672 7.25195 -8.29102c-0.40918 -20.8691 -7.34961 -38.6143 -22.0566 -56.3535c-10.8037 -13.0293 -21.0117 -22.1885 -31.2969 -29.9238c-2.2832 3.82715 -5.20801 7.24414 -8.41992 10.1582\n    c-7.38867 6.70117 -16.6631 11.7021 -27.4629 15.8457c-21.6006 8.28711 -49.5859 12.9297 -80.4658 12.9297c-1.50879 0 -3.00488 -0.0195312 -4.5 -0.0429688c-1.49512 0.0234375 -2.99219 0.0429688 -4.50195 0.0429688c-30.8799 0 -58.8643 -4.64258 -80.4648 -12.9297\n    c-10.7998 -4.14453 -20.0752 -9.14453 -27.4629 -15.8457c-3.21191 -2.91406 -6.1377 -6.33105 -8.41992 -10.1582zM336.8 537.377h0.00390625c2.01758 8.67383 4.76465 17.9199 8.19727 27.8809c15.9902 46.4102 48.0801 105.973 88.6562 183.25\n    c0.192383 0.214844 0.37793 0.432617 0.583984 0.638672c0.196289 0.241211 0.461914 0.539062 1.05469 1.07617c2.22949 2.02344 6.87207 4.87988 13.2695 7.33398c12.7959 4.90918 32.3281 8.42969 53.9346 8.42969c1.43457 0 2.85449 -0.0253906 4.26953 -0.0566406\n    v-0.00585938c0.0761719 0.00195312 0.155273 0.00195312 0.232422 0.00390625c0.0761719 -0.00195312 0.15332 -0.00195312 0.230469 -0.00390625v0.00585938c1.41406 0.03125 2.83398 0.0566406 4.26953 0.0566406c21.6055 0 41.1377 -3.52051 53.9336 -8.42969\n    c6.39844 -2.4541 11.04 -5.31055 13.2695 -7.33398c0.592773 -0.537109 0.858398 -0.834961 1.05469 -1.07617c0.206055 -0.206055 0.391602 -0.423828 0.583984 -0.638672c40.5762 -77.2803 72.665 -136.843 88.6562 -183.25\n    c3.43262 -9.96094 6.17969 -19.207 8.19727 -27.8809c-8.93457 5.93262 -19.4912 11.127 -31.418 15.7031c-35.1055 13.4678 -82.2402 21.4434 -134.28 21.4434c-1.50879 0 -3 -0.0283203 -4.5 -0.0429688c-1.5 0.0146484 -2.99219 0.0429688 -4.50195 0.0429688\n    c-52.043 0 -99.1768 -7.97559 -134.279 -21.4434c-11.9277 -4.57617 -22.4834 -9.77051 -31.418 -15.7031zM399.021 742.937h0.00390625c-1.04102 0.375977 -2.07617 0.754883 -3.08203 1.14062c-13.5537 5.20117 -23.8984 11.3154 -29.9082 16.7666\n    c-6.00879 5.4502 -7.24023 9.12207 -7.24023 11.7129s1.23145 6.2627 7.24023 11.7129c6.00977 5.45117 16.3545 11.5654 29.9082 16.7656c27.1074 10.4004 66.7188 17.3984 110.51 17.3984c0.105469 0 0.209961 -0.00292969 0.314453 -0.00390625v-0.00390625\n    c0.078125 0 0.155273 0.000976562 0.232422 0.00195312c0.0771484 -0.000976562 0.15332 -0.00195312 0.230469 -0.00195312v0.00390625c0.104492 0.00195312 0.208984 0.00390625 0.314453 0.00390625c43.7891 0 83.4023 -6.99805 110.511 -17.3984\n    c13.5537 -5.2002 23.8984 -11.3154 29.9072 -16.7656c6.00977 -5.45117 7.24023 -9.12207 7.24023 -11.7129s-1.23047 -6.2627 -7.24023 -11.7129c-6.00879 -5.45117 -16.3535 -11.5664 -29.9072 -16.7666c-1.00684 -0.385742 -2.04102 -0.764648 -3.08203 -1.14062\n    c-1.60449 3.01465 -3.18164 5.95703 -4.79492 9.00293c-0.978516 8.3584 -5.74609 15.4453 -11.3203 20.502c-6.25879 5.67676 -13.8994 9.75391 -22.6797 13.123c-17.5615 6.7373 -39.9639 10.4219 -64.6807 10.4219c-1.50879 0 -3.00781 -0.0175781 -4.5 -0.0449219\n    c-1.49219 0.0273438 -2.99219 0.0449219 -4.50195 0.0449219c-24.7158 0 -47.1201 -3.68555 -64.6797 -10.4219c-8.78027 -3.36914 -16.4219 -7.44629 -22.6797 -13.123c-5.57422 -5.05664 -10.3418 -12.1436 -11.3203 -20.502\n    c-1.61426 -3.0459 -3.19043 -5.98828 -4.79492 -9.00293zM354.644 829.212v49.9922c33.6504 19.6699 90.8096 31.5303 152.12 31.5762c0.0771484 0 0.154297 0.00195312 0.232422 0.00195312c0.0771484 0 0.15332 -0.00195312 0.230469 -0.00195312\n    c61.3086 -0.0458984 118.469 -11.9062 152.12 -31.5762v-49.9922c-32.54 18.9805 -88.5059 31.5215 -152.12 31.5684v0.00195312h-0.111328h-0.121094h-0.119141h-0.111328v-0.00195312c-63.6133 -0.0458984 -119.575 -12.5879 -152.12 -31.5684z\" />\n `,\n    [`${boardHelper.PIECE_COLOR_WHITE}${boardHelper.PIECE_TYPE_TREY}`]: `\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.WHITE}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n `,\n    [`${boardHelper.PIECE_COLOR_WHITE}${boardHelper.PIECE_TYPE_BORK}`]: `\n    ${SVG_FILTER}\n     <path fill=\"${WOOD_COLORS.WHITE}\" filter=\"url(#${filterId})\" \n d=\"M243 500h514v36h-514v-36zM490 428h34v178h-34v-178zM507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89z\n M507 443c-127 0 -231 31 -240 70v1v10c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM267 600v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n `,\n    [`${boardHelper.PIECE_COLOR_BLACK}${boardHelper.PIECE_TYPE_TOUK}`]: `\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.BLACK}\" filter=\"url(#${filterId})\" \n    d=\"M508.259 454.128h0.302734c0.723633 0.328125 57.5889 26.0469 95.0117 39.4414c15.5312 5.55664 60.1143 14.5146 100.886 37.5742c40.7734 23.0596 80.3154 64.8369 83.1123 130.47c2.31543 54.373 -10.3096 109.333 -25.2803 154.087\nc6.84863 10.3203 11.2207 22.1895 11.2207 35.21c0 21.4883 -11.8955 39.8535 -27.207 53.2637c-15.3145 13.4111 -34.8975 23.6748 -57.9736 32.2236c-46.1543 17.0977 -106.736 26.8711 -173.619 26.8711c-2.0752 0 -4.14355 -0.0117188 -6.20801 -0.03125\nc-0.0615234 -0.000976562 -0.124023 0.00195312 -0.1875 0c-2.06543 0.0195312 -4.13281 0.03125 -6.20996 0.03125c-66.8838 0 -127.464 -9.77344 -173.617 -26.8711c-23.0781 -8.54883 -42.6602 -18.8125 -57.9736 -32.2236\nc-15.3125 -13.4102 -27.2061 -31.7754 -27.2061 -53.2637c0 -13.0205 4.36914 -24.8896 11.2197 -35.21c-14.9707 -44.7539 -27.5957 -99.7139 -25.2793 -154.087c2.79492 -65.6328 42.3359 -107.41 83.1084 -130.47c40.7734 -23.0596 85.3584 -32.0176 100.886 -37.5742\nc37.4268 -13.3945 94.291 -39.1133 95.0146 -39.4414zM508.409 504.763c-20.376 8.9502 -53.2832 23.0273 -79.7217 32.4873c-23.9287 8.56348 -61.2559 15.9336 -93.749 34.3086c-14.8428 8.39648 -28.126 18.1328 -38.3906 30.8848\nc0.896484 3.19238 3.48145 7.44922 9.91992 13.0869c8.62891 7.55859 23.416 15.9863 42.6934 23.126c38.5488 14.2812 94.6504 23.8262 156.645 23.8262c0.84082 0 1.6748 -0.0078125 2.51074 -0.0117188h0.1875c0.835938 0.00390625 1.66992 0.0117188 2.50879 0.0117188\nc61.9961 0 118.094 -9.54492 156.646 -23.8262c19.2773 -7.13965 34.0645 -15.5674 42.6934 -23.126c6.43945 -5.6377 9.02246 -9.89453 9.91895 -13.0869c-10.2627 -12.752 -23.5479 -22.4883 -38.3906 -30.8848c-32.4932 -18.375 -69.8193 -25.7451 -93.7471 -34.3086\nc-26.4395 -9.45996 -59.3467 -23.5371 -79.7246 -32.4873zM276.397 651.025c-0.543945 4.00684 -0.922852 8.18848 -1.11035 12.5723c-1.66699 39.165 6.68555 81.0391 17.7539 118.115l0.115234 0.542969c9.16602 6.33594 20.1504 12.4805 32.7764 18.0752\nc44.8291 19.8672 109.379 32.9443 180.788 32.9443c0.53125 0 1.0625 -0.00488281 1.5957 -0.00683594v-0.00195312h0.0927734h0.0947266v0.00195312c0.53125 0.00195312 1.06445 0.00683594 1.59668 0.00683594c71.4082 0 135.957 -13.0771 180.788 -32.9443\nc12.6221 -5.59473 23.6094 -11.7393 32.7764 -18.0752l0.113281 -0.542969c11.0703 -37.0762 19.4219 -78.9502 17.7549 -118.115c-0.1875 -4.38379 -0.567383 -8.56543 -1.1123 -12.5723c-14.8867 12.9287 -34.0654 23 -56.7441 31.3984\nc-45.7266 16.9404 -106.057 26.7051 -172.664 26.7051c-0.838867 0 -1.67285 -0.00976562 -2.50879 -0.0146484h-0.1875c-0.835938 0.00585938 -1.66992 0.0146484 -2.51074 0.0146484c-66.6064 0 -126.937 -9.76465 -172.663 -26.7051\nc-22.6777 -8.39844 -41.8574 -18.4697 -56.7451 -31.3984zM304.557 836.92l0.0224609 0.100586c-8.25391 7.22949 -9.38965 11.5586 -9.38965 13.8896c0 2.33301 1.13574 6.66406 9.38965 13.8916c8.25293 7.22656 22.7715 15.5518 41.835 22.6123\nc38.123 14.123 93.9688 23.6562 155.692 23.6562c2.07812 0 4.14453 -0.0126953 6.20996 -0.0341797v-0.00292969h0.0927734h0.0947266v0.00292969c2.06445 0.0214844 4.13184 0.0341797 6.20801 0.0341797c61.7227 0 117.569 -9.5332 155.694 -23.6562\nc19.0615 -7.06055 33.5811 -15.3857 41.835 -22.6123c8.25293 -7.22754 9.38965 -11.5586 9.38965 -13.8916c0 -2.33105 -1.13672 -6.66016 -9.38965 -13.8896l0.0195312 -0.100586c-1.47266 0.680664 -2.96289 1.3584 -4.4668 2.02441\nc-52.0322 23.0605 -121.295 36.5273 -197.693 36.5273c-0.56543 0 -1.12793 -0.0078125 -1.69141 -0.00878906c-0.563477 0.00195312 -1.12402 0.00878906 -1.68848 0.00878906c-76.3984 0 -145.662 -13.4668 -197.694 -36.5273\nc-1.50488 -0.666016 -2.99316 -1.34375 -4.46973 -2.02441zM508.259 454.128h0.302734c0.723633 0.328125 57.5889 26.0469 95.0117 39.4414c15.5312 5.55664 60.1143 14.5146 100.886 37.5742c40.7734 23.0596 80.3154 64.8369 83.1123 130.47\nc2.31543 54.373 -10.3096 109.333 -25.2803 154.087c6.84863 10.3203 11.2207 22.1895 11.2207 35.21c0 21.4883 -11.8955 39.8535 -27.207 53.2637c-15.3145 13.4111 -34.8975 23.6748 -57.9736 32.2236c-46.1543 17.0977 -106.736 26.8711 -173.619 26.8711\nc-2.0752 0 -4.14355 -0.0117188 -6.20801 -0.03125c-0.0615234 -0.000976562 -0.124023 0.00195312 -0.1875 0c-2.06543 0.0195312 -4.13281 0.03125 -6.20996 0.03125c-66.8838 0 -127.464 -9.77344 -173.617 -26.8711\nc-23.0781 -8.54883 -42.6602 -18.8125 -57.9736 -32.2236c-15.3125 -13.4102 -27.2061 -31.7754 -27.2061 -53.2637c0 -13.0205 4.36914 -24.8896 11.2197 -35.21c-14.9707 -44.7539 -27.5957 -99.7139 -25.2793 -154.087c2.79492 -65.6328 42.3359 -107.41 83.1084 -130.47\nc40.7734 -23.0596 85.3584 -32.0176 100.886 -37.5742c37.4268 -13.3945 94.291 -39.1133 95.0146 -39.4414zM508.409 504.763c-20.376 8.9502 -53.2832 23.0273 -79.7217 32.4873c-23.9287 8.56348 -61.2559 15.9336 -93.749 34.3086\nc-14.8428 8.39648 -28.126 18.1328 -38.3906 30.8848c0.896484 3.19238 3.48145 7.44922 9.91992 13.0869c8.62891 7.55859 23.416 15.9863 42.6934 23.126c38.5488 14.2812 94.6504 23.8262 156.645 23.8262c0.84082 0 1.6748 -0.0078125 2.51074 -0.0117188h0.1875\nc0.835938 0.00390625 1.66992 0.0117188 2.50879 0.0117188c61.9961 0 118.094 -9.54492 156.646 -23.8262c19.2773 -7.13965 34.0645 -15.5674 42.6934 -23.126c6.43945 -5.6377 9.02246 -9.89453 9.91895 -13.0869c-10.2627 -12.752 -23.5479 -22.4883 -38.3906 -30.8848\nc-32.4932 -18.375 -69.8193 -25.7451 -93.7471 -34.3086c-26.4395 -9.45996 -59.3467 -23.5371 -79.7246 -32.4873zM276.397 651.025c-0.543945 4.00684 -0.922852 8.18848 -1.11035 12.5723c-1.66699 39.165 6.68555 81.0391 17.7539 118.115l0.115234 0.542969\nc9.16602 6.33594 20.1504 12.4805 32.7764 18.0752c44.8291 19.8672 109.379 32.9443 180.788 32.9443c0.53125 0 1.0625 -0.00488281 1.5957 -0.00683594v-0.00195312h0.0927734h0.0947266v0.00195312c0.53125 0.00195312 1.06445 0.00683594 1.59668 0.00683594\nc71.4082 0 135.957 -13.0771 180.788 -32.9443c12.6221 -5.59473 23.6094 -11.7393 32.7764 -18.0752l0.113281 -0.542969c11.0703 -37.0762 19.4219 -78.9502 17.7549 -118.115c-0.1875 -4.38379 -0.567383 -8.56543 -1.1123 -12.5723\nc-14.8867 12.9287 -34.0654 23 -56.7441 31.3984c-45.7266 16.9404 -106.057 26.7051 -172.664 26.7051c-0.838867 0 -1.67285 -0.00976562 -2.50879 -0.0146484h-0.1875c-0.835938 0.00585938 -1.66992 0.0146484 -2.51074 0.0146484\nc-66.6064 0 -126.937 -9.76465 -172.663 -26.7051c-22.6777 -8.39844 -41.8574 -18.4697 -56.7451 -31.3984zM304.557 836.92l0.0224609 0.100586c-8.25391 7.22949 -9.38965 11.5586 -9.38965 13.8896c0 2.33301 1.13574 6.66406 9.38965 13.8916\nc8.25293 7.22656 22.7715 15.5518 41.835 22.6123c38.123 14.123 93.9688 23.6562 155.692 23.6562c2.07812 0 4.14453 -0.0126953 6.20996 -0.0341797v-0.00292969h0.0927734h0.0947266v0.00292969c2.06445 0.0214844 4.13184 0.0341797 6.20801 0.0341797\nc61.7227 0 117.569 -9.5332 155.694 -23.6562c19.0615 -7.06055 33.5811 -15.3857 41.835 -22.6123c8.25293 -7.22754 9.38965 -11.5586 9.38965 -13.8916c0 -2.33105 -1.13672 -6.66016 -9.38965 -13.8896l0.0195312 -0.100586\nc-1.47266 0.680664 -2.96289 1.3584 -4.4668 2.02441c-52.0322 23.0605 -121.295 36.5273 -197.693 36.5273c-0.56543 0 -1.12793 -0.0078125 -1.69141 -0.00878906c-0.563477 0.00195312 -1.12402 0.00878906 -1.68848 0.00878906\nc-76.3984 0 -145.662 -13.4668 -197.694 -36.5273c-1.50488 -0.666016 -2.99316 -1.34375 -4.46973 -2.02441z\" />\n `,\n    [`${boardHelper.PIECE_COLOR_BLACK}${boardHelper.PIECE_TYPE_SES}`]: `\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.BLACK}\" filter=\"url(#${filterId})\" \n    d=\"M507.133 128.938c2.10352 0 6.27539 3.76953 6.33398 3.82324l0.0253906 0.0244141c-0.0253906 -0.0244141 61.4521 53.6514 85.3789 81.9648l6.52539 -18.3604s7.18066 16.7627 15.5078 39.5127l114.568 109.985c3.75 3.60156 5.85742 8.48535 5.85742 13.5771v243.649\n    c0.410156 -0.0283203 0.819336 -0.0546875 1.22852 -0.0839844c-0.0605469 4.50195 -0.490234 8.92383 -1.22852 13.2656v75.2002c0 3.69629 -1.11035 7.31348 -3.19922 10.418l-16.5273 24.5645l14.8242 20.0537c2.40039 3.24707 3.68945 7.12988 3.68945 11.1113v15.4561\n    l0.0839844 0.0185547v10.043c0 0.785156 -0.0332031 1.57031 -0.0839844 2.35449v17.6836c0 0.416992 -0.0146484 0.833008 -0.0429688 1.24902v7.24707c0.0390625 0.00976562 0.126953 0.0322266 0.126953 0.0322266v5.99414\n    c-0.000976562 -1.00488 -0.0429688 -2.00879 -0.126953 -3.01367v6.06445c0.0800781 -0.958008 0.126953 -1.91602 0.126953 -2.875v55.5049c0.000976562 50.2676 -101.563 91.0166 -226.85 91.0166c-2.11914 0 -4.23535 -0.0273438 -6.35156 -0.0517578\n    c-2.11621 0.0244141 -4.23242 0.0517578 -6.35156 0.0517578c-125.286 0 -226.851 -40.749 -226.85 -91.0166v-55.5049c0.00488281 0.958984 0.046875 1.91699 0.126953 2.875v-6.06445c-0.0839844 1.00488 -0.126953 2.00879 -0.126953 3.01367v-5.99414\n    s0.0878906 -0.0224609 0.126953 -0.0322266v-7.24707c-0.0283203 -0.416016 -0.0429688 -0.832031 -0.0429688 -1.24902v-17.6836c-0.0507812 -0.78418 -0.0839844 -1.56934 -0.0839844 -2.35449v-10.043l0.0839844 -0.0185547v-15.4561\n    c0 -3.98145 1.28906 -7.86426 3.68945 -11.1113l14.8242 -20.0537l-16.5273 -24.5645c-2.08887 -3.10449 -3.19922 -6.72168 -3.19922 -10.418v-75.2002c-0.738281 -4.3418 -1.16797 -8.76367 -1.22852 -13.2656c0.40918 0.0292969 0.818359 0.0556641 1.22852 0.0839844\n    v-243.649c0 -5.0918 2.10742 -9.97559 5.85742 -13.5771l114.568 -109.985c8.32715 -22.75 15.5078 -39.5127 15.5078 -39.5127l6.52539 18.3604l85.3867 -81.9727s4.41113 -3.83984 6.61719 -3.83984zM507 180.858l-77.4805 74.3818l19.1309 53.834\n    c2.2627 -2.43066 4.80371 -5.06543 7.5625 -7.71387c4.59277 -4.4082 9.64746 -8.84863 15.4141 -12.4688c4.3252 -2.71484 9.39941 -5.90625 16.2363 -6.0791c2.2793 -0.0566406 4.75488 0.22168 7.46289 0.963867c9.21777 2.52832 9.81445 7.37012 10.8105 9.6416\n    c0.356445 0.813477 0.625 1.55176 0.863281 2.26855c0.238281 -0.716797 0.506836 -1.45508 0.863281 -2.26855c0.996094 -2.27148 1.59375 -7.11328 10.8105 -9.6416c2.70801 -0.742188 5.18359 -1.02051 7.46289 -0.963867\n    c6.83691 0.172852 11.9111 3.36426 16.2363 6.0791c5.7666 3.62012 10.8213 8.06055 15.4141 12.4688c2.75879 2.64844 5.2998 5.2832 7.5625 7.71387l19.1309 -53.834zM370.654 311.752l-57.9863 55.666v246.659c4.93457 19.583 21.7236 38.7188 49.959 54.5967\n    c20.6514 11.6133 46.8711 20.8506 76.4863 26.3301c7.5 2.91895 16.1855 7.33789 18.5352 12.8154c2.18945 5.10547 6.88965 14.5527 11.1152 22.8809c0.928711 4.10254 -2.65039 5.66992 -7.59766 6c-45.2871 -4.55176 -86.123 -16.8662 -118.607 -35.1338\n    c-10.9092 -6.13477 -20.9678 -13.0654 -29.8906 -20.6836v4.95215l20.6777 30.7334c4.4375 6.59766 4.24414 15.124 -0.490234 21.5293l-18.9746 25.6689v0.0634766l0.0429688 -0.00976562v15.3457c42.3457 24.626 112.153 39.3301 186.723 39.3301\n    c2.11914 0 4.23535 -0.0263672 6.35156 -0.0507812c2.11621 0.0244141 4.23242 0.0507812 6.35156 0.0507812c74.5693 0 144.377 -14.7041 186.723 -39.3301v-15.3457l0.0429688 0.00976562v-0.0634766l-18.9746 -25.6689\n    c-4.73438 -6.40527 -4.92773 -14.9316 -0.490234 -21.5293l20.6777 -30.7334v-4.95215c-8.92285 7.61816 -18.9814 14.5488 -29.8906 20.6836c-32.4844 18.2676 -73.3203 30.582 -118.607 35.1338c-4.94727 -0.330078 -8.52734 -1.89746 -7.59766 -6\n    c4.22559 -8.32812 8.92578 -17.7754 11.1152 -22.8809c2.34961 -5.47754 11.0352 -9.89648 18.5352 -12.8154c29.6152 -5.47949 55.835 -14.7168 76.4863 -26.3301c28.2354 -15.8779 45.0244 -35.0137 49.959 -54.5967v-246.659l-57.9844 -55.666\n    c2.44141 12.7822 3.56934 24.3428 2.47266 33.1133c-1.93262 15.4629 -6.95605 51.6455 -12.5195 91.1641c-0.124023 0.510742 -0.209961 1.13867 -0.263672 1.875c-0.672852 4.77832 -1.35352 9.59277 -2.03711 14.4326c-3.52832 13.5225 -11.5557 17.0801 -27.9609 21.666\n    l-10.2148 2.78418v10.1855l0.28125 0.436523s-0.260742 1.61133 -0.28125 1.74023v8.88379s24.8867 1.22949 27.1387 -2.4248c15.1641 13.3623 15.5518 37.4561 -7.53516 87.1514l-53.5605 103.776l-9.08008 17.5898\n    c-0.0175781 0.0332031 -7.96289 15.3545 -43.6387 15.3545c-31.1611 0 -39.8623 -11.6885 -41.5762 -14.6709l-0.357422 -0.689453l-62.6367 -121.36c-23.0879 -49.6953 -22.6992 -73.7891 -7.53516 -87.1514c2.25195 3.6543 27.1387 2.4248 27.1387 2.4248v-21.2461\n    l-10.2148 -2.78418c-16.4053 -4.58594 -24.4326 -8.14355 -27.9609 -21.666c-0.683594 -4.83984 -1.36426 -9.6543 -2.03711 -14.4326c-0.0537109 -0.736328 -0.139648 -1.36426 -0.263672 -1.875c-5.56348 -39.5186 -10.5869 -75.7012 -12.5195 -91.1641\n    c-1.0957 -8.77051 0.03125 -20.3311 2.47266 -33.1133zM480.398 319.068h-0.00195312c-1.00098 0.889648 -1.99219 1.70996 -2.97852 2.65723c-7.51074 7.20996 -13.9082 15.0879 -13.9082 15.0879c-2.62012 3.24512 -6.55762 5.2627 -10.8242 5.54492l-15.2715 13.1084\n    l29.1777 271.16l18.6055 16.8115c0.211914 -34.9834 0.441406 -93.8525 0.00976562 -155.487c-0.329102 -46.9561 -1.04492 -94.0137 -2.43359 -129.308c-0.640625 -16.2861 -1.45215 -29.6777 -2.375 -39.5752zM533.594 319.068h-0.00195312\n    c-0.923828 9.89746 -1.73438 23.2891 -2.375 39.5752c-1.38867 35.2939 -2.10449 82.3516 -2.43359 129.308c-0.431641 61.6348 -0.202148 120.504 0.00976562 155.487l18.6055 -16.8115l1.3418 -5.8125l28.1035 -265.248l-15.5391 -13.208\n    c-4.2666 -0.282227 -8.2041 -2.2998 -10.8242 -5.54492c0 0 -6.39746 -7.87793 -13.9082 -15.0879c-0.986328 -0.947266 -1.97754 -1.76758 -2.97852 -2.65723zM313.926 823.327v34.5605c42.3457 24.627 112.153 39.3301 186.723 39.3311\n    c2.11914 0 4.23535 -0.0273438 6.35156 -0.0517578c2.11621 0.0244141 4.23242 0.0517578 6.35156 0.0517578c74.5693 -0.000976562 144.377 -14.7041 186.723 -39.3311v-34.5605c-42.3457 24.627 -112.153 39.3301 -186.723 39.3311\n    c-2.11914 0 -4.23535 -0.0273438 -6.35156 -0.0517578c-2.11621 0.0244141 -4.23242 0.0517578 -6.35156 0.0517578c-74.5693 -0.000976562 -144.377 -14.7041 -186.723 -39.3311z\" />\n `,\n    [`${boardHelper.PIECE_COLOR_BLACK}${boardHelper.PIECE_TYPE_KOL}`]: `\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.BLACK}\" filter=\"url(#${filterId})\" \n    d=\"M507 235.393c1.83789 0.286133 3.61914 0.865234 5.27539 1.71289l64.8867 33.2344c10.7539 5.50977 12.8213 20.001 4.03711 28.2988c0 0 -7.0332 6.64258 -15.0273 14.4414c-3.23633 3.15723 -4.9248 5.08301 -8.07422 8.27344\n    c5.47754 2.72754 11.8604 5.69922 19.3691 8.82812c22.6201 9.42383 50.4775 19.25 65.6953 24.7285c22.7773 8.19922 65.4688 29.5645 93.7773 69.9082c28.3086 40.3428 37.751 101.351 -7.36719 172.721c-24.5537 38.8389 -44.7812 68.5156 -61.2578 91.1914\n    c8.08496 5.00098 15.2607 10.543 21.3789 16.7344c11.5938 11.7324 19.5781 26.6494 19.5781 43.0977c0 1.43848 -0.0820312 2.8623 -0.201172 4.27734v41.1211c0 2.58789 -0.265625 5.1748 -0.794922 7.75391h0.404297v31.6875\n    c0.242188 -1.68164 0.373047 -3.36523 0.390625 -5.04883v49.6074c0 48.3389 -90.3945 87.5459 -202.07 87.7402c-111.677 -0.194336 -202.07 -39.4014 -202.07 -87.7402v-49.6074c0.0185547 1.68359 0.148438 3.36719 0.390625 5.04883v-31.6875h0.404297\n    c-0.529297 -2.5791 -0.794922 -5.16602 -0.794922 -7.75391v-41.1211c-0.119141 -1.41504 -0.201172 -2.83887 -0.201172 -4.27734c0 -16.4482 7.98438 -31.3652 19.5781 -43.0977c6.11816 -6.19141 13.2939 -11.7334 21.3789 -16.7344\n    c-16.4766 -22.6758 -36.7041 -52.3525 -61.2578 -91.1914c-45.1182 -71.3701 -35.6758 -132.378 -7.36719 -172.721c28.3086 -40.3438 71 -61.709 93.7773 -69.9082c15.2178 -5.47852 43.0752 -15.3047 65.6953 -24.7285\n    c7.50879 -3.12891 13.8916 -6.10059 19.3691 -8.82812c-3.14941 -3.19043 -4.83789 -5.11621 -8.07422 -8.27344c-7.99414 -7.79883 -15.0273 -14.4414 -15.0273 -14.4414c-8.78418 -8.29785 -6.7168 -22.7891 4.03711 -28.2988l64.8867 -33.2344\n    c1.65625 -0.847656 3.4375 -1.42676 5.27539 -1.71289zM507 273.729l-32.4082 16.5996c7.51367 7.3457 15.2119 14.9551 20.0684 20.7832c1.03223 1.23926 1.90234 2.77734 2.5957 4.45703c2.51172 0.912109 5.62793 1.56055 9.04492 1.56055\n    c4.22754 0 8.00586 -0.983398 10.7305 -2.24414c0.641602 -1.41406 1.41699 -2.70312 2.30859 -3.77344c4.85645 -5.82812 12.5547 -13.4375 20.0684 -20.7832zM526.406 343.529c-6.18066 2.38379 -12.9805 3.59961 -20.1055 3.59961\n    c-6.77148 0 -13.2471 -1.10449 -19.1797 -3.25977c-1.82715 1.30762 -3.70215 2.44336 -5.71094 3.63672c-8.53906 5.07129 -19.3936 9.97461 -31.416 14.9844c-24.0459 10.0176 -52.3682 19.9736 -67.3008 25.3496c-0.44043 0.158203 -0.954102 0.367188 -1.42383 0.544922\n    c0.853516 1.18359 1.87793 2.42578 3.12891 3.75c5.24902 5.55371 14.1396 11.6768 25.9199 16.9492c23.5469 10.5361 58.251 17.7207 96.6816 17.7305c38.4307 -0.00976562 73.1348 -7.19434 96.6816 -17.7305c11.7803 -5.27246 20.6709 -11.3955 25.9199 -16.9492\n    c1.25098 -1.32422 2.27539 -2.56641 3.12891 -3.75c-0.469727 -0.177734 -0.983398 -0.386719 -1.42383 -0.544922c-14.9326 -5.37598 -43.2549 -15.332 -67.3008 -25.3496c-12.0225 -5.00977 -22.877 -9.91309 -31.416 -14.9844\n    c-2.18262 -1.29688 -4.20801 -2.52051 -6.18359 -3.97656zM350.074 404.42c-15.6006 9.89844 -32.4736 23.5576 -44.3633 40.502c-4.9248 7.01855 -9.21387 14.5186 -12.459 22.6406c0.287109 8.88672 4.41113 17.9248 13.7441 27.5879\n    c9.68359 10.0254 24.8506 20.0293 44.2734 28.5352c38.8301 17.0039 94.3398 28.084 155.73 28.0938c61.3906 -0.00976562 116.9 -11.0898 155.73 -28.0938c19.4229 -8.50586 34.5898 -18.5098 44.2734 -28.5352c9.33301 -9.66309 13.457 -18.7012 13.7441 -27.5879\n    c-3.24512 -8.12207 -7.53418 -15.6221 -12.459 -22.6406c-11.8896 -16.9443 -28.7627 -30.6035 -44.3633 -40.502c-2.49512 4.22949 -5.50391 8.17578 -8.88867 11.7578c-9.62207 10.1787 -22.251 18.2256 -37.0605 24.8535\n    c-29.6025 13.2461 -68.3135 20.7734 -110.977 20.7832c-42.6631 -0.00878906 -81.374 -7.53711 -110.977 -20.7832c-14.8096 -6.62793 -27.4385 -14.6748 -37.0605 -24.8535c-3.38477 -3.58203 -6.39355 -7.52832 -8.88867 -11.7578zM288.635 519.176\n    c3.22852 17.3896 11.0918 37.0635 25.377 59.6602c43.2188 68.3643 72.5029 107.337 90.5898 128.852c9.04395 10.7568 15.2842 17.1475 19.0098 20.6602c2.57812 2.43066 3.38086 3.09766 3.6582 3.30273c0.938477 0.351562 2.00391 0.701172 3.24414 1.04688\n    c1.71582 0.871094 3.54688 1.7334 5.51367 2.5625c16.9707 7.15527 42.5957 12.209 70.9727 12.2188c28.377 -0.00976562 54.002 -5.06348 70.9727 -12.2188c1.9668 -0.829102 3.79785 -1.69141 5.51367 -2.5625c1.24023 -0.345703 2.30566 -0.695312 3.24414 -1.04688\n    c0.277344 -0.205078 1.08008 -0.87207 3.6582 -3.30273c3.72559 -3.5127 9.96582 -9.90332 19.0098 -20.6602c18.0869 -21.5146 47.3711 -60.4873 90.5898 -128.852c14.2852 -22.5967 22.1484 -42.2705 25.377 -59.6602c-13.124 12.542 -30.3066 23.1035 -50.5996 31.9902\n    c-43.9648 19.2529 -102.825 30.6045 -167.766 30.6133c-64.9404 -0.00878906 -123.801 -11.3604 -167.766 -30.6133c-20.293 -8.88672 -37.4756 -19.4482 -50.5996 -31.9902zM366.945 716.852c-7.43848 4.33594 -13.4365 8.85547 -17.7441 13.2148\n    c-7.11328 7.19824 -9.47266 13.0957 -9.47266 18.4961s2.35938 11.2988 9.47266 18.498c7.11328 7.19824 18.8076 14.8359 34.0527 21.3613c30.4746 13.0439 74.7559 21.751 123.746 21.7617c48.9902 -0.00976562 93.2715 -8.71777 123.746 -21.7617\n    c15.2451 -6.52539 26.9395 -14.1631 34.0527 -21.3613c7.11328 -7.19922 9.47266 -13.0977 9.47266 -18.498s-2.35938 -11.2979 -9.47266 -18.4961c-4.30762 -4.35938 -10.3057 -8.87891 -17.7441 -13.2148c-3.92676 4.96387 -7.56055 9.42676 -10.8652 13.3574\n    c-2.74316 3.2627 -5.25391 6.15723 -7.58984 8.7832c-2.21094 3.69824 -4.91016 7.06934 -7.88086 10.0312c-3.34375 3.33301 -7.06738 6.30859 -11.123 9.00391c-2.35254 1.93457 -3.9707 3.0918 -3.9707 3.0918c-1.62109 1.05273 -3.40625 1.83008 -5.28125 2.30078\n    c-2.81152 1.44629 -5.73438 2.80762 -8.77344 4.08984c-22.8408 9.62988 -52.2061 14.958 -84.5703 14.9688c-32.3652 -0.00878906 -61.7295 -5.33887 -84.5703 -14.9688c-3.03906 -1.28223 -5.96191 -2.64355 -8.77344 -4.08984\n    c-1.875 -0.470703 -3.66016 -1.24805 -5.28125 -2.30078c0 0 -1.61816 -1.15723 -3.9707 -3.0918c-4.05566 -2.69531 -7.7793 -5.6709 -11.123 -9.00391c-2.9707 -2.96191 -5.66992 -6.33301 -7.88086 -10.0312c-2.33594 -2.62598 -4.84668 -5.52051 -7.58984 -8.7832\n    c-3.30469 -3.93066 -6.93848 -8.39355 -10.8652 -13.3574zM304.93 740.557v-0.000976562s0.152344 0.00976562 0.152344 0.0107422c-0.101562 1.13086 -0.152344 2.2627 -0.152344 3.39453v-3.4043zM709.07 740.557v3.4043\n    c0 -1.13184 -0.0507812 -2.26367 -0.152344 -3.39453zM304.93 824.557v-0.000976562s0.152344 0.00976562 0.152344 0.0107422c-0.101562 1.13086 -0.152344 2.2627 -0.152344 3.39453v-3.4043zM709.07 824.557v3.4043c0 -1.13184 -0.0507812 -2.26367 -0.152344 -3.39453z\n    M345.32 816.498v54c38.1396 22.0625 98.0137 35.0879 161.68 35.2012c63.666 -0.113281 123.54 -13.1387 161.68 -35.2012v-54c-38.1396 22.0625 -98.0137 35.0879 -161.68 35.2012c-63.666 -0.113281 -123.54 -13.1387 -161.68 -35.2012z\" />\n `,\n    [`${boardHelper.PIECE_COLOR_BLACK}${boardHelper.PIECE_TYPE_SDECH}`]: `\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.BLACK}\" filter=\"url(#${filterId})\" \n    d=\"M501.97 35.9561h-0.0117188c0.0195312 0 0.0410156 0.0166016 0.0625 0v0.0185547c2.86426 0.797852 5.79102 1.8877 8.6875 3.39844c16.4189 8.56445 30.4453 27.9834 36.8926 59.4512c3.78125 18.4531 28.1963 63.8389 44.2666 109.03\n    c8.03613 22.5957 14.2207 46.0439 13.1699 69.9424c-0.443359 10.0645 -2.6377 20.3184 -6.53711 30.1025c40.3701 4.08594 100.55 19.5195 143.93 72.1787c36.2295 43.9805 40.8281 96.8467 33.4873 139.771c-7.34277 42.9229 -23.6377 75.9043 -40.7158 94.4287\n    c-11.0488 11.9844 -37.0273 40.3457 -60.9385 70.001c-4.57617 5.67578 -9.07031 11.3975 -13.3604 17.04c12.6797 5.91797 23.7607 12.748 32.9785 20.9131c9.63574 8.53613 17.5811 19.3271 21.0732 31.709c0.176758 -0.698242 0.339844 -1.39648 0.46875 -2.09961\n    c-0.046875 1.4043 -0.0673828 2.44141 -0.0927734 3.5332c0.00878906 0.03125 0.0117188 0.0625 0.0214844 0.09375l0.015625 -0.0722656v0.139648c0.960938 3.87305 1.50391 7.88867 1.50391 12.0439c0 3.30176 -0.337891 6.51855 -0.955078 9.64453\n    c0.00878906 0.789062 0.0273438 1.33691 0.0302734 2.25781c0 2.00879 -0.202148 4.00098 -0.579102 5.97461v104.399l-0.552734 0.277344c-10.9004 40.8945 -101.521 72.9688 -212.79 74.123c-0.0195312 0 -0.0390625 -0.000976562 -0.0585938 0\n    c-111.27 -1.1543 -201.889 -33.2285 -212.79 -74.123l-0.552734 -0.277344v-104.399c-0.376953 -1.97363 -0.579102 -3.96582 -0.579102 -5.97461c0.00292969 -0.920898 0.0214844 -1.46875 0.0302734 -2.25781c-0.617188 -3.12598 -0.955078 -6.34277 -0.955078 -9.64453\n    c0 -4.1543 0.542969 -8.1709 1.50391 -12.0439v-0.139648l0.0166016 0.0722656c0.00683594 -0.03125 0.0117188 -0.0625 0.0205078 -0.0927734c-0.0253906 -1.09277 -0.0458984 -2.12891 -0.0927734 -3.53418c0.129883 0.703125 0.291992 1.40137 0.469727 2.09961\n    c3.49023 -12.3828 11.4365 -23.1729 21.0723 -31.709c9.21777 -8.16504 20.2998 -14.9951 32.9785 -20.9131c-4.29004 -5.64355 -8.78418 -11.3643 -13.3604 -17.04c-23.9102 -29.6553 -49.8896 -58.0156 -60.9385 -70.001\n    c-17.0791 -18.5244 -33.374 -51.5059 -40.7158 -94.4287c-7.34082 -42.9238 -2.74219 -95.79 33.4873 -139.771c43.3799 -52.6592 103.564 -68.0928 143.93 -72.1787c-3.89941 -9.7832 -6.09375 -20.0381 -6.53613 -30.1025\n    c-1.05176 -23.8984 5.13281 -47.3467 13.1689 -69.9424c16.0703 -45.1895 40.4854 -90.5752 44.2666 -109.03c6.44727 -31.4678 20.4736 -50.8857 36.8926 -59.4512c2.89648 -1.51074 5.82324 -2.60059 8.6875 -3.39844v-0.0185547zM502 112.924h0.000976562\n    c-8.38379 34.6719 -31.624 73.2188 -45.0205 110.891c-6.99219 19.6621 -11.0645 38.1816 -10.4609 51.8984c0.509766 11.5957 2.94141 19.1816 10.1328 26.1689c1.12695 0.52832 2.33398 1.05859 3.72949 1.58105c9.94043 3.72461 24.8584 6.57617 41.6191 7.15039\n    c16.7598 -0.574219 31.6797 -3.42578 41.6201 -7.15039c1.39551 -0.522461 2.60254 -1.05273 3.72949 -1.58105c7.19141 -6.9873 9.62305 -14.5732 10.1328 -26.1689c0.602539 -13.7168 -3.46875 -32.2373 -10.4609 -51.8984\n    c-13.3965 -37.6768 -36.6387 -76.2236 -45.0225 -110.891zM468.731 356.104v0s-26.6797 -6.19629 -65.1191 0.225586c-2.77832 0.381836 -5.62891 0.814453 -8.57324 1.33984c4.34473 3.31055 11.6611 7.4082 21.2031 10.9834\n    c20.7012 7.75684 51.4727 13.3799 85.7578 13.9883c34.2861 -0.609375 65.0566 -6.23145 85.7598 -13.9883c9.54102 -3.57422 16.8574 -7.67188 21.2031 -10.9834c-2.94531 -0.525391 -5.7959 -0.958008 -8.57324 -1.33984\n    c-38.4404 -6.42188 -65.1191 -0.225586 -65.1191 -0.225586c-31.582 5.73926 -37.127 5.88867 -66.5391 0zM347.052 372.763h-0.00390625c-17.4131 8.33203 -34.5186 20.332 -48.7354 37.5898c-13.7734 16.7197 -21.125 34.959 -24.1055 53.4707\n    c1.95996 4.75391 5.79785 9.96484 12.3252 15.7471c10.4434 9.25098 27.252 18.7939 48.7861 26.8613c41.7598 15.6465 100.989 26.0186 166.65 26.6348c0.0205078 0 0.0410156 -0.000976562 0.0625 0c65.6602 -0.616211 124.891 -10.9883 166.649 -26.6348\n    c21.5342 -8.06738 38.3438 -17.6113 48.7861 -26.8613c6.52734 -5.78223 10.3652 -10.9932 12.3252 -15.7471c-2.97949 -18.5117 -10.332 -36.751 -24.1045 -53.4707c-14.2178 -17.2568 -31.3232 -29.2578 -48.7354 -37.5898\n    c-3.54297 7.4873 -8.8457 13.9551 -14.6689 19.1143c-10.3975 9.20996 -23.127 15.8535 -37.8203 21.3594c-27.916 10.4609 -63.3174 16.4443 -102.43 17.0166v0.00195312h-0.0322266h-0.0302734v-0.00195312c-39.1094 -0.573242 -74.5117 -6.55566 -102.431 -17.0166\n    c-14.6924 -5.50488 -27.4219 -12.1484 -37.8193 -21.3594c-5.82422 -5.15918 -11.126 -11.627 -14.6689 -19.1143zM275.655 515.323h-0.00195312c6.34766 32.3193 23.1602 61.2803 28.1436 66.6855c11.1914 12.1396 37.8301 41.1729 62.999 72.3887\n    c7.35742 9.125 14.5801 18.4287 21.3125 27.6426c1.10938 2.33301 3.33301 7.11133 5.91211 12.9385c4.51465 10.1699 9.92773 23.1348 12.3809 32.1348c0.317383 1.16602 1.39648 2.1875 3.08984 3.08691c3.62305 2.96387 10.2422 6.80566 19.123 10.1328\n    c17.75 6.65039 44.0488 11.4902 73.3877 12.0908c29.3389 -0.600586 55.6396 -5.44043 73.3896 -12.0908c8.88086 -3.32715 15.501 -7.16797 19.123 -10.1328c1.69238 -0.899414 2.77148 -1.9209 3.08984 -3.08691c2.45215 -8.99902 7.86523 -21.9648 12.3809 -32.1348\n    c2.5791 -5.82617 4.80273 -10.6045 5.91211 -12.9385c6.73242 -9.21387 13.9551 -18.5176 21.3125 -27.6426c25.1689 -31.2158 51.8066 -60.249 62.999 -72.3887c4.98438 -5.40527 21.7959 -34.3662 28.1426 -66.6855c-13.2402 9.16797 -29.1924 17.0049 -47.4062 23.8301\n    c-47.1299 17.6602 -109.706 28.2607 -178.91 28.8584h-0.0625c-69.2002 -0.597656 -131.776 -11.1982 -178.91 -28.8584c-18.2139 -6.82422 -34.166 -14.6621 -47.4072 -23.8301zM366.625 738.503h0.000976562c-12.2686 5.2998 -21.7832 11.0918 -27.6592 16.2959\n    c-7.13965 6.3252 -8.33105 10.3145 -8.33105 12.7793s1.19141 6.4541 8.33105 12.7793c7.14062 6.32422 19.585 13.5273 35.9141 19.6455c31.3779 11.7578 76.751 19.8135 127.12 20.4268c50.374 -0.613281 95.748 -8.66895 127.13 -20.4268\n    c16.3291 -6.11816 28.7744 -13.3213 35.9141 -19.6455c7.13965 -6.3252 8.33203 -10.3145 8.33203 -12.7793s-1.19238 -6.45508 -8.33203 -12.7793c-5.875 -5.2041 -15.3896 -10.9961 -27.6592 -16.2959c-2.75586 8.78711 -8.41602 16.2656 -14.8037 21.9238\n    c-8.99902 7.97168 -20.0156 13.7217 -32.7314 18.4863c-23.9648 8.97949 -54.2959 14.1504 -87.8135 14.7178v0.00195312h-0.0322266h-0.0302734v-0.00195312c-33.5195 -0.567383 -63.8496 -5.73926 -87.8135 -14.7178\n    c-12.7158 -4.76367 -23.7334 -10.5156 -32.7314 -18.4863c-6.38867 -5.6582 -12.0488 -13.1367 -14.8047 -21.9238zM323.339 824.279l0.0126953 42.8457c38.29 22.1465 104.046 36.8623 178.63 37.6367c0.0205078 0.000976562 0.0419922 0 0.0625 0\n    c74.5801 -0.774414 140.334 -15.4902 178.63 -37.6367v-42.8457c-7.18652 4.15332 -15.3525 8.04785 -24.3594 11.6416c-3.84082 1.67871 -7.80957 3.28516 -11.916 4.82422c-38.04 14.25 -87.5889 22.6035 -142.36 23.1924v0.00195312h-0.0322266h-0.0302734v-0.00195312\n    c-54.7754 -0.588867 -104.324 -8.94141 -142.36 -23.1924c-4.10645 -1.53906 -8.0752 -3.14551 -11.916 -4.82422c-9.00684 -3.59375 -17.1729 -7.48828 -24.3604 -11.6416z\" />\n `,\n    [`${boardHelper.PIECE_COLOR_BLACK}${boardHelper.PIECE_TYPE_NEANG}`]: `\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.BLACK}\" filter=\"url(#${filterId})\" \n    d=\"M506.765 113.54h0.0078125c0.116211 0 0.162109 -0.0263672 0.462891 0c7.77051 1.16992 21.6113 9.08984 35.9551 16.7266c12.46 6.63477 10.0205 23.6094 7.87109 32.1074l-15.3516 49.4727c11.1777 36.5859 21.3398 70.3037 17.9932 101.78\n    c20.9648 31.0527 39.2188 44.6465 59.252 57.8145c20.9727 13.7842 44.7012 27.2969 69.2891 56.9521c33.8994 40.8906 34.7324 89.7275 15.1211 146.641c-12.8477 37.2891 -37.626 84.1328 -65.7822 136.79c15.8955 6.1875 29.3955 13.6123 39.8809 23.123\n    c8.41406 7.63281 15.1445 17.3027 17.6475 28.3281l0.167969 -8.01562v8.74609c0.578125 2.77051 0.898438 5.62305 0.898438 8.55273c0 2.78418 -0.296875 5.49609 -0.822266 8.13867v106.88h-0.0761719v3.45508s-0.0654297 0.00390625 -0.0664062 0.00390625\n    c0.0390625 0.589844 0.0585938 1.17969 0.0585938 1.76953c0 38.6016 -81.4697 69.8994 -182.04 69.9727v0.00390625h-0.111328c-0.0400391 0 -0.0800781 -0.00195312 -0.121094 -0.00195312c-0.0400391 0 -0.0791016 0.00195312 -0.119141 0.00195312h-0.111328\n    v-0.00390625c-100.571 -0.0742188 -182.041 -31.3711 -182.04 -69.9727c0 -0.589844 0.0195312 -1.17969 0.0585938 -1.76953c-0.000976562 0 -0.0664062 -0.00390625 -0.0664062 -0.00390625v-3.45508h-0.0761719v-106.88\n    c-0.525391 -2.64258 -0.822266 -5.35449 -0.822266 -8.13867c0 -2.92969 0.320312 -5.78223 0.898438 -8.55273v-8.74609l0.167969 8.01562c2.50195 -11.0254 9.2334 -20.6953 17.6484 -28.3281c10.4844 -9.51074 23.9854 -16.9346 39.8809 -23.123\n    c-28.1572 -52.6582 -52.9336 -99.502 -65.7832 -136.79c-19.6104 -56.9141 -18.7773 -105.754 15.1211 -146.641c24.5879 -29.6553 48.3174 -43.168 69.2891 -56.9521c20.0342 -13.168 38.2881 -26.7617 59.252 -57.8145c-3.3457 -31.4775 6.81641 -65.1953 17.9941 -101.78\n    l-15.3525 -49.4727c-2.14941 -8.49805 -4.58887 -25.4727 7.87109 -32.1074c14.3447 -7.6377 28.1855 -15.5566 35.9551 -16.7266zM506.995 221.69v-0.000976562c-9.77734 15.542 -22.541 45.167 -17 88.9004c7.04004 1.70898 20.2178 3.71582 34.041 -0.337891\n    c5.43359 -43.5459 -7.28809 -73.0596 -17.041 -88.5615zM531.327 334.17v0.000976562c-20.4336 6.0957 -39.1836 2.89844 -48.8848 0.318359c-22.5283 32.0381 -44.6406 48.6914 -64.9219 62.0225c-2.15527 1.41699 -4.26367 2.77637 -6.36719 4.13672l0.164062 0.0234375\n    c-0.00195312 0.0361328 -0.0175781 0.109375 -0.0175781 0.134766c0 0.34375 0.0615234 1.7002 3.42188 4.74805c3.35938 3.04785 9.63672 6.82812 18.0547 10.0576c16.8359 6.45801 41.9492 10.9385 69.7188 10.9385c1.43262 0 2.85254 -0.0205078 4.26953 -0.0449219\n    v-0.00390625c0.0771484 0.00195312 0.155273 0.000976562 0.232422 0.00195312c0.0771484 -0.000976562 0.154297 -0.000976562 0.230469 -0.00195312v0.00390625c1.41699 0.0244141 2.83789 0.0449219 4.26953 0.0449219c27.7705 0 52.8848 -4.47949 69.7197 -10.9385\n    c8.41797 -3.23047 14.6953 -7.00977 18.0547 -10.0576c3.35938 -3.04688 3.42188 -4.4043 3.42188 -4.74805c0 -0.0253906 -0.015625 -0.0976562 -0.0175781 -0.134766l0.164062 -0.0234375c-2.10449 -1.36035 -4.21191 -2.71973 -6.36719 -4.13672\n    c-20.3486 -13.375 -42.54 -30.0957 -65.1455 -62.3418zM386.147 417.617h-0.00585938c-10.2871 7.73438 -20.4941 16.8945 -31.2969 29.9238c-14.708 17.7393 -21.6484 35.4854 -22.0576 56.3535c1.71387 2.6543 4.0752 5.40918 7.25195 8.29102\n    c7.85059 7.12012 20.248 14.292 36.0537 20.3555c31.6123 12.127 76.6406 19.9844 126.399 19.9844c1.43262 0 2.84766 -0.0263672 4.26953 -0.0429688v-0.00488281c0.078125 0.00195312 0.155273 0.00195312 0.232422 0.00292969\n    c0.0771484 -0.00195312 0.154297 -0.00195312 0.230469 -0.00292969v0.00488281c1.42188 0.0166016 2.83789 0.0429688 4.26953 0.0429688c49.7627 0 94.791 -7.85742 126.4 -19.9844c15.8047 -6.06348 28.2021 -13.2344 36.0527 -20.3555\n    c3.17773 -2.88184 5.53809 -5.63672 7.25195 -8.29102c-0.40918 -20.8691 -7.34961 -38.6143 -22.0566 -56.3535c-10.8037 -13.0293 -21.0117 -22.1885 -31.2969 -29.9238c-2.2832 3.82715 -5.20801 7.24414 -8.41992 10.1582\n    c-7.38867 6.70117 -16.6631 11.7021 -27.4629 15.8457c-21.6006 8.28711 -49.5859 12.9297 -80.4658 12.9297c-1.50879 0 -3.00488 -0.0195312 -4.5 -0.0429688c-1.49512 0.0234375 -2.99219 0.0429688 -4.50195 0.0429688c-30.8799 0 -58.8643 -4.64258 -80.4648 -12.9297\n    c-10.7998 -4.14453 -20.0752 -9.14453 -27.4629 -15.8457c-3.21191 -2.91406 -6.1377 -6.33105 -8.41992 -10.1582zM336.8 537.377h0.00390625c2.01758 8.67383 4.76465 17.9199 8.19727 27.8809c15.9902 46.4102 48.0801 105.973 88.6562 183.25\n    c0.192383 0.214844 0.37793 0.432617 0.583984 0.638672c0.196289 0.241211 0.461914 0.539062 1.05469 1.07617c2.22949 2.02344 6.87207 4.87988 13.2695 7.33398c12.7959 4.90918 32.3281 8.42969 53.9346 8.42969c1.43457 0 2.85449 -0.0253906 4.26953 -0.0566406\n    v-0.00585938c0.0761719 0.00195312 0.155273 0.00195312 0.232422 0.00390625c0.0761719 -0.00195312 0.15332 -0.00195312 0.230469 -0.00390625v0.00585938c1.41406 0.03125 2.83398 0.0566406 4.26953 0.0566406c21.6055 0 41.1377 -3.52051 53.9336 -8.42969\n    c6.39844 -2.4541 11.04 -5.31055 13.2695 -7.33398c0.592773 -0.537109 0.858398 -0.834961 1.05469 -1.07617c0.206055 -0.206055 0.391602 -0.423828 0.583984 -0.638672c40.5762 -77.2803 72.665 -136.843 88.6562 -183.25\n    c3.43262 -9.96094 6.17969 -19.207 8.19727 -27.8809c-8.93457 5.93262 -19.4912 11.127 -31.418 15.7031c-35.1055 13.4678 -82.2402 21.4434 -134.28 21.4434c-1.50879 0 -3 -0.0283203 -4.5 -0.0429688c-1.5 0.0146484 -2.99219 0.0429688 -4.50195 0.0429688\n    c-52.043 0 -99.1768 -7.97559 -134.279 -21.4434c-11.9277 -4.57617 -22.4834 -9.77051 -31.418 -15.7031zM399.021 742.937h0.00390625c-1.04102 0.375977 -2.07617 0.754883 -3.08203 1.14062c-13.5537 5.20117 -23.8984 11.3154 -29.9082 16.7666\n    c-6.00879 5.4502 -7.24023 9.12207 -7.24023 11.7129s1.23145 6.2627 7.24023 11.7129c6.00977 5.45117 16.3545 11.5654 29.9082 16.7656c27.1074 10.4004 66.7188 17.3984 110.51 17.3984c0.105469 0 0.209961 -0.00292969 0.314453 -0.00390625v-0.00390625\n    c0.078125 0 0.155273 0.000976562 0.232422 0.00195312c0.0771484 -0.000976562 0.15332 -0.00195312 0.230469 -0.00195312v0.00390625c0.104492 0.00195312 0.208984 0.00390625 0.314453 0.00390625c43.7891 0 83.4023 -6.99805 110.511 -17.3984\n    c13.5537 -5.2002 23.8984 -11.3154 29.9072 -16.7656c6.00977 -5.45117 7.24023 -9.12207 7.24023 -11.7129s-1.23047 -6.2627 -7.24023 -11.7129c-6.00879 -5.45117 -16.3535 -11.5664 -29.9072 -16.7666c-1.00684 -0.385742 -2.04102 -0.764648 -3.08203 -1.14062\n    c-1.60449 3.01465 -3.18164 5.95703 -4.79492 9.00293c-0.978516 8.3584 -5.74609 15.4453 -11.3203 20.502c-6.25879 5.67676 -13.8994 9.75391 -22.6797 13.123c-17.5615 6.7373 -39.9639 10.4219 -64.6807 10.4219c-1.50879 0 -3.00781 -0.0175781 -4.5 -0.0449219\n    c-1.49219 0.0273438 -2.99219 0.0449219 -4.50195 0.0449219c-24.7158 0 -47.1201 -3.68555 -64.6797 -10.4219c-8.78027 -3.36914 -16.4219 -7.44629 -22.6797 -13.123c-5.57422 -5.05664 -10.3418 -12.1436 -11.3203 -20.502\n    c-1.61426 -3.0459 -3.19043 -5.98828 -4.79492 -9.00293zM354.644 829.212v49.9922c33.6504 19.6699 90.8096 31.5303 152.12 31.5762c0.0771484 0 0.154297 0.00195312 0.232422 0.00195312c0.0771484 0 0.15332 -0.00195312 0.230469 -0.00195312\n    c61.3086 -0.0458984 118.469 -11.9062 152.12 -31.5762v-49.9922c-32.54 18.9805 -88.5059 31.5215 -152.12 31.5684v0.00195312h-0.111328h-0.121094h-0.119141h-0.111328v-0.00195312c-63.6133 -0.0458984 -119.575 -12.5879 -152.12 -31.5684z\" />\n `,\n    [`${boardHelper.PIECE_COLOR_BLACK}${boardHelper.PIECE_TYPE_TREY}`]: `\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.BLACK}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n `,\n    [`${boardHelper.PIECE_COLOR_BLACK}${boardHelper.PIECE_TYPE_BORK}`]: `\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.WHITE}\" filter=\"url(#${filterId})\" \n d=\"M243 500h514v36h-514v-36zM490 428h34v178h-34v-178zM507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89z\n M507 443c-127 0 -231 31 -240 70v1v10c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM267 600v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n `\n};\n\nconst svgCSS = {\n    attacked: (color) => `path {\n      stroke: red;\n      stroke-width: 1px;\n      stroke-linejoin: round;\n      animation-name: attacking;\n      animation-duration: 1s;\n      animation-iteration-count: infinite;\n   }\n   @keyframes attacking {\n      0% {\n         stroke-width: 20px;\n      }\n      50% {\n         stroke-width: 1px;\n      }\n      100% {\n         stroke-width: 20px;\n      }\n   }`,\n    notAttacked: (color) => `path {\n   }`\n};\n\nfunction genBackgroundNote(tObjects = [], squareWidth, fSize) {\n    const text = tObjects.map((obj) => {\n        return `<text x='${obj.x}' y='${obj.y}' fill='grey' font-size='${fSize}'>${obj.t}</text>`;\n    }).join('');\n    const svg = `<svg xmlns='http://www.w3.org/2000/svg' version='1.1' height='${squareWidth}px' width='${squareWidth}px'>\n      ${text}\n   </svg>`;\n    return `url(\"data:image/svg+xml;utf8,${encodeURIComponent(svg)}\")`;\n}\n\nfunction squareWidth(width) {\n    if (isNaN(Number(width))) {\n        throw new Error('Invalid width');\n    }\n    const sqWidth = (width - (boardHelper.ROW_NUMBER - 1) * BORDER_WIDTH) / boardHelper.ROW_NUMBER;\n    return sqWidth;\n}\n\nmodule.exports = {\n    PIECES_SVG,\n    WOOD_COLORS,\n    svgCSS,\n    genBackgroundNote,\n    squareWidth\n};\n","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */\n'use strict';\n\nconst randomString = (length = 8) => {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n};\n\nconst uniqueIdHelper = {\n    _idList: [],\n    genId() {\n        let id = randomString(8);\n        while (~uniqueIdHelper._idList.indexOf(id)) {\n            id = randomString(4);\n        }\n        this._idList.push(id);\n        return id;\n    }\n};\n\nmodule.exports = uniqueIdHelper;\n","export default __webpack_public_path__ + \"3871c59aa0d9809025bd8963b779eb48.mp3\";","export default __webpack_public_path__ + \"f39d9eb214416a5a32a0e060e2e4219d.mp3\";","export default __webpack_public_path__ + \"6843b5956a4523cf4ef83c84e0120752.mp3\";","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(497);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;"],"sourceRoot":""}