{"version":3,"sources":["webpack://khmer-chess-board/webpack/universalModuleDefinition","webpack://khmer-chess-board/./index.js","webpack://khmer-chess-board/./node_modules/khmer-chess/index.js","webpack://khmer-chess-board/./node_modules/khmer-chess/src/KPGN.js","webpack://khmer-chess-board/./node_modules/khmer-chess/src/REN.js","webpack://khmer-chess-board/./node_modules/khmer-chess/src/board-helper.js","webpack://khmer-chess-board/./node_modules/khmer-chess/src/gen-mask.js","webpack://khmer-chess-board/./node_modules/khmer-chess/src/jsis.js","webpack://khmer-chess-board/./node_modules/khmer-chess/src/move-helper.js","webpack://khmer-chess-board/./node_modules/khmer-chess/src/ren-helper.js","webpack://khmer-chess-board/webpack/bootstrap","webpack://khmer-chess-board/webpack/startup"],"names":["root","factory","exports","module","define","amd","a","i","self","KhmerChess","require","HORIZONTAL_CODE_LETTERS","TABLE_CLASS","COLORS","PIECE_COLOR_WHITE","PIECE_COLOR_BLACK","WOOD_COLORS","TYPES","PIECE_TYPE_TOUK","PIECE_TYPE_SES","PIECE_TYPE_KOL","PIECE_TYPE_SDECH","PIECE_TYPE_NEANG","PIECE_TYPE_TREY","PIECE_TYPE_BORK","filterId","SVG_FILTER","PIECES_SVG","Piece","type","color","this","toUpperCase","SquarePiece","x","y","container","piece","isGraveyard","document","createElement","setPiece","h","v","drawPiece","classList","remove","add","Graveyard","squarePiece","squares","push","index","KhmerChessBoard","options","width","khmerChess","load","Error","minWidth","addCss","drawBoard","renderKhmerChess","squareWidth","_squareWidth","pieceFontSize","css","Object","values","forEach","encodeURIComponent","head","getElementsByTagName","style","appendChild","styleSheet","cssText","createTextNode","createTable","parent","table","createTbody","tbody","createTr","tr","createTd","td","j","cursor","squaresIndex","indexCode","keys","key","graveyardContainerHeight","height","trGraveyardContainer","tdGraveyardContainer","addEventListener","e","scrollLeft","wheelDelta","preventDefault","overflowX","overflowY","colSpan","padding","boxShadow","tableGraveyard","graveyardWidth","BORDER_WIDTH","trGraveyard","tdGraveyard","graveyard","_addNote","fSize","addBackground","target","tObjects","bgImg","obj","t","backgroundImage","backgroundRepeat","square","c","get","removePiece","p","board","arr","KPGN","MoveHelper","renHelper","renStr","toRen","renInstance","valid","error_number","error","message","toString","toMultiArray","pieces","kpgnInstance","toJson","kpgnJosn","result","reduce","s","subArr","rs","map","join","bottom","length","gyTStr","gyStr","gyBStr","graveyardStr","turn","move","squareId","moves","listener","REN","Player","id","name","Result","win","draw","lost","Move","from","to","jump","capture","Timer","totalSecond","currentWhite","currentBlack","kpgnJson","white","black","last","whiteWin","blackWin","event","date","location","players","m","ren","timer","boardHelper","jsis","DEFAULT_BOARD_STR","NOT_SET","isUndefined","toWhitePiece","isUpperCase","toLowerCase","isWhite","Pos","indexOf","toPString","isNull","EMPTY_PIECE","Board","boardStr","Array","getSubBoardNumber","_","codeP","numToCodeP","newBoardStr","extract","replace","isValidPiecesString","poses","split","pos","str","reg","RegExp","$1","BOARD_SEPARATOR","toStringFull","compress","KqMoved","kqMovedStr","bh","whiteKing","whiteQueen","blackKing","blackQueen","KAttacked","kAttackedStr","CountDown","countdownStr","newCountdownStr","isStringNumber","Number","turnStr","kqMoved","countdown","invalidPiecesString","isInvalidPieceCount","piecesCount","filter","concat","toOrigin","k","sort","kAttacked","genMask","Rectangle","point","allPiecesString","ROW_NUMBER","ROW_FIRST_INDEX","ROW_LAST_INDEX","mask","onlyPiece","ruler","some","isValidPosXY","rect","isContainsPoint","isValidPiece","isBlack","res","nerdPosToXY","isNumber","Math","floor","nerdXyToPos","isPosInBoard","posInBoard","getCharPieceFromString","piecesString","charAt","getPieceProperties","code","pieceHash","PIECE_COLOR_EMPTY","getCharPieceInPos","getPieceInPos","isString","pr","convertMask","sign","getPieceCanMovePoses","_pos","getPieceCanMovePosesValid","distPiece","_poses","n","thisPos","_x","_y","_n","_s","abs","replacePiecesString","substring","injectPiece","pos1","pos2","isCharPiecesInBoard","getPieceCode","val","getKingWillInDanger","kingPos","numToCode","getKingInDanger","number","generatePosesCanMove","isHaveMoved","isHaveCaptured","getPiecesInBoard","filterPieceInBoard","prop","whitePieces","blackPieces","extractPiecesToArray","pieceAll","isStateCount","checkCountable","weaker","stronger","oppositeColor","checkCount","force","countChar","count","toukCount","getHashKey","getPieceKeyByProp","prop1","getPieceKeyByName","isValid","isNotEmpty","isValidString","isNaN","isArray","isFunction","f","isObject","o","isBoolean","b","isTrue","isValidBoolean","isFalse","isPoint","isValidObject","isValidNumber","isSize","size","isOdd","isEven","option","currentTurn","isNeangMoved","isSdechMoved","genCanMove","genCanMoveForAnother","whiteMoves","blackMoves","whiteKingInDanger","whiteKingWillInDanger","blackKingInDanger","blackKingWillInDanger","winColor","stuckColor","genMoves","isSdech","isNeang","canMoveIndexes","cleanMoves","splice","init","generateCanMoves","cleanPieceNoMove","anotherMoves","checkIfKingInDanger","genWinLost","getStuck","blackCountable","whiteCountable","countingBlack","countingWhite","fen","fenArr","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__"],"mappings":"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","file":"khmer-chess-board.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n/*\n  ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓\n8 ┃   ┃   ┃   ┃   ┃ k ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n7 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n6 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n5 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n4 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n3 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n2 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n1 ┃   ┃   ┃   ┃ K ┃   ┃   ┃   ┃   ┃\n  ┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛\n    a   b   c   d   e   f   g   h\n  ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓\n  ┃ b ┃ h ┃ g ┃ q ┃ g ┃ h ┃ b ┃ f ┃ f ┃ f ┃ f ┃ f ┃ f ┃ f ┃ f ┃ F ┃ F ┃ F ┃ F ┃ F ┃ F ┃ F ┃ F ┃ B ┃ H ┃ G ┃ Q ┃ G ┃ H ┃ B ┃\n  ┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛\n */\n\"use strict\";\n\nconst { KhmerChess } = require('khmer-chess');\n\nconst COLUMN_NUMBER = 8;\nconst BORDER_WIDTH = 1\nconst MIN_SQUARE_WIDTH = 5\nconst TD_GRAVEYARD_NUMBER = 30;\nconst HORIZONTAL_CODE_LETTERS = 'abcdefgh';\nconst TABLE_CLASS = 'khmer-chess-board';\n\nconst COLORS = {\n    PIECE_COLOR_WHITE: \"w\",\n    PIECE_COLOR_BLACK: \"b\",\n};\nconst WOOD_COLORS = {\n    WHITE: '#ffffff',\n    BLACK: '#422007',\n}\nconst toWhite = (c) => {\n    return c.toUpperCase();\n}\nconst TYPES = {\n    PIECE_TYPE_TOUK: \"b\", // Boat\n    PIECE_TYPE_SES: \"h\", // Horse\n    PIECE_TYPE_KOL: \"g\", // General\n    PIECE_TYPE_SDECH: \"k\", // King\n    PIECE_TYPE_NEANG: \"q\", // Queen\n    PIECE_TYPE_TREY: \"f\", // Fish\n    PIECE_TYPE_BORK: \"t\", // Transform fish\n};\nconst filterId = 'drop-shadow';\nconst SVG_FILTER = `<defs>\n<filter id=\"${filterId}\" height=\"130%\">\n  <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"5\"/> \n  <feOffset dx=\"5\" dy=\"5\" result=\"offsetblur\"/> \n  <feMerge> \n    <feMergeNode/>\n    <feMergeNode in=\"SourceGraphic\"/> \n  </feMerge>\n</filter>\n</defs>`;\nconst PIECES_SVG = {\n    [`${COLORS.PIECE_COLOR_WHITE}${TYPES.PIECE_TYPE_TOUK}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.WHITE}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_WHITE}${TYPES.PIECE_TYPE_SES}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.WHITE}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_WHITE}${TYPES.PIECE_TYPE_KOL}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.WHITE}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_WHITE}${TYPES.PIECE_TYPE_SDECH}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.WHITE}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_WHITE}${TYPES.PIECE_TYPE_NEANG}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.WHITE}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_WHITE}${TYPES.PIECE_TYPE_TREY}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.WHITE}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_WHITE}${TYPES.PIECE_TYPE_BORK}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.WHITE}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_BLACK}${TYPES.PIECE_TYPE_TOUK}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.BLACK}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_BLACK}${TYPES.PIECE_TYPE_SES}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.BLACK}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_BLACK}${TYPES.PIECE_TYPE_KOL}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.BLACK}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_BLACK}${TYPES.PIECE_TYPE_SDECH}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.BLACK}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_BLACK}${TYPES.PIECE_TYPE_NEANG}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.BLACK}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_BLACK}${TYPES.PIECE_TYPE_TREY}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.BLACK}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n    [`${COLORS.PIECE_COLOR_BLACK}${TYPES.PIECE_TYPE_BORK}`]: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"-10 0 1024 1000\">\n    ${SVG_FILTER}\n    <path fill=\"${WOOD_COLORS.BLACK}\" filter=\"url(#${filterId})\" \n d=\"M507 417c145 0 265 39 283 89c1 2 2 5 2 8v1v3v4v172v3v2v2c0 2 0 4 -1 6h-1c-15 51 -135 92 -283 92c-146 0 -266 -39 -283 -90c-1 -2 -2 -5 -2 -8v-3v-1v-1v-176v-2v-1v-3c0 -3 1 -6 2 -8c17 -50 138 -89 283 -89zM507 443c-127 0 -231 31 -240 70v1v10\n c9 39 114 70 240 70s229 -30 239 -69v-11l1 -1c-9 -39 -114 -70 -240 -70zM504 473h1h2c99 0 180 20 180 45s-81 46 -180 46s-180 -21 -180 -46s79 -45 177 -45zM267 573v117c13 8 28 15 45 22c51 19 120 31 195 31s144 -12 195 -31c17 -6 31 -14 44 -22v-116\n c-51 28 -138 46 -239 46s-189 -19 -240 -47z\" />\n </svg>\n `,\n};\n\nclass Piece {\n    type = TYPES.PIECE_TYPE_TREY;\n    color = COLORS.PIECE_COLOR_WHITE;\n    get pCode() {\n        if (this.color == COLORS.PIECE_COLOR_WHITE) {\n            return this.type.toUpperCase();\n        }\n        return this.type;\n    }\n    constructor(type, color) {\n        this.type = type;\n        this.color = color;\n    }\n}\nclass SquarePiece {\n    x = 0;\n    y = 0;\n    get h() {\n        if (this.isGraveyard) {\n            return `${this.x}x`;\n        }\n        return HORIZONTAL_CODE_LETTERS[this.x];\n    }\n    get v() {\n        return this.y + 1;\n    }\n    get index() {\n        return this.y * COLUMN_NUMBER + this.x;\n    }\n    get indexCode() {\n        return `${this.h}${this.v}`;\n    }\n    isGraveyard = false;\n    container = document.createElement('td');\n    piece = null;\n    constructor(x, y, container, piece, isGraveyard) {\n        this.x = x;\n        this.y = y;\n        this.container = container;\n        this.setPiece(piece);\n        this.isGraveyard = isGraveyard;\n    }\n    removePiece() {\n        this.setPiece(null);\n    }\n    setPiece(piece) {\n        this.piece = piece;\n        this.drawPiece();\n    }\n    drawPiece() {\n        this.container.classList.remove('piece');\n        if (this.piece) {\n            this.container.classList.add('piece');\n            this.container.classList.add(`type-${this.piece.type}`);\n            this.container.classList.add(`color-${this.piece.color}`);\n        }\n    }\n}\nclass Graveyard {\n    squares = [];\n    push(squarePiece) {\n        this.squares.push(squarePiece);\n    }\n    get(index) {\n        return this.squares[index];\n    }\n}\n\nclass KhmerChessBoard {\n    options = {\n        width: 500,\n        container: null\n    };\n    squares = [];\n    squaresIndex = {};\n    graveyard = new Graveyard();\n    khmerChess = new KhmerChess();\n    constructor(options = {}) {\n        this.khmerChess.load('bhgqkghb/8/1ff5/8/8/FFFFFFFF/8/BHGKQGHB w ---- -- -.- ffffff');\n        if (!options.container) {\n            throw new Error('Container is required!');\n        }\n        this.options.container = options.container;\n\n        const minWidth = (COLUMN_NUMBER - 1) * BORDER_WIDTH + COLUMN_NUMBER * MIN_SQUARE_WIDTH;\n        if (options.width < minWidth) {\n            throw new Error(`Board width must more than ${minWidth}`);\n        }\n        if (options.width) {\n            this.options.width = options.width;\n        }\n\n        this.addCss();\n        this.drawBoard();\n        this.renderKhmerChess();\n    }\n    addCss() {\n        const squareWidth = this._squareWidth();\n        const pieceFontSize = this.options.width / 12;\n\n        let css = `\n          table.${TABLE_CLASS}  {\n            table-layout: fixed;\n            border-collapse: collapse;\n            border-spacing: 0px;\n            width: ${this.options.width}px;\n            height: ${this.options.width}px;\n            text-align: center;\n            border: 0px;\n            padding: 0px;\n            margin: auto;\n            background-color: white;\n          }\n          table.${TABLE_CLASS} tr {\n            width: ${this.options.width}px;\n            height: ${squareWidth}px;\n          }\n          table.${TABLE_CLASS} td {\n            user-select: none;\n            background-color: #f4d1a6;\n            border: 1px solid white;\n            padding: 0px;\n            margin: 0px;\n            max-width: ${squareWidth}px;\n            max-height: ${squareWidth}px;\n          }\n          table.${TABLE_CLASS} td, table.${TABLE_CLASS} td::before {\n            font-size: ${pieceFontSize}px;\n          }\n          table.${TABLE_CLASS} td.piece::before {\n            width: ${squareWidth}px;\n            height: ${squareWidth}px;\n            background-size: ${squareWidth}px ${squareWidth}px;\n            display: block;\n            content: ' ';\n          }\n        `;\n        Object.values(COLORS).forEach((color) => {\n            Object.values(TYPES).forEach((type) => {\n                css += `\n                table.${TABLE_CLASS} td.piece.type-${type}.color-${color}::before {\n                    background-image: url('data:image/svg+xml;utf8,${encodeURIComponent(PIECES_SVG[color + type])}');\n                }\n                  `;\n            });\n        });\n\n        const head = document.head || document.getElementsByTagName('head')[0];\n        const style = document.createElement('style');\n        head.appendChild(style);\n\n        style.type = 'text/css';\n        if (style.styleSheet) {\n            // This is required for IE8 and below.\n            style.styleSheet.cssText = css;\n        } else {\n            style.appendChild(document.createTextNode(css));\n        }\n    }\n    drawBoard() {\n        const squareWidth = this._squareWidth();\n\n        const createTable = (parent = this.options.container) => {\n            const table = document.createElement('table');\n            table.classList.add(TABLE_CLASS);\n            parent.appendChild(table);\n            return table;\n        }\n        const createTbody = (parent) => {\n            const tbody = document.createElement('tbody');\n            parent.appendChild(tbody);\n            return tbody;\n        }\n        const createTr = (parent) => {\n            const tr = document.createElement('tr');\n            parent.appendChild(tr);\n            return tr;\n        }\n        const createTd = (parent) => {\n            const td = document.createElement('td');\n            parent.appendChild(td);\n            return td;\n        }\n        const createDiv = (parent) => {\n            const div = document.createElement('div');\n            div.style.width = squareWidth;\n            div.style.height = squareWidth;\n            div.style.fontSize = this.options.width / 12;\n            div.innerText = 't';\n            parent.appendChild(div);\n            return\n        }\n\n        const table = createTable();\n        const tbody = createTbody(table);\n\n        for (let i = 0; i < COLUMN_NUMBER; i++) {\n            const tr = createTr(tbody);\n            for (let j = 0; j < COLUMN_NUMBER; j++) {\n                const td = createTd(tr);\n                td.style.cursor = 'pointer';\n                const piece = new Piece(TYPES.PIECE_TYPE_TREY, COLORS.PIECE_COLOR_WHITE);\n                const squarePiece = new SquarePiece(j, COLUMN_NUMBER - i - 1, td, piece);\n                this.squaresIndex[squarePiece.indexCode] = squarePiece;\n            }\n        }\n        Object.keys(this.squaresIndex).forEach((key) => {\n            this.squares[this.squaresIndex[key].index] = this.squaresIndex[key];\n        });\n\n        const graveyardContainerHeight = squareWidth + 10 * BORDER_WIDTH;\n        table.style.height += graveyardContainerHeight;\n        const trGraveyardContainer = createTr(tbody);\n        trGraveyardContainer.style.height = graveyardContainerHeight;\n        const tdGraveyardContainer = createTd(trGraveyardContainer);\n        tdGraveyardContainer.addEventListener('mousewheel', function (e) {\n            this.scrollLeft -= (e.wheelDelta);\n            e.preventDefault();\n        }, false);\n        tdGraveyardContainer.style.width = this.options.width;\n        tdGraveyardContainer.style.height = graveyardContainerHeight;\n        tdGraveyardContainer.style.overflowX = 'scroll';\n        tdGraveyardContainer.style.overflowY = 'hidden';\n        tdGraveyardContainer.colSpan = 8;\n        tdGraveyardContainer.style.padding = 8 * BORDER_WIDTH * this.options.width / 600;\n        tdGraveyardContainer.style.boxShadow = `inset 0 0 ${this.options.width / 60}px #000000`;\n        const tableGraveyard = createTable(tdGraveyardContainer);\n        const graveyardWidth = BORDER_WIDTH * (TD_GRAVEYARD_NUMBER - 1) + squareWidth * TD_GRAVEYARD_NUMBER;\n        tableGraveyard.style.width = graveyardWidth;\n        tableGraveyard.style.height = squareWidth;\n        const tbodyGraveyard = createTbody(tableGraveyard);\n        const trGraveyard = createTr(tbodyGraveyard);\n        trGraveyard.style.width = graveyardWidth;\n\n        for (let i = 0; i < TD_GRAVEYARD_NUMBER; i++) {\n            const tdGraveyard = createTd(trGraveyard);\n            const squarePiece = new SquarePiece(i, 0, tdGraveyard, null, true);\n            this.graveyard.push(squarePiece);\n        }\n\n        this._addNote();\n    };\n    _addNote() {\n        const squareWidth = this._squareWidth();\n        const fSize = 15 * this.options.width / 600;\n\n        const addBackground = (target, tObjects = []) => {\n            let bgImg = `url(\"data:image/svg+xml;utf8,`;\n            bgImg += `<svg xmlns='http://www.w3.org/2000/svg' version='1.1' height='${squareWidth}px' width='${squareWidth}px'>`;\n\n            tObjects.forEach((obj) => {\n                bgImg += `<text x='${obj.x}' y='${obj.y}' `;\n                bgImg += `fill='white' font-size='${fSize}'>${obj.t}</text>`;\n            })\n\n            bgImg += `</svg>\")`;\n            target.style.backgroundImage = bgImg;\n            target.style.backgroundRepeat = 'no-repeat';\n        }\n\n        const square = this.squaresIndex['a1'];\n        addBackground(square.container, [\n            {\n                x: squareWidth / 2 - squareWidth / 10,\n                y: squareWidth,\n                t: 'a'\n            }, {\n                x: 0,\n                y: squareWidth / 2 + squareWidth / 10,\n                t: '1'\n            }\n        ]);\n        square.container.style.backgroundRepeat = 'no-repeat';\n        for (let i = 1; i < COLUMN_NUMBER; i++) {\n            const c = HORIZONTAL_CODE_LETTERS[i];\n            const square = this.squaresIndex[`${c}1`];\n            addBackground(square.container, [{\n                x: squareWidth / 2 - squareWidth / 10,\n                y: squareWidth,\n                t: c\n            }]);\n        }\n        for (let i = 1; i < COLUMN_NUMBER; i++) {\n            const square = this.squaresIndex[`a${i + 1}`];\n            addBackground(square.container, [{\n                x: 0,\n                y: squareWidth / 2 + squareWidth / 10,\n                t: i + 1\n            }]);\n        }\n\n        for (let i = 0; i < TD_GRAVEYARD_NUMBER; i++) {\n            const square = this.graveyard.get(i);\n            addBackground(square.container, [{\n                x: squareWidth / 2 - squareWidth / 10,\n                y: squareWidth,\n                t: i + 1\n            }]);\n        }\n    }\n    _squareWidth() {\n        const squareWidth = (this.options.width - (COLUMN_NUMBER - 1) * BORDER_WIDTH) / COLUMN_NUMBER;\n        return squareWidth;\n    }\n    renderKhmerChess() {\n        for (let i = 0; i < TD_GRAVEYARD_NUMBER; i++) {\n            const square = this.graveyard.get(i);\n            square.removePiece();\n        }\n        this.khmerChess.graveyard().forEach((p, i) => {\n            const square = this.graveyard.get(i);\n            square.setPiece(new Piece(p.type, p.color));\n        });\n        this.khmerChess.board().forEach((arr, i) => {\n            arr.forEach((p, j) => {\n                const square = this.squares[i * COLUMN_NUMBER + j];\n                square.removePiece();\n                if (p) {\n                    square.setPiece(new Piece(p.type, p.color));\n                }\n            });\n        });\n    }\n}\n\nmodule.exports = { KhmerChessBoard };","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst { KPGN } = require(\"./src/KPGN\");\nconst MoveHelper = require(\"./src/move-helper\");\nconst renHelper = require(\"./src/ren-helper\");\n\nclass KhmerChess {\n  moveHelper = new MoveHelper();\n  renInstance = renHelper.toRen();\n  kpgnInstance = new KPGN();\n  constructor(renStr) {\n    this.renInstance = renHelper.toRen(renStr);\n  }\n  load(renStr) {\n    this.renInstance = renHelper.toRen(renStr);\n  }\n  reset() {\n    this.renInstance = renHelper.toRen();\n  }\n  /**\n   * Generate all available moves of current turn\n   */\n  moves() {\n    // TODO:\n    return [];\n  }\n  /**\n   * Is King is attacked (អុក), return under attack color\n   * \n   * return color|null\n   */\n  in_check() {\n    // TODO:\n    return null;\n  }\n  /**\n   * Is win, return lost color\n   * \n   * return color|null\n   */\n  in_checkmate() {\n    // TODO:\n    return null;\n  }\n  /**\n   * Is stuck (អាប់), return stuck color\n   * \n   * return color|null\n   */\n  in_stalemate() {\n    // TODO:\n    return null;\n  }\n  /**\n   * Is draw (ស្មើ)\n   * \n   * return boolean\n   */\n  in_draw() {\n    // TODO:\n    return false;\n  }\n  /**\n   * Is draw by counting over (ស្មើ​ដោយ​ការ​រាប់), return counter color\n   * \n   * return color|null\n   */\n  in_draw_count() {\n    // TODO:\n    return null;\n  }\n  /**\n   * Is game over, win|stuck|win-timeout|draw-count-over|win-resign\n   */\n  game_over() {\n    // TODO:\n    return false;\n  }\n  validate_ren(renStr) {\n    try {\n      renHelper.toRen(renStr);\n      return { valid: true, error_number: 0, error: 'No errors.' };\n    } catch (error) {\n      return { valid: false, error_number: 1, error: error.message };\n    }\n  }\n  ren() {\n    return this.renInstance.toString();\n  }\n  board() {\n    return this.renInstance.board.toMultiArray();\n  }\n  graveyard() {\n    return this.renInstance.graveyard.pieces;\n  }\n  // Khmer Portable Game Notation <file-name>.kpgn.json\n  kpgn() {\n    return this.kpgnInstance.toJson();\n  }\n  load_kpgn(kpgnJosn, options) {\n    this.kpgnInstance = new KPGN(kpgnJosn);\n  }\n  ascii() {\n    const arr = this.renInstance.board.toMultiArray();\n    let str = `  ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓`;\n    const result = arr.reduce((s, subArr, i) => {\n      const rs = subArr.map((p) => ` ${p ? p.toString() : ' '} `).join('┃');\n      const bottom = i == arr.length - 1 ? '┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛' : '┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫';\n      s += `\n${8 - i} ┃${rs}┃\n  ${bottom}`;\n      return s;\n    }, str);\n    const gyTStr = this.renInstance.graveyard.pieces.map(() => '━━━').join('┳');\n    const gyStr = this.renInstance.graveyard.pieces.map((p) => ` ${p ? p.toString() : ' '} `).join('┃');\n    const gyBStr = this.renInstance.graveyard.pieces.map(() => '━━━').join('┻');\n    const graveyardStr = `  ┏${gyTStr}┓\n  ┃${gyStr}┃\n  ┗${gyBStr}┛`;\n    return `${result}\n    a   b   c   d   e   f   g   h\n${graveyardStr}`\n  }\n  turn() {\n    this.renInstance.turn;\n  }\n  /**\n   * Move piece regarding provided Move object\n   *\n   * @param Move move\n   */\n  move(move) {\n    // TODO:\n  }\n  /**\n   * Undo last move\n   * \n   * return {Piece, Move}|null\n   */\n  undo() {\n    // TODO:\n    return false;\n  }\n  /**\n   * Move all pieces to graveyard except kings\n   * -> 4k3/8/8/8/8/8/8/3K4 w ---- -- -.- bhgqghbffffffffFFFFFFFFBHGQGHB\n   */\n  clear() {\n    this.renInstance = renHelper.toRen('4k3/8/8/8/8/8/8/3K4 w ---- -- -.- bhgqghbffffffffFFFFFFFFBHGQGHB');\n  }\n  /**\n   * Move piece to square id location\n   *\n   * @param Piece piece\n   * @param String squareId\n   *\n   * return Piece|null\n   */\n  put(piece, squareId) {\n    // TODO: move piece to square id location\n    return null;\n  }\n  /**\n   * Get piece at square id location\n   *\n   * @param String squareId 'a1'\n   *\n   * return Piece|null\n   */\n  get(squareId) {\n    // TODO: get piece at square id location\n    return null;\n  }\n  /**\n   * Move piece to graveyard\n   *\n   * @param String squareId 'a1'\n   *\n   * return Piece|null\n   */\n  remove(squareId) {\n    // TODO: move piece to graveyard\n    return null;\n  }\n  history() {\n    return this.kpgnInstance.moves;\n  }\n  addUpdateRenderEventListener(listener) {\n    // TODO:\n  }\n  removeUpdateRenderEventListener(listener) {\n    // TODO:\n  }\n}\n\nmodule.exports = {\n  KhmerChess,\n};","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst { REN } = require(\"./REN\");\n\nclass Player {\n    name = '';\n    id = '';\n    constructor(id = '', name = '') {\n        this.id = id;\n        this.name = name;\n    }\n    toJson() {\n        return {\n            id: this.id,\n            name: this.name\n        };\n    }\n}\nclass Result {\n    win = 0;\n    draw = 0;\n    lost = 0;\n    constructor(win = 0, draw = 0, lost = 0) {\n        this.win = win;\n        this.draw = draw;\n        this.lost = lost;\n    }\n    toJson() {\n        return {\n            win: this.win,\n            draw: this.draw,\n            lost: this.lost\n        };\n    }\n}\nclass Move {\n    from = '';\n    to = '';\n    jump = false;\n    capture = ''\n    constructor(from = '', to = '', jump = false, capture = '') {\n        this.from = from;\n        this.to = to;\n        this.jump = jump;\n        this.capture = capture;\n    }\n    toJson() {\n        return {\n            from: this.from,\n            to: this.to,\n            jump: this.jump,\n            capture: this.capture\n        };\n    }\n}\nclass Timer {\n    totalSecond = 0;\n    currentWhite = 0;\n    currentBlack = 0;\n    constructor(totalSecond = 0, currentWhite = 0, currentBlack = 0) {\n        this.totalSecond = totalSecond;\n        this.currentWhite = currentWhite;\n        this.currentBlack = currentBlack;\n    }\n    toJson() {\n        return {\n            totalSecond: this.totalSecond,\n            currentWhite: this.currentWhite,\n            currentBlack: this.currentBlack\n        };\n    }\n}\n\nclass KPGN {\n    event = '';\n    date = '';\n    location = '';\n    players = {\n        white: new Player(),\n        black: new Player(),\n    }\n    result = {\n        last: {\n            whiteWin: false,\n            blackWin: false\n        },\n        white: new Result()\n    };\n    moves = [new Move()];\n    ren = new REN();\n    timer = new Timer();\n    constructor(kpgnJson) {\n    }\n    toJson() {\n        return {\n            event: this.event,\n            date: this.date,\n            location: this.location,\n            players: {\n                white: this.players.white.toJson(),\n                black: this.players.black.toJson(),\n            },\n            result: {\n                last: {\n                    whiteWin: this.result.last.whiteWin,\n                    blackWin: this.result.last.blackWin\n                },\n                white: this.result.white.toJson()\n            },\n            moves: this.moves.map((m) => m.toJson()),\n            ren: this.ren.toString(),\n            timer: this.timer.toJson()\n        }\n    }\n}\n\nmodule.exports = {\n    KPGN,\n    Player,\n    Result,\n    Move,\n    Timer\n};\n","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\nconst { PIECE_TYPE_BORK } = require(\"./board-helper\");\n/**\n * Raksa-Eng Notation\n * fen: <pieces on board> <turn w|b> <king&queen moved ----|SNsn> <king attack --|Kk> <countdown -.-|-.4> <pieces in graveyard>\n * e.g: bhgqkghb/8/ffffffff/8/8/FFFFFFFF/8/BHGKQGHB\n */\n\nconst boardHelper = require(\"./board-helper\");\nconst jsis = require(\"./jsis\");\n\n// bhgqkghb/8/ffffffff/8/8/FFFFFFFF/8/BHGKQGHB w ---- -- -.-\nconst DEFAULT_BOARD_STR = 'bhgqkghb/8/ffffffff/8/8/FFFFFFFF/8/BHGKQGHB';\nconst NOT_SET = '-';\nconst STRING_COUNT = 'B2F8G2H2K1Q1b2f8g2h2k1q1';\n\nclass Piece {\n    type = boardHelper.PIECE_TYPE_TREY;\n    color = boardHelper.PIECE_COLOR_WHITE;\n    constructor(t, c) {\n        if (jsis.isUndefined(c)) {\n            if (jsis.isUndefined(t)) {\n                t = boardHelper.toWhitePiece(boardHelper.PIECE_TYPE_TREY);\n            }\n            if (jsis.isUpperCase(t)) {\n                c = boardHelper.PIECE_COLOR_WHITE;\n            } else {\n                c = boardHelper.PIECE_COLOR_BLACK;\n            }\n            t = t.toLowerCase();\n        }\n        this.type = t;\n        this.color = c;\n    }\n    toOrigin() {\n        if (this.type == PIECE_TYPE_BORK) {\n            return new Piece(this.color, boardHelper.PIECE_TYPE_TREY);\n        }\n        return this;\n    }\n    toString() {\n        let c = this.type;\n        if (boardHelper.isWhite(this.color)) {\n            c = boardHelper.toWhitePiece(c);\n        }\n        return c;\n    }\n}\nclass Pos {\n    h = 'a';\n    v = 1;\n    x = 0;\n    y = 0;\n    p = new Piece();\n    constructor(p, h, v) {\n        this.p = p\n        if (jsis.isUndefined(v)) {\n            v = h.v;\n            h = h.h;\n        }\n        this.h = h;\n        this.v = v;\n        this.x = boardHelper.HORIZONTAL_CODE_LETTERS.indexOf(this.h);\n        this.y = this.v - 1;\n    }\n    toString() {\n        return `${this.toPString()}${this.h}${this.v}`;\n    }\n    toPString() {\n        return jsis.isNull(this.p) ? boardHelper.EMPTY_PIECE : this.p.toString();\n    }\n}\n/**\n * bhgqkghb/8/ffffffff/8/8/FFFFFFFF/8/BHGKQGHB => bhgqkghb/......../ffffffff/......../......../FFFFFFFF/......../BHGKQGHB\n */\nclass Board {\n    poses = Array.from({\n        length: boardHelper.getSubBoardNumber(),\n    }, (_, i) => {\n        const codeP = boardHelper.numToCodeP(i);\n        return new Pos(null, codeP);\n    });\n    constructor(boardStr) {\n        if (jsis.isUndefined(boardStr)) {\n            boardStr = DEFAULT_BOARD_STR;\n        }\n        const newBoardStr = this.extract(boardStr).replace(/\\//g, '');\n        if (newBoardStr.length < boardHelper.getSubBoardNumber() ||\n            !boardHelper.isValidPiecesString(newBoardStr)) {\n            throw new Error(`Invalid board string ${boardStr}`);\n        }\n        this.poses = newBoardStr.split('').map((c, i) => {\n            const codeP = boardHelper.numToCodeP(i);\n            return new Pos(c == boardHelper.EMPTY_PIECE ? null : new Piece(c), codeP);\n        });\n    }\n    toMultiArray() {\n        const arr = [[], [], [], [], [], [], [], []];\n        this.poses.forEach((pos) => {\n            arr[pos.y][pos.x] = pos.p;\n        });\n        return arr;\n    }\n    compress(str) {\n        const reg = new RegExp(`(\\\\${boardHelper.EMPTY_PIECE}+)`, 'g');\n        return str.replace(reg, ($1) => $1.length);\n    }\n    extract(str) {\n        return str.replace(/(\\d+)/g, ($1) => {\n            // $1 == 3 => '...', bh6 => 'bh......'\n            return Array.from({\n                length: $1\n            }, () => boardHelper.EMPTY_PIECE).join('');\n        });\n    }\n    toStringFull() {\n        const str = this.poses.map((pos, i) => {\n            const p = pos.toPString();\n            if (i && i % 8 == 0 && i != boardHelper.getSubBoardNumber()) {\n                return `${boardHelper.BOARD_SEPARATOR}${p}`;\n            }\n            return p;\n        }).join('');\n        return str;\n    }\n    toString() {\n        let str = this.toStringFull();\n        str = this.compress(str);\n        return str;\n    }\n}\nclass KqMoved {\n    whiteKing = false;\n    whiteQueen = false;\n    blackKing = false;\n    blackQueen = false;\n    constructor(kqMovedStr = '') {\n        const bh = boardHelper;\n        this.whiteKing = !!~kqMovedStr.indexOf(bh.toWhitePiece(bh.PIECE_TYPE_SDECH));\n        this.whiteQueen = !!~kqMovedStr.indexOf(bh.toWhitePiece(bh.PIECE_TYPE_NEANG));\n        this.blackKing = !!~kqMovedStr.indexOf(bh.PIECE_TYPE_SDECH);\n        this.blackQueen = !!~kqMovedStr.indexOf(bh.PIECE_TYPE_NEANG);\n    }\n    toString() {\n        let str = `${this.whiteKing ? boardHelper.toWhitePiece(boardHelper.PIECE_TYPE_SDECH) : NOT_SET}`;\n        str += `${this.whiteQueen ? boardHelper.toWhitePiece(boardHelper.PIECE_TYPE_NEANG) : NOT_SET}`;\n        str += `${this.blackKing ? boardHelper.PIECE_TYPE_SDECH : NOT_SET}`;\n        str += `${this.blackQueen ? boardHelper.PIECE_TYPE_NEANG : NOT_SET}`;\n        return str;\n    }\n}\nclass KAttacked {\n    whiteKing = false;\n    blackKing = false;\n    constructor(kAttackedStr = '') {\n        const bh = boardHelper;\n        this.whiteKing = !!~kAttackedStr.indexOf(bh.toWhitePiece(bh.PIECE_TYPE_SDECH));\n        this.blackKing = !!~kAttackedStr.indexOf(bh.PIECE_TYPE_SDECH);\n    }\n    toString() {\n        let str = `${this.whiteKing ? boardHelper.toWhitePiece(boardHelper.PIECE_TYPE_SDECH) : NOT_SET}`;\n        str += `${this.blackKing ? boardHelper.PIECE_TYPE_SDECH : NOT_SET}`;\n        return str;\n    }\n}\n// 23.-\nclass CountDown {\n    white = null;\n    black = null;\n    constructor(countdownStr = '') {\n        const newCountdownStr = countdownStr.split('.');\n        this.white = jsis.isStringNumber(newCountdownStr[0]) ? Number(newCountdownStr[0]) : null;\n        this.black = jsis.isStringNumber(newCountdownStr[1]) ? Number(newCountdownStr[1]) : null;\n        if (!jsis.isNull(this.white) && !jsis.isNull(this.white)) {\n            throw new Error(`Invalid countdown string ${countdownStr}`);\n        }\n    }\n    toString() {\n        let str = `${jsis.isNull(this.white) ? NOT_SET : this.white}`;\n        str += `.${jsis.isNull(this.black) ? NOT_SET : this.black}`;\n        return str;\n    }\n}\nclass Graveyard {\n    pieces = [];\n    constructor(graveyardStr = '') {\n        if (graveyardStr.length > 30 ||\n            !boardHelper.isValidPiecesString(graveyardStr, true)) {\n            throw new Error(`Invalid graveyard string ${graveyardStr}`);\n        }\n        this.pieces = graveyardStr.split('').map((c, i) => {\n            const p = new Piece(c);\n            if (p.type == boardHelper.PIECE_TYPE_SDECH) {\n                throw new Error(`King cannot die graveyard:${graveyardStr}`);\n            }\n            return p;\n        });\n    }\n    toString() {\n        return this.pieces.map((p) => {\n            return p.toString();\n        }).join('');\n    }\n}\nclass REN {\n    board = new Board();\n    turn = boardHelper.PIECE_COLOR_WHITE;\n    kqMoved = new KqMoved();\n    kAttacked = new KAttacked();\n    countdown = new CountDown();\n    graveyard = new Graveyard();\n    constructor(boardStr, turnStr = boardHelper.PIECE_COLOR_WHITE,\n        kqMovedStr, kAttackedStr, countdownStr, graveyardStr) {\n        this.board = new Board(boardStr);\n        this.turn = turnStr;\n        this.kqMoved = new KqMoved(kqMovedStr);\n        this.kqMoved = new KAttacked(kAttackedStr);\n        this.countdown = new CountDown(countdownStr);\n        this.graveyard = new Graveyard(graveyardStr);\n        const invalidPiecesString = this.isInvalidPieceCount();\n        if (invalidPiecesString) {\n            throw new Error(`Invalid piece string board:${boardStr}, graveyard:${graveyardStr}, count:${invalidPiecesString}`);\n        }\n    }\n    isInvalidPieceCount() {\n        const pieces = this.board.poses.map((pos) => {\n            return pos.p;\n        }).filter((p) => {\n            return !jsis.isNull(p);\n        }).concat(this.graveyard.pieces).map((p) => {\n            return p.toOrigin();\n        });\n        const piecesCount = pieces.reduce((obj, p) => {\n            obj[p.toString()] = obj[p.toString()] || 0;\n            obj[p.toString()]++;\n            return obj;\n        }, {});\n        const str = Object.keys(piecesCount).map((k) => `${k}${piecesCount[k]}`).sort().join('');\n        if (str == STRING_COUNT) {\n            return false;\n        }\n        return str;\n    }\n    toString() {\n        let str = this.board.toString();\n        str += ` ${this.turn.toString()}`;\n        str += ` ${this.kqMoved.toString()}`;\n        str += ` ${this.kAttacked.toString()}`;\n        str += ` ${this.countdown.toString()}`;\n        str += ` ${this.graveyard.toString()}`;\n        return str;\n    }\n}\n\nmodule.exports = {\n    Piece,\n    Pos,\n    Board,\n    KqMoved,\n    CountDown,\n    Graveyard,\n    REN,\n    DEFAULT_BOARD_STR\n};","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst jsis = require(\"./jsis\");\nconst genMask = require(\"./gen-mask\");\n\nclass Rectangle {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    isContainsPoint(point) {\n        const { x, y } = point;\n        const isContainsPoint = this.x <= x &&\n            (this.x + this.width) >= x &&\n            this.y <= y &&\n            (this.y + this.height) >= y;\n        return isContainsPoint;\n    }\n}\nlet allPiecesString = null;\nconst boardHelper = {\n    HORIZONTAL_CODE_LETTERS: \"abcdefgh\",\n\n    PIECE_COLOR_WHITE: \"w\",\n    PIECE_COLOR_BLACK: \"b\",\n\n    PIECE_TYPE_TOUK: \"b\", // Boat\n    PIECE_TYPE_SES: \"h\", // Horse\n    PIECE_TYPE_KOL: \"g\", // General\n    PIECE_TYPE_SDECH: \"k\", // King\n    PIECE_TYPE_NEANG: \"q\", // Queen\n    PIECE_TYPE_TREY: \"f\", // Fish\n    PIECE_TYPE_BORK: \"t\", // Transform fish\n    EMPTY_PIECE: \".\",\n    BOARD_SEPARATOR: \"/\",\n\n    ROW_NUMBER: 8,\n    ROW_FIRST_INDEX: 0,\n    ROW_LAST_INDEX: 7,\n\n    mask: null,\n\n    isValidPiecesString(str, onlyPiece) {\n        if (jsis.isNull(allPiecesString)) {\n            allPiecesString = [\n                this.PIECE_TYPE_TOUK,\n                this.PIECE_TYPE_SES,\n                this.PIECE_TYPE_KOL,\n                this.PIECE_TYPE_SDECH,\n                this.PIECE_TYPE_NEANG,\n                this.PIECE_TYPE_TREY,\n                this.PIECE_TYPE_BORK,\n                this.toWhitePiece(this.PIECE_TYPE_TOUK),\n                this.toWhitePiece(this.PIECE_TYPE_SES),\n                this.toWhitePiece(this.PIECE_TYPE_KOL),\n                this.toWhitePiece(this.PIECE_TYPE_SDECH),\n                this.toWhitePiece(this.PIECE_TYPE_NEANG),\n                this.toWhitePiece(this.PIECE_TYPE_TREY),\n                this.toWhitePiece(this.PIECE_TYPE_BORK),\n                this.EMPTY_PIECE,\n                this.BOARD_SEPARATOR,\n            ]\n        }\n        const ruler = onlyPiece ? allPiecesString.filter((c) => {\n            return !~[this.EMPTY_PIECE, this.BOARD_SEPARATOR].indexOf(c);\n        }) : allPiecesString;\n        return !str.split('').some((c) => {\n            return !~ruler.indexOf(c);\n        });\n    },\n\n    toWhitePiece: (str) => str.toUpperCase(),\n\n    isValidPosXY(point, y) {\n        if (jsis.isUndefined(point)) {\n            return false;\n        }\n        if (!jsis.isUndefined(y)) {\n            point = this.p(point, y);\n        }\n        return !jsis.isUndefined(point.x) && !jsis.isUndefined(point.y) &&\n            this.rect(0, 0, this.ROW_LAST_INDEX, this.ROW_LAST_INDEX).isContainsPoint(point);\n    },\n    isValidPiece: (piece) => piece != boardHelper.EMPTY_PIECE,\n    isWhite: (c) => c === boardHelper.PIECE_COLOR_WHITE,\n    isBlack: (c) => c === boardHelper.PIECE_COLOR_BLACK,\n    codeP: (h, v) => ({ h, v }),\n    p: (x, y) => ({ x, y }),\n    res: (width, height) => ({ width, height }),\n    rect: (x, y, width, height) => new Rectangle(x, y, width, height),\n    getSubBoardNumber: () => boardHelper.ROW_NUMBER * boardHelper.ROW_NUMBER,\n    nerdPosToXY(p) {\n        if (jsis.isNumber(p.x) && jsis.isNumber(p.y)) {\n            return p;\n        }\n        if (jsis.isNumber(p)) {\n            const x = p % this.ROW_NUMBER;\n            const y = Math.floor(p / this.ROW_NUMBER);\n            return this.p(x, y);\n        }\n        return null;\n    },\n    nerdXyToPos(point, y) {\n        if (!jsis.isUndefined(y)) {\n            return point + y * this.ROW_NUMBER;\n        }\n        return point.x + point.y * this.ROW_NUMBER;\n    },\n    isPosInBoard(posInBoard) {\n        return jsis.isNumber(posInBoard) &&\n            posInBoard >= 0 && posInBoard <= this.getSubBoardNumber() - 1;\n    },\n    getCharPieceFromString(piecesString, posInBoard) {\n        if (this.isPosInBoard(posInBoard) && piecesString.length === this.getSubBoardNumber()) {\n            return piecesString.charAt(posInBoard);\n        }\n        return this.EMPTY_PIECE;\n    },\n    getPieceProperties(code) {\n        const h = this.pieceHash[code];\n        return {\n            color: h ? h[0] : this.PIECE_COLOR_EMPTY,\n            type: h ? h[1] : this.EMPTY_PIECE,\n        };\n    },\n    getCharPieceInPos(posInBoard, piecesString) {\n        return this.getCharPieceFromString(piecesString, posInBoard);\n    },\n    getPieceInPos(posInBoard, y, piecesString) {\n        if (jsis.isNumber(y)) {\n            posInBoard = this.nerdXyToPos(posInBoard, y);\n        } else if (jsis.isString(y)) {\n            piecesString = y;\n        }\n        const piece = this.getCharPieceInPos(posInBoard, piecesString);\n        let color = this.PIECE_COLOR_WHITE, type = this.PIECE_TYPE_TREY;\n        if (this.isValidPiece(piece)) {\n            const pr = this.getPieceProperties(piece);\n            color = pr.color;\n            type = pr.type;\n        }\n        return {\n            isValidPiece: this.isValidPiece(piece),\n            color: color,\n            type: type,\n        };\n    },\n    convertMask(p, pos, color) {\n        const sign = this.isWhite(color) ? 1 : -1;\n        pos = this.nerdPosToXY(pos);\n        p.x = p.x * sign + pos.x;\n        p.y = p.y * sign + pos.y;\n        return this.isValidPosXY(p) ? this.nerdXyToPos(p) : null;\n    },\n    getPieceCanMovePoses(type, pos, color) {\n        const poses = [];\n        this.mask = this.mask || genMask(this);\n        this.mask[type].forEach((_pos) => {\n            const p = this.convertMask(this.p(_pos[0], _pos[1]), pos, color);\n            if (!jsis.isNull(p)) {\n                poses.push(p);\n            }\n        });\n        return poses;\n    },\n    getPieceCanMovePosesValid(type, pos, color, piecesString) {\n        const _poses = this.getPieceCanMovePoses(type, pos, color);\n        let p, distPiece;\n        const poses = [];\n        const n = _poses.length, thisPos = this.nerdPosToXY(pos);\n        for (let i = 0; i < n; i++) {\n            p = this.nerdPosToXY(_poses[i]);\n            distPiece = this.getPieceInPos(p.x, p.y, piecesString);\n            if (distPiece.isValidPiece) {\n                if (color === distPiece.color ||\n                    type === this.PIECE_TYPE_TREY && p.x === thisPos.x) {\n                    p = null;\n                }\n            } else {\n                if (type === this.PIECE_TYPE_TREY && p.x != thisPos.x) {\n                    p = null;\n                }\n            }\n            if (!jsis.isNull(p) && type === this.PIECE_TYPE_TOUK) {\n                const _x = thisPos.x,\n                    _y = thisPos.y;\n                let _n, _s;\n                if (p.x === thisPos.x) {\n                    _n = Math.abs(p.y - thisPos.y);\n                    _s = thisPos.y < p.y ? 1 : -1;\n                    while (--_n > 0) {\n                        if (this.getPieceInPos(_x, _y + _s * _n, piecesString).isValidPiece) {\n                            p = null;\n                            break;\n                        }\n                    }\n                } else if (p.y === thisPos.y) {\n                    _n = Math.abs(p.x - thisPos.x);\n                    _s = thisPos.x < p.x ? 1 : -1;\n                    while (--_n > 0) {\n                        if (this.getPieceInPos(_x + _s * _n, _y, piecesString).isValidPiece) {\n                            p = null;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!jsis.isNull(p)) {\n                poses.push(_poses[i]);\n            }\n        }\n        return poses;\n    },\n    replacePiecesString(piecesString, c, p) {\n        return piecesString.substring(0, p) + c + piecesString.substring(p + 1);\n    },\n    injectPiece(piecesString, pos1, pos2) {\n        const c = piecesString.charAt(pos1);\n        if (!this.isCharPiecesInBoard(c, piecesString)) {\n            return null;\n        }\n        piecesString = this.replacePiecesString(piecesString, this.EMPTY_PIECE, pos1);\n        piecesString = this.replacePiecesString(piecesString, c, pos2);\n        return piecesString;\n    },\n    getPieceCode(color, type) {\n        const val = color + type;\n        for (const k in this.pieceHash) {\n            if (val === this.pieceHash[k]) {\n                return k;\n            }\n        }\n        return this.EMPTY_PIECE;\n    },\n    getKingWillInDanger(color, piecesString) {\n        const kingPos = piecesString.indexOf(this.getPieceCode(color, this.PIECE_TYPE_SDECH));\n        const n = piecesString.length;\n        let _poses, p, j;\n        for (let i = 0; i < n; i++) {\n            p = this.getPieceInPos(i, piecesString);\n            if (p.isValidPiece && p.color != color && p.type === this.PIECE_TYPE_TOUK) {\n                _poses = this.getPieceCanMovePoses(p.type, i, p.color, piecesString);\n                for (j = 0; j < _poses.length; j++) {\n                    if (_poses[j] === kingPos) {\n                        return [this.numToCode(i), this.numToCode(kingPos)];\n                    }\n                }\n            }\n        }\n        return null;\n    },\n    getKingInDanger(color, piecesString) {\n        const kingPos = piecesString.indexOf(this.getPieceCode(color, this.PIECE_TYPE_SDECH));\n        const n = piecesString.length;\n        let _poses, p, j;\n        for (let i = 0; i < n; i++) {\n            p = this.getPieceInPos(i, piecesString);\n            if (p.isValidPiece && p.color != color) {\n                _poses = this.getPieceCanMovePosesValid(p.type, i, p.color, piecesString);\n                for (j = 0; j < _poses.length; j++) {\n                    if (_poses[j] === kingPos) {\n                        return [this.numToCode(i), this.numToCode(kingPos)];\n                    }\n                }\n            }\n        }\n        return null;\n    },\n    numToCodeP(number) {\n        return this.codeP(this.HORIZONTAL_CODE_LETTERS[number % 8], ((number / 8 | 0) + 1));\n    },\n    numToCode(number) {\n        const codeP = this.numToCodeP(number);\n        return `${codeP.h}${codeP.v}`;\n    },\n    generatePosesCanMove(type, pos, color, piecesString, isHaveMoved) {\n        let p;\n        const _poses = this.getPieceCanMovePosesValid(type, pos, color, piecesString);\n        const isHaveCaptured = this.isHaveCaptured(piecesString);\n        if (type === this.PIECE_TYPE_SDECH) {\n            if (!isHaveCaptured && !isHaveMoved) {\n                p = this.convertMask(this.p(2, 1), pos, color);\n                if (p && !this.getPieceInPos(p, piecesString).isValidPiece) {\n                    _poses.push(p);\n                }\n                p = this.convertMask(this.p(-2, 1), pos, color);\n                if (p && !this.getPieceInPos(p, piecesString).isValidPiece) {\n                    _poses.push(p);\n                }\n            }\n        } else if (type === this.PIECE_TYPE_NEANG) {\n            if (!isHaveCaptured && !isHaveMoved) {\n                p = this.convertMask(this.p(-0, 2), pos, color);\n                if (p && !this.getPieceInPos(p, piecesString).isValidPiece) {\n                    _poses.push(p);\n                }\n            }\n        }\n        const n = _poses.length;\n        const poses = [];\n        let str;\n        for (let i = 0; i < n; i++) {\n            str = this.injectPiece(piecesString, pos, _poses[i]);\n            if (jsis.isNull(this.getKingInDanger(color, str))) {\n                poses.push(this.numToCode(_poses[i]));\n            }\n        }\n        return poses;\n    },\n    isCharPiecesInBoard(c, piecesString) {\n        return !!~piecesString.indexOf(c);\n    },\n    getPiecesInBoard(piecesString) {\n        return piecesString.split(\"\").filter((c) => {\n            return this.isValidPiece(c);\n        });\n    },\n    isHaveCaptured(piecesString) {\n        return this.getPiecesInBoard(piecesString).length < this.ROW_NUMBER * 4;\n    },\n    filterPieceInBoard(piecesString) {\n        const whitePieces = [];\n        const blackPieces = [];\n        let c, prop, piece;\n        for (let i = 0; i < piecesString.length; i++) {\n            c = piecesString.charAt(i);\n            if (this.isValidPiece(c)) {\n                prop = this.getPieceProperties(c);\n                piece = {\n                    color: prop.color,\n                    type: prop.type,\n                    index: i,\n                    code: this.numToCode(i),\n                };\n                if (this.isWhite(piece.color)) {\n                    whitePieces.push(piece);\n                } else {\n                    blackPieces.push(piece);\n                }\n            }\n        }\n        return {\n            whitePieces: whitePieces,\n            blackPieces: blackPieces,\n        };\n    },\n    extractPiecesToArray(piecesString) {\n        piecesString = piecesString.split(\"\");\n        const pieceAll = {\n            [this.PIECE_COLOR_BLACK]: [],\n            [this.PIECE_COLOR_WHITE]: [],\n        };\n        piecesString.forEach((e) => {\n            if (e === this.EMPTY_PIECE) {\n                return;\n            }\n            const prop = this.getPieceProperties(e);\n            pieceAll[prop.color].push(prop.type);\n        });\n        return pieceAll;\n    },\n    isStateCount(c, piecesString) {\n        const allPieces = this.extractPiecesToArray(piecesString);\n        return allPieces[c].length === 1;\n    },\n    checkCountable(color, piecesString) {\n        const pieceAll = this.extractPiecesToArray(piecesString);\n        const weaker = pieceAll[color];\n        const stronger = pieceAll[this.oppositeColor(color)];\n        return weaker.length <= 2 && stronger.length >= 2;\n    },\n    checkCount(color, piecesString, force) {\n        const countChar = (str, c) => {\n            return str.join(\"\").split(c).length - 1;\n        };\n        const charExist = (str, c) => {\n            return !!~str.indexOf(c);\n        };\n\n        const pieceAll = this.extractPiecesToArray(piecesString);\n        const weaker = pieceAll[color];\n        const stronger = pieceAll[this.oppositeColor(color)];\n        if (weaker.length === 1 && stronger.length > 1) {\n            if (!charExist(stronger, this.PIECE_TYPE_TREY)) {\n                let count = 64;\n                const toukCount = countChar(stronger, this.PIECE_TYPE_TOUK);\n                if (toukCount) {\n                    count = toukCount > 1 ? 8 : 16;\n                } else if (countChar(stronger, this.PIECE_TYPE_KOL) > 1) {\n                    count = 22;\n                } else if (countChar(stronger, this.PIECE_TYPE_SES) > 1) {\n                    count = 32;\n                } else if (countChar(stronger, this.PIECE_TYPE_KOL)) {\n                    count = 44;\n                }\n                return [stronger.length + 1, count];\n            }\n            return [0, 64];\n        } else if (force && this.checkCountable(color, piecesString)) {\n            return [0, 64];\n        }\n        return null;\n    },\n\n    getHashKey(val) {\n        const keys = Object.keys(this.pieceHash).filter((key) => {\n            return this.pieceHash[key] === val;\n        });\n        return keys.length === 1 ? keys[0] : this.EMPTY_PIECE;\n    },\n    getPieceKeyByProp(prop) {\n        let prop1;\n        for (const key in this.pieceHash) {\n            prop1 = this.getPieceProperties(key);\n            if (prop.color === prop1.color && prop.type === prop1.type) {\n                return key;\n            }\n        }\n        return this.EMPTY_PIECE;\n    },\n    getPieceKeyByName(name) {\n        return this.getPieceKeyByProp({\n            color: name[0],\n            type: name[1],\n        });\n    },\n    oppositeColor(color) {\n        return this.isWhite(color) ? this.PIECE_COLOR_BLACK : this.PIECE_COLOR_WHITE;\n    },\n};\nboardHelper.pieceHash = {\n    \"a\": boardHelper.PIECE_COLOR_WHITE + boardHelper.PIECE_TYPE_TOUK,\n    \"b\": boardHelper.PIECE_COLOR_WHITE + boardHelper.PIECE_TYPE_SES,\n    \"c\": boardHelper.PIECE_COLOR_WHITE + boardHelper.PIECE_TYPE_KOL,\n    \"d\": boardHelper.PIECE_COLOR_WHITE + boardHelper.PIECE_TYPE_SDECH,\n    \"e\": boardHelper.PIECE_COLOR_WHITE + boardHelper.PIECE_TYPE_NEANG,\n    \"f\": boardHelper.PIECE_COLOR_WHITE + boardHelper.PIECE_TYPE_TREY,\n    \"g\": boardHelper.PIECE_COLOR_WHITE + boardHelper.PIECE_TYPE_BORK,\n    \"h\": boardHelper.PIECE_COLOR_BLACK + boardHelper.PIECE_TYPE_TOUK,\n    \"i\": boardHelper.PIECE_COLOR_BLACK + boardHelper.PIECE_TYPE_SES,\n    \"j\": boardHelper.PIECE_COLOR_BLACK + boardHelper.PIECE_TYPE_KOL,\n    \"k\": boardHelper.PIECE_COLOR_BLACK + boardHelper.PIECE_TYPE_SDECH,\n    \"l\": boardHelper.PIECE_COLOR_BLACK + boardHelper.PIECE_TYPE_NEANG,\n    \"m\": boardHelper.PIECE_COLOR_BLACK + boardHelper.PIECE_TYPE_TREY,\n    \"n\": boardHelper.PIECE_COLOR_BLACK + boardHelper.PIECE_TYPE_BORK,\n};\n\nmodule.exports = boardHelper;","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst boardHelper = require(\"./board-helper\");\n\nfunction genMask() {\n    const mask = {};\n    mask[boardHelper.PIECE_TYPE_TOUK] = [\n        [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8],\n        [0, -1], [0, -2], [0, -3], [0, -4], [0, -5], [0, -6], [0, -7], [0, -8],\n        [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0],\n        [-1, 0], [-2, 0], [-3, 0], [-4, 0], [-5, 0], [-6, 0], [-7, 0], [-8, 0],\n    ];\n    mask[boardHelper.PIECE_TYPE_SES] = [\n        [-1, -2],\n        [1, -2],\n        [-2, -1],\n        [2, -1],\n        [-1, 2],\n        [1, 2],\n        [-2, 1],\n        [2, 1],\n    ];\n    mask[boardHelper.PIECE_TYPE_NEANG] = [\n        [-1, -1],\n        [1, -1],\n        [-1, 1],\n        [1, 1],\n    ];\n    mask[boardHelper.PIECE_TYPE_KOL] = mask[boardHelper.PIECE_TYPE_NEANG].concat([\n        [0, 1],\n    ]);\n    mask[boardHelper.PIECE_TYPE_SDECH] = mask[boardHelper.PIECE_TYPE_KOL].concat([\n        [0, -1],\n        [1, 0],\n        [-1, 0],\n    ]);\n    mask[boardHelper.PIECE_TYPE_TREY] = [\n        [0, 1],\n        [-1, 1],\n        [1, 1],\n    ];\n    mask[boardHelper.PIECE_TYPE_BORK] = mask[boardHelper.PIECE_TYPE_NEANG];\n    return mask;\n}\n\nmodule.exports = genMask;","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst jsis = {\n    isValid(v) {\n        return !this.isNull(v) && !this.isUndefined(v);\n    },\n    isNull(v) {\n        return v === null;\n    },\n    isUndefined(v) {\n        return typeof v === \"undefined\";\n    },\n    isString(str) {\n        return this.isValid(str) && typeof str === \"string\";\n    },\n    isNotEmpty(str) {\n        return this.isValidString(str) && str != \"\";\n    },\n    isNumber(n) {\n        return this.isValid(n) && typeof n === \"number\";\n    },\n    isStringNumber(n) {\n        return this.isString(n) && n != \"\" && !isNaN(Number(n));\n    },\n    isArray(arr) {\n        return this.isValid(arr) && arr instanceof Array;\n    },\n    isFunction(f) {\n        return this.isValid(f) && typeof f === \"function\";\n    },\n    isObject(o) {\n        return this.isValid(o) && o instanceof Object;\n    },\n    isBoolean(b) {\n        return this.isValid(b) && typeof b === \"boolean\";\n    },\n    isTrue(b) {\n        return this.isValidBoolean(b) && b;\n    },\n    isFalse(b) {\n        return this.isValidBoolean(b) && !b;\n    },\n    isPoint(p) {\n        const isPoint = this.isValid(p) &&\n            this.isValidObject(p) &&\n            this.isValidNumber(p.x) &&\n            this.isValidNumber(p.y);\n        return isPoint;\n    },\n    isSize(size) {\n        const isSize = this.isValid(size) &&\n            this.isValidObject(size) &&\n            this.isValidNumber(size.width) &&\n            this.isValidNumber(size.height);\n        return isSize;\n    },\n    isOdd(n) {\n        return !!(n % 2);\n    },\n    isEven(n) {\n        return !this.isOdd(n);\n    },\n    isUpperCase(str) {\n        return str === str.toUpperCase();\n    }\n};\n\nmodule.exports = jsis;","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst boardHelper = require(\"./board-helper\");\n\nclass MoveHelper {\n    init(option) {\n        this.piecesString = option.piecesString;\n        this.currentTurn = option.currentTurn;\n        this.isNeangMoved = option.isNeangMoved;\n        this.isSdechMoved = option.isSdechMoved;\n\n        this.genCanMove = option.genCanMove;\n        this.genCanMoveForAnother = option.genCanMoveForAnother;\n\n        this.whiteMoves = [];\n        this.blackMoves = [];\n\n        this.whiteKingInDanger = null;\n        this.whiteKingWillInDanger = null;\n        this.blackKingInDanger = null;\n        this.blackKingWillInDanger = null;\n\n        this.winColor = null;\n        this.stuckColor = null;\n    }\n\n    generateCanMoves() {\n        const filter = boardHelper.filterPieceInBoard(this.piecesString);\n        this.whiteMoves = filter.whitePieces;\n        this.blackMoves = filter.blackPieces;\n        const genMoves = (pieces) => {\n            for (let i = 0; i < pieces.length; i++) {\n                const type = pieces[i].type;\n                const isSdech = type === boardHelper.PIECE_TYPE_SDECH;\n                const isNeang = type === boardHelper.PIECE_TYPE_NEANG;\n                let isHaveMoved = this.isSdechMoved;\n                if (!isSdech) {\n                    isHaveMoved = isNeang ? this.isNeangMoved : false;\n                }\n                const canMoveIndexes = boardHelper.generatePosesCanMove(\n                    type,\n                    pieces[i].index,\n                    pieces[i].color,\n                    this.piecesString,\n                    isHaveMoved,\n                );\n                pieces[i].canMoveIndexes = canMoveIndexes;\n            }\n        };\n        genMoves(this.whiteMoves);\n        genMoves(this.blackMoves);\n    }\n\n    cleanPieceNoMove() {\n        const cleanMoves = (pieces) => {\n            let isTrue = true;\n            while (isTrue) {\n                isTrue = false;\n                for (let i = 0; i < pieces.length; i++) {\n                    const piece = pieces[i];\n                    if (!piece.canMoveIndexes || !piece.canMoveIndexes.length) {\n                        pieces.splice(i, 1);\n                        isTrue = true;\n                        break;\n                    }\n                }\n            }\n        };\n        cleanMoves(this.whiteMoves);\n        cleanMoves(this.blackMoves);\n    }\n\n    checkIfKingInDanger() {\n        this.whiteKingInDanger = boardHelper.getKingInDanger(\n            boardHelper.PIECE_COLOR_WHITE,\n            this.piecesString,\n        );\n        this.whiteKingWillInDanger = boardHelper.getKingWillInDanger(\n            boardHelper.PIECE_COLOR_WHITE,\n            this.piecesString,\n        );\n        this.blackKingInDanger = boardHelper.getKingInDanger(\n            boardHelper.PIECE_COLOR_BLACK,\n            this.piecesString,\n        );\n        this.blackKingWillInDanger = boardHelper.getKingWillInDanger(\n            boardHelper.PIECE_COLOR_BLACK,\n            this.piecesString,\n        );\n    }\n\n    genWinLost() {\n        if (this.whiteKingInDanger && !this.whiteMoves.length) {\n            this.winColor = boardHelper.PIECE_COLOR_BLACK;\n        } else if (this.blackKingInDanger && !this.blackMoves.length) {\n            this.winColor = boardHelper.PIECE_COLOR_WHITE;\n        }\n    }\n\n    getStuck() {\n        if (this.winColor) {\n            return;\n        }\n        if (boardHelper.isWhite(this.currentTurn) && !this.whiteMoves.length) {\n            this.stuckColor = boardHelper.PIECE_COLOR_WHITE;\n        } else if (boardHelper.isBlack(this.currentTurn) && !this.blackMoves.length) {\n            this.stuckColor = boardHelper.PIECE_COLOR_BLACK;\n        }\n    }\n\n    calcCanMove(option) {\n        this.init(option);\n        this.generateCanMoves();\n        this.cleanPieceNoMove();\n        let moves = [];\n        if (this.genCanMove) {\n            moves = boardHelper.isWhite(this.currentTurn) ? this.whiteMoves : this.blackMoves;\n        }\n        let anotherMoves = [];\n        if (this.genCanMoveForAnother) {\n            anotherMoves = boardHelper.isBlack(this.currentTurn) ? this.whiteMoves : this.blackMoves;\n        }\n        return {\n            moves,\n            anotherMoves,\n        };\n    }\n    calcState(option) {\n        this.init(option);\n        this.generateCanMoves();\n        this.cleanPieceNoMove();\n\n        this.checkIfKingInDanger();\n        this.genWinLost();\n        this.getStuck();\n        return {\n            blackKingInDanger: this.blackKingInDanger,\n            whiteKingInDanger: this.whiteKingInDanger,\n            blackKingWillInDanger: this.blackKingWillInDanger,\n            whiteKingWillInDanger: this.whiteKingWillInDanger,\n            winColor: this.winColor,\n            stuckColor: this.stuckColor,\n            blackCountable: boardHelper.checkCountable(\n                boardHelper.PIECE_COLOR_BLACK,\n                this.piecesString,\n            ),\n            whiteCountable: boardHelper.checkCountable(\n                boardHelper.PIECE_COLOR_WHITE,\n                this.piecesString,\n            ),\n        };\n    }\n    calCount(option) {\n        return {\n            countingBlack: boardHelper.checkCount(\n                boardHelper.PIECE_COLOR_BLACK,\n                option.piecesString, option.force,\n            ),\n            countingWhite: boardHelper.checkCount(\n                boardHelper.PIECE_COLOR_WHITE,\n                option.piecesString, option.force,\n            ),\n        };\n    }\n}\n\nmodule.exports = MoveHelper;","/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst { REN, DEFAULT_BOARD_STR } = require('./REN');\nconst jsis = require('./jsis');\n\nconst renHelper = {\n    toRen(fen) {\n        if (jsis.isUndefined(fen)) {\n            fen = DEFAULT_BOARD_STR;\n        }\n        const fenArr = fen.split(' ');\n        return new REN(fenArr[0], fenArr[1], fenArr[2], fenArr[3], fenArr[4], fenArr[5]);\n    }\n};\n\nmodule.exports = renHelper;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(497);\n"],"sourceRoot":""}