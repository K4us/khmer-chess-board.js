"use strict";

var _KhmerChessBoard = _interopRequireDefault(require("./KhmerChessBoard"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

describe("KhmerChessBoard", function () {
  var kcb = null;
  beforeAll(function () {
    var container = document.createElement("div");
    document.body.appendChild(container);
    kcb = new _KhmerChessBoard["default"]();
    kcb.setOptions({
      width: 600,
      container: container
    });
    kcb.start();
  });
  it('should be function', function () {
    expect(_typeof(_KhmerChessBoard["default"])).toEqual('function');
  });
  it('should has class', function () {
    expect(_typeof(kcb.options.uniqueClassName)).toEqual('string');
  });
  it('should move', function () {
    var cell = kcb.boardManager.pieceInTurnCells[0];
    expect(cell.isCanSelect).toBeTrue();
    kcb.boardManager.selectCell(cell);
    expect(cell.isSelected).toBeTrue();
    var point = cell.canMovePoints[0];
    var targetCell = kcb.boardManager.get(point.index);
    spyOn(kcb, 'move');
    kcb.boardManager.selectCell(targetCell);
    expect(kcb.move).toHaveBeenCalledWith(cell.point.index, targetCell.point.index);
  });
});
/*
 * Copyright (c) 2021, K4us
 * Author: Raksa Eng <eng.raksa@gmail.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 **/
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9LaG1lckNoZXNzQm9hcmQuU3BlYy50cyJdLCJuYW1lcyI6WyJkZXNjcmliZSIsImtjYiIsImJlZm9yZUFsbCIsImNvbnRhaW5lciIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImJvZHkiLCJhcHBlbmRDaGlsZCIsIktobWVyQ2hlc3NCb2FyZCIsInNldE9wdGlvbnMiLCJ3aWR0aCIsInN0YXJ0IiwiaXQiLCJleHBlY3QiLCJ0b0VxdWFsIiwib3B0aW9ucyIsInVuaXF1ZUNsYXNzTmFtZSIsImNlbGwiLCJib2FyZE1hbmFnZXIiLCJwaWVjZUluVHVybkNlbGxzIiwiaXNDYW5TZWxlY3QiLCJ0b0JlVHJ1ZSIsInNlbGVjdENlbGwiLCJpc1NlbGVjdGVkIiwicG9pbnQiLCJjYW5Nb3ZlUG9pbnRzIiwidGFyZ2V0Q2VsbCIsImdldCIsImluZGV4Iiwic3B5T24iLCJtb3ZlIiwidG9IYXZlQmVlbkNhbGxlZFdpdGgiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQUVBQSxRQUFRLENBQUMsaUJBQUQsRUFBb0IsWUFBWTtBQUNwQyxNQUFJQyxHQUFvQixHQUFHLElBQTNCO0FBRUFDLEVBQUFBLFNBQVMsQ0FBQyxZQUFNO0FBQ1osUUFBTUMsU0FBUyxHQUFHQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBbEI7QUFDQUQsSUFBQUEsUUFBUSxDQUFDRSxJQUFULENBQWNDLFdBQWQsQ0FBMEJKLFNBQTFCO0FBQ0FGLElBQUFBLEdBQUcsR0FBRyxJQUFJTywyQkFBSixFQUFOO0FBQ0FQLElBQUFBLEdBQUcsQ0FBQ1EsVUFBSixDQUFlO0FBQ1hDLE1BQUFBLEtBQUssRUFBRSxHQURJO0FBRVhQLE1BQUFBLFNBQVMsRUFBVEE7QUFGVyxLQUFmO0FBSUFGLElBQUFBLEdBQUcsQ0FBQ1UsS0FBSjtBQUNILEdBVFEsQ0FBVDtBQVdBQyxFQUFBQSxFQUFFLENBQUMsb0JBQUQsRUFBdUIsWUFBTTtBQUMzQkMsSUFBQUEsTUFBTSxTQUFRTCwyQkFBUixFQUFOLENBQStCTSxPQUEvQixDQUF1QyxVQUF2QztBQUNILEdBRkMsQ0FBRjtBQUlBRixFQUFBQSxFQUFFLENBQUMsa0JBQUQsRUFBcUIsWUFBTTtBQUN6QkMsSUFBQUEsTUFBTSxTQUFRWixHQUFHLENBQUNjLE9BQUosQ0FBWUMsZUFBcEIsRUFBTixDQUEyQ0YsT0FBM0MsQ0FBbUQsUUFBbkQ7QUFDSCxHQUZDLENBQUY7QUFJQUYsRUFBQUEsRUFBRSxDQUFDLGFBQUQsRUFBZ0IsWUFBTTtBQUNwQixRQUFNSyxJQUFJLEdBQUdoQixHQUFHLENBQUNpQixZQUFKLENBQWlCQyxnQkFBakIsQ0FBa0MsQ0FBbEMsQ0FBYjtBQUNBTixJQUFBQSxNQUFNLENBQUNJLElBQUksQ0FBQ0csV0FBTixDQUFOLENBQXlCQyxRQUF6QjtBQUNBcEIsSUFBQUEsR0FBRyxDQUFDaUIsWUFBSixDQUFpQkksVUFBakIsQ0FBNEJMLElBQTVCO0FBQ0FKLElBQUFBLE1BQU0sQ0FBQ0ksSUFBSSxDQUFDTSxVQUFOLENBQU4sQ0FBd0JGLFFBQXhCO0FBRUEsUUFBTUcsS0FBSyxHQUFHUCxJQUFJLENBQUNRLGFBQUwsQ0FBbUIsQ0FBbkIsQ0FBZDtBQUVBLFFBQU1DLFVBQVUsR0FBR3pCLEdBQUcsQ0FBQ2lCLFlBQUosQ0FBaUJTLEdBQWpCLENBQXFCSCxLQUFLLENBQUNJLEtBQTNCLENBQW5CO0FBRUFDLElBQUFBLEtBQUssQ0FBQzVCLEdBQUQsRUFBTSxNQUFOLENBQUw7QUFFQUEsSUFBQUEsR0FBRyxDQUFDaUIsWUFBSixDQUFpQkksVUFBakIsQ0FBNEJJLFVBQTVCO0FBQ0FiLElBQUFBLE1BQU0sQ0FBQ1osR0FBRyxDQUFDNkIsSUFBTCxDQUFOLENBQWlCQyxvQkFBakIsQ0FBc0NkLElBQUksQ0FBQ08sS0FBTCxDQUFXSSxLQUFqRCxFQUF3REYsVUFBVSxDQUFDRixLQUFYLENBQWlCSSxLQUF6RTtBQUNILEdBZEMsQ0FBRjtBQWdCSCxDQXRDTyxDQUFSO0FBd0NBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBLaG1lckNoZXNzQm9hcmQgZnJvbSBcIi4vS2htZXJDaGVzc0JvYXJkXCI7XG5cbmRlc2NyaWJlKFwiS2htZXJDaGVzc0JvYXJkXCIsIGZ1bmN0aW9uICgpIHtcbiAgICBsZXQga2NiOiBLaG1lckNoZXNzQm9hcmQgPSBudWxsO1xuXG4gICAgYmVmb3JlQWxsKCgpID0+IHtcbiAgICAgICAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjb250YWluZXIpO1xuICAgICAgICBrY2IgPSBuZXcgS2htZXJDaGVzc0JvYXJkKCk7XG4gICAgICAgIGtjYi5zZXRPcHRpb25zKHtcbiAgICAgICAgICAgIHdpZHRoOiA2MDAsXG4gICAgICAgICAgICBjb250YWluZXJcbiAgICAgICAgfSk7XG4gICAgICAgIGtjYi5zdGFydCgpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBiZSBmdW5jdGlvbicsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KHR5cGVvZiBLaG1lckNoZXNzQm9hcmQpLnRvRXF1YWwoJ2Z1bmN0aW9uJyk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIGhhcyBjbGFzcycsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KHR5cGVvZiBrY2Iub3B0aW9ucy51bmlxdWVDbGFzc05hbWUpLnRvRXF1YWwoJ3N0cmluZycpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBtb3ZlJywgKCkgPT4ge1xuICAgICAgICBjb25zdCBjZWxsID0ga2NiLmJvYXJkTWFuYWdlci5waWVjZUluVHVybkNlbGxzWzBdO1xuICAgICAgICBleHBlY3QoY2VsbC5pc0NhblNlbGVjdCkudG9CZVRydWUoKTtcbiAgICAgICAga2NiLmJvYXJkTWFuYWdlci5zZWxlY3RDZWxsKGNlbGwpO1xuICAgICAgICBleHBlY3QoY2VsbC5pc1NlbGVjdGVkKS50b0JlVHJ1ZSgpO1xuXG4gICAgICAgIGNvbnN0IHBvaW50ID0gY2VsbC5jYW5Nb3ZlUG9pbnRzWzBdO1xuXG4gICAgICAgIGNvbnN0IHRhcmdldENlbGwgPSBrY2IuYm9hcmRNYW5hZ2VyLmdldChwb2ludC5pbmRleCk7XG5cbiAgICAgICAgc3B5T24oa2NiLCAnbW92ZScpO1xuXG4gICAgICAgIGtjYi5ib2FyZE1hbmFnZXIuc2VsZWN0Q2VsbCh0YXJnZXRDZWxsKTtcbiAgICAgICAgZXhwZWN0KGtjYi5tb3ZlKS50b0hhdmVCZWVuQ2FsbGVkV2l0aChjZWxsLnBvaW50LmluZGV4LCB0YXJnZXRDZWxsLnBvaW50LmluZGV4KTtcbiAgICB9KTtcblxufSk7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjEsIEs0dXNcbiAqIEF1dGhvcjogUmFrc2EgRW5nIDxlbmcucmFrc2FAZ21haWwuY29tPlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBSZWRpc3RyaWJ1dGlvbiBhbmQgdXNlIGluIHNvdXJjZSBhbmQgYmluYXJ5IGZvcm1zLCB3aXRoIG9yIHdpdGhvdXRcbiAqIG1vZGlmaWNhdGlvbiwgYXJlIHBlcm1pdHRlZCBwcm92aWRlZCB0aGF0IHRoZSBmb2xsb3dpbmcgY29uZGl0aW9ucyBhcmUgbWV0OlxuICpcbiAqIDEuIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSxcbiAqICAgIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuXG4gKiAyLiBSZWRpc3RyaWJ1dGlvbnMgaW4gYmluYXJ5IGZvcm0gbXVzdCByZXByb2R1Y2UgdGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UsXG4gKiAgICB0aGlzIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyIGluIHRoZSBkb2N1bWVudGF0aW9uXG4gKiAgICBhbmQvb3Igb3RoZXIgbWF0ZXJpYWxzIHByb3ZpZGVkIHdpdGggdGhlIGRpc3RyaWJ1dGlvbi5cbiAqXG4gKiBUSElTIFNPRlRXQVJFIElTIFBST1ZJREVEIEJZIFRIRSBDT1BZUklHSFQgSE9MREVSUyBBTkQgQ09OVFJJQlVUT1JTICdBUyBJUydcbiAqIEFORCBBTlkgRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEVcbiAqIElNUExJRUQgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFXG4gKiBBUkUgRElTQ0xBSU1FRC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIENPUFlSSUdIVCBPV05FUiBPUiBDT05UUklCVVRPUlMgQkVcbiAqIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsIElOQ0lERU5UQUwsIFNQRUNJQUwsIEVYRU1QTEFSWSwgT1JcbiAqIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFBST0NVUkVNRU5UIE9GXG4gKiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUzsgT1IgQlVTSU5FU1NcbiAqIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSIElOXG4gKiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKVxuICogQVJJU0lORyBJTiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEVcbiAqIFBPU1NJQklMSVRZIE9GIFNVQ0ggREFNQUdFLlxuICpcbiAqKi8iXX0=