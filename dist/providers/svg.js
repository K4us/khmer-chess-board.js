"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.genBackgroundNote = genBackgroundNote;
exports.svgCSS = exports.PIECES_SVG = exports.WOOD_COLORS = void 0;

var _khmerChess = require("khmer-chess");

var _types = require("k4us-share/types");

var _PIECES_SVG;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var WOOD_COLORS = {
  WHITE: '#ffffff',
  BLACK: '#422007'
};
exports.WOOD_COLORS = WOOD_COLORS;
var filterId = 'drop-shadow';
var SVG_FILTER = "<defs>\n<filter id=\"".concat(filterId, "\" height=\"130%\">\n  <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"5\"/>\n  <feOffset dx=\"5\" dy=\"5\" result=\"offsetblur\"/>\n  <feMerge>\n    <feMergeNode/>\n    <feMergeNode in=\"SourceGraphic\"/>\n  </feMerge>\n</filter>\n</defs>");

_types.boatSVG.init();

_types.horseSVG.init();

_types.generalSVG.init();

_types.kingSVG.init();

_types.queenSVG.init();

_types.fishSVG.init();

_types.transformFishSVG.init();

var PIECES_SVG = (_PIECES_SVG = {}, _defineProperty(_PIECES_SVG, "".concat(_khmerChess.PIECE_COLOR_WHITE).concat(_khmerChess.PIECE_TYPE_BOAT), "\n    ".concat(SVG_FILTER, "\n    <path fill=\"").concat(WOOD_COLORS.WHITE, "\" filter=\"url(#").concat(filterId, ")\"\n    d=\"").concat(_types.boatSVG.pathData[0], "\" />\n ")), _defineProperty(_PIECES_SVG, "".concat(_khmerChess.PIECE_COLOR_WHITE).concat(_khmerChess.PIECE_TYPE_HORSE), "\n    ".concat(SVG_FILTER, "\n    <path fill=\"").concat(WOOD_COLORS.WHITE, "\" filter=\"url(#").concat(filterId, ")\"\n    d=\"").concat(_types.horseSVG.pathData[0], "\" />\n ")), _defineProperty(_PIECES_SVG, "".concat(_khmerChess.PIECE_COLOR_WHITE).concat(_khmerChess.PIECE_TYPE_GENERAL), "\n    ".concat(SVG_FILTER, "\n    <path fill=\"").concat(WOOD_COLORS.WHITE, "\" filter=\"url(#").concat(filterId, ")\"\n    d=\"").concat(_types.generalSVG.pathData[0], "\" />\n ")), _defineProperty(_PIECES_SVG, "".concat(_khmerChess.PIECE_COLOR_WHITE).concat(_khmerChess.PIECE_TYPE_KING), "\n    ".concat(SVG_FILTER, "\n    <path fill=\"").concat(WOOD_COLORS.WHITE, "\" filter=\"url(#").concat(filterId, ")\"\n    d=\"").concat(_types.kingSVG.pathData[0], "\" />\n ")), _defineProperty(_PIECES_SVG, "".concat(_khmerChess.PIECE_COLOR_WHITE).concat(_khmerChess.PIECE_TYPE_QUEEN), "\n    ".concat(SVG_FILTER, "\n    <path fill=\"").concat(WOOD_COLORS.WHITE, "\" filter=\"url(#").concat(filterId, ")\"\n    d=\"").concat(_types.queenSVG.pathData[0], "\" />\n ")), _defineProperty(_PIECES_SVG, "".concat(_khmerChess.PIECE_COLOR_WHITE).concat(_khmerChess.PIECE_TYPE_FISH), "\n    ".concat(SVG_FILTER, "\n    <path fill=\"").concat(WOOD_COLORS.WHITE, "\" filter=\"url(#").concat(filterId, ")\"\n    d=\"").concat(_types.fishSVG.pathData[0], "\" />\n ")), _defineProperty(_PIECES_SVG, "".concat(_khmerChess.PIECE_COLOR_WHITE).concat(_khmerChess.PIECE_TYPE_TRANSFORM_FISH), "\n    ".concat(SVG_FILTER, "\n     <path fill=\"").concat(WOOD_COLORS.WHITE, "\" filter=\"url(#").concat(filterId, ")\"\n     d=\"").concat(_types.transformFishSVG.pathData[0], "\" />\n ")), _defineProperty(_PIECES_SVG, "".concat(_khmerChess.PIECE_COLOR_BLACK).concat(_khmerChess.PIECE_TYPE_BOAT), "\n    ".concat(SVG_FILTER, "\n    <path fill=\"").concat(WOOD_COLORS.BLACK, "\" filter=\"url(#").concat(filterId, ")\"\n    d=\"").concat(_types.boatSVG.pathData[0], "\" />\n ")), _defineProperty(_PIECES_SVG, "".concat(_khmerChess.PIECE_COLOR_BLACK).concat(_khmerChess.PIECE_TYPE_HORSE), "\n    ".concat(SVG_FILTER, "\n    <path fill=\"").concat(WOOD_COLORS.BLACK, "\" filter=\"url(#").concat(filterId, ")\"\n    d=\"").concat(_types.horseSVG.pathData[0], "\" />\n ")), _defineProperty(_PIECES_SVG, "".concat(_khmerChess.PIECE_COLOR_BLACK).concat(_khmerChess.PIECE_TYPE_GENERAL), "\n    ".concat(SVG_FILTER, "\n    <path fill=\"").concat(WOOD_COLORS.BLACK, "\" filter=\"url(#").concat(filterId, ")\"\n    d=\"").concat(_types.generalSVG.pathData[0], "\" />\n ")), _defineProperty(_PIECES_SVG, "".concat(_khmerChess.PIECE_COLOR_BLACK).concat(_khmerChess.PIECE_TYPE_KING), "\n    ".concat(SVG_FILTER, "\n    <path fill=\"").concat(WOOD_COLORS.BLACK, "\" filter=\"url(#").concat(filterId, ")\"\n    d=\"").concat(_types.kingSVG.pathData[0], "\" />\n ")), _defineProperty(_PIECES_SVG, "".concat(_khmerChess.PIECE_COLOR_BLACK).concat(_khmerChess.PIECE_TYPE_QUEEN), "\n    ".concat(SVG_FILTER, "\n    <path fill=\"").concat(WOOD_COLORS.BLACK, "\" filter=\"url(#").concat(filterId, ")\"\n    d=\"").concat(_types.queenSVG.pathData[0], "\" />\n ")), _defineProperty(_PIECES_SVG, "".concat(_khmerChess.PIECE_COLOR_BLACK).concat(_khmerChess.PIECE_TYPE_FISH), "\n    ".concat(SVG_FILTER, "\n    <path fill=\"").concat(WOOD_COLORS.BLACK, "\" filter=\"url(#").concat(filterId, ")\"\n    d=\"").concat(_types.fishSVG.pathData[0], "\" />\n ")), _defineProperty(_PIECES_SVG, "".concat(_khmerChess.PIECE_COLOR_BLACK).concat(_khmerChess.PIECE_TYPE_TRANSFORM_FISH), "\n    ".concat(SVG_FILTER, "\n    <path fill=\"").concat(WOOD_COLORS.BLACK, "\" filter=\"url(#").concat(filterId, ")\"\n    d=\"").concat(_types.transformFishSVG.pathData[0], "\" />\n ")), _PIECES_SVG);
exports.PIECES_SVG = PIECES_SVG;
var svgCSS = {
  attacked: function attacked(color) {
    return "path {\n      stroke: red;\n      stroke-width: 1px;\n      stroke-linejoin: round;\n      animation-name: attacking;\n      animation-duration: 1s;\n      animation-iteration-count: infinite;\n   }\n   @keyframes attacking {\n      0% {\n         stroke-width: 20px;\n      }\n      50% {\n         stroke-width: 1px;\n      }\n      100% {\n         stroke-width: 20px;\n      }\n   }";
  },
  notAttacked: function notAttacked(color) {
    return "path {\n   }";
  },
  turn: function turn(color) {
    return "path {\n      stroke: #3d8a365f;\n      stroke-width: 10px;\n      stroke-linejoin: round;\n   }\n   ";
  },
  selected: function selected(color) {
    return 'background: radial-gradient(#ff00f577, #3d8a3677) !important;';
  },
  moved: function moved(color) {
    return 'background: radial-gradient(#c0aeee99, #94e9d788) !important;';
  },
  canMove: function canMove(color) {
    return 'background: radial-gradient(#ff00f500, #3d8a3677) !important;';
  }
};
exports.svgCSS = svgCSS;

function genBackgroundNote(tObjects, cellWidth, fSize) {
  var text = tObjects.map(function (obj) {
    return "<text x='".concat(obj.x, "' y='").concat(obj.y, "' fill='grey' font-size='").concat(fSize, "'>").concat(obj.t, "</text>");
  }).join('');
  var svg = "<svg xmlns='http://www.w3.org/2000/svg' version='1.1' height='".concat(cellWidth, "px' width='").concat(cellWidth, "px'>\n      ").concat(text, "\n   </svg>");
  return "url(\"data:image/svg+xml;utf8,".concat(encodeURIComponent(svg), "\")");
}
/*
 * Copyright (c) 2021, K4us
 * Author: Raksa Eng <eng.raksa@gmail.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 **/
//# sourceMappingURL=data:application/json;charset=utf-8;base64,